// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/EGT-Ukraine/go2gql/tests/dataloader/generated/clients/apis (interfaces: ItemsReviewServiceClient)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	apis "github.com/EGT-Ukraine/go2gql/tests/dataloader/generated/clients/apis"
	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
	reflect "reflect"
)

// MockItemsReviewServiceClient is a mock of ItemsReviewServiceClient interface
type MockItemsReviewServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockItemsReviewServiceClientMockRecorder
}

// MockItemsReviewServiceClientMockRecorder is the mock recorder for MockItemsReviewServiceClient
type MockItemsReviewServiceClientMockRecorder struct {
	mock *MockItemsReviewServiceClient
}

// NewMockItemsReviewServiceClient creates a new mock instance
func NewMockItemsReviewServiceClient(ctrl *gomock.Controller) *MockItemsReviewServiceClient {
	mock := &MockItemsReviewServiceClient{ctrl: ctrl}
	mock.recorder = &MockItemsReviewServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockItemsReviewServiceClient) EXPECT() *MockItemsReviewServiceClientMockRecorder {
	return m.recorder
}

// List mocks base method
func (m *MockItemsReviewServiceClient) List(arg0 context.Context, arg1 *apis.ListRequest, arg2 ...grpc.CallOption) (*apis.ListResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "List", varargs...)
	ret0, _ := ret[0].(*apis.ListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockItemsReviewServiceClientMockRecorder) List(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockItemsReviewServiceClient)(nil).List), varargs...)
}
