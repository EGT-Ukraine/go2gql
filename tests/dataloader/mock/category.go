// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/EGT-Ukraine/go2gql/tests/dataloader/generated/clients/apis (interfaces: CategoryServiceClient)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	apis "github.com/EGT-Ukraine/go2gql/tests/dataloader/generated/clients/apis"
	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
	reflect "reflect"
)

// MockCategoryServiceClient is a mock of CategoryServiceClient interface
type MockCategoryServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockCategoryServiceClientMockRecorder
}

// MockCategoryServiceClientMockRecorder is the mock recorder for MockCategoryServiceClient
type MockCategoryServiceClientMockRecorder struct {
	mock *MockCategoryServiceClient
}

// NewMockCategoryServiceClient creates a new mock instance
func NewMockCategoryServiceClient(ctrl *gomock.Controller) *MockCategoryServiceClient {
	mock := &MockCategoryServiceClient{ctrl: ctrl}
	mock.recorder = &MockCategoryServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCategoryServiceClient) EXPECT() *MockCategoryServiceClientMockRecorder {
	return m.recorder
}

// List mocks base method
func (m *MockCategoryServiceClient) List(arg0 context.Context, arg1 *apis.CategoryListRequest, arg2 ...grpc.CallOption) (*apis.CategoryListResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{arg0, arg1}
	for _, a := range arg2 {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "List", varargs...)
	ret0, _ := ret[0].(*apis.CategoryListResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List
func (mr *MockCategoryServiceClientMockRecorder) List(arg0, arg1 interface{}, arg2 ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{arg0, arg1}, arg2...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockCategoryServiceClient)(nil).List), varargs...)
}
