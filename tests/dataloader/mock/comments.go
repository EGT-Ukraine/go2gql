// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/EGT-Ukraine/go2gql/tests/dataloader/generated/clients/client/comments_controller (interfaces: IClient)

// Package mock is a generated GoMock package.
package mock

import (
	comments_controller "github.com/EGT-Ukraine/go2gql/tests/dataloader/generated/clients/client/comments_controller"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockIClient is a mock of IClient interface
type MockIClient struct {
	ctrl     *gomock.Controller
	recorder *MockIClientMockRecorder
}

// MockIClientMockRecorder is the mock recorder for MockIClient
type MockIClientMockRecorder struct {
	mock *MockIClient
}

// NewMockIClient creates a new mock instance
func NewMockIClient(ctrl *gomock.Controller) *MockIClient {
	mock := &MockIClient{ctrl: ctrl}
	mock.recorder = &MockIClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockIClient) EXPECT() *MockIClientMockRecorder {
	return m.recorder
}

// ItemsComments mocks base method
func (m *MockIClient) ItemsComments(arg0 *comments_controller.ItemsCommentsParams) (*comments_controller.ItemsCommentsOK, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ItemsComments", arg0)
	ret0, _ := ret[0].(*comments_controller.ItemsCommentsOK)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ItemsComments indicates an expected call of ItemsComments
func (mr *MockIClientMockRecorder) ItemsComments(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ItemsComments", reflect.TypeOf((*MockIClient)(nil).ItemsComments), arg0)
}
