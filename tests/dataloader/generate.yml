data_loaders:
  output_path: "./generated/schema/loaders/"

proto2gql:
  output_path: "./generated/schema"
  paths:
    - "vendor"
    - "$GOPATH/src"
  imports_aliases:
    - google/protobuf/empty.proto:      "github.com/golang/protobuf/ptypes/empty/empty.proto"
  files:
    - proto_path: "./apis/reviews.proto"
      services:
        ItemsReviewService:
          methods:
            List:
              unwrap_response_field: true
              data_loader_provider:
                name: "ItemReviewsLoader"
    - proto_path: "./apis/category.proto"
      services:
        CategoryService:
          methods:
            List:
              data_loader_provider:
                name: "CategoryLoader"
                wait_duration_ms: 5

    - proto_path: "./apis/user.proto"
      services:
        UserService:
          methods:
            List:
              data_loader_provider:
                name: "UserLoader"
                wait_duration_ms: 5
    - proto_path: "./apis/items.proto"
      services:
        ItemsService:
          methods:
            List:
              unwrap_response_field: true
              alias: "list"
              request_type: "QUERY"
      messages:
        - "Item$":
            data_loaders:
              - field_name: "category"
                key_field_name: "category_id"
                data_loader_name: "CategoryLoader"
              - field_name: "categories"
                key_field_name: "category_ids"
                key_field_slice: true
                data_loader_name: "CategoryLoader"
              - field_name: "comments"
                key_field_name: "id"
                data_loader_name: "CommentsLoader"
              - field_name: "reviews"
                key_field_name: "id"
                data_loader_name: "ItemReviewsLoader"

swagger2gql:
  output_path: "./generated/schema"
  files:
    - name: "Comments"
      path: "apis/swagger.json"
      models_go_path: "github.com/EGT-Ukraine/go2gql/tests/dataloader/generated/clients/models"
      tags:
        "comments-controller":
          service_name: "CommentsService"
          client_go_package: "github.com/EGT-Ukraine/go2gql/tests/dataloader/generated/clients/client/comments_controller"
          methods:
            "/items/comments/":
              post:
                data_loader_provider:
                  name: "CommentsLoader"
                  wait_duration_ms: 5
      objects:
        - "ItemComment$":
            data_loaders:
              - field_name: "user"
                key_field_name: "user_id"
                data_loader_name: "UserLoader"

graphql_schemas:
  - name: "API"
    output_path: "./generated/schema/api.go"
    output_package: "schema"
    queries:
      type: "OBJECT"
      fields:
        - field: "items"
          object_name: "Items"
          service: "ItemsService"
          type: "SERVICE"
