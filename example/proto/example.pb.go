// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/example.proto

package example

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SomeEnum int32

const (
	SomeEnum_Val1 SomeEnum = 0
	SomeEnum_Val2 SomeEnum = 1
)

var SomeEnum_name = map[int32]string{
	0: "Val1",
	1: "Val2",
}
var SomeEnum_value = map[string]int32{
	"Val1": 0,
	"Val2": 1,
}

func (x SomeEnum) String() string {
	return proto.EnumName(SomeEnum_name, int32(x))
}
func (SomeEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_example_b14d29ace6d111ca, []int{0}
}

type ASomeEnum3 int32

const (
	A_Val5 ASomeEnum3 = 0
	A_Val6 ASomeEnum3 = 1
)

var ASomeEnum3_name = map[int32]string{
	0: "Val5",
	1: "Val6",
}
var ASomeEnum3_value = map[string]int32{
	"Val5": 0,
	"Val6": 1,
}

func (x ASomeEnum3) String() string {
	return proto.EnumName(ASomeEnum3_name, int32(x))
}
func (ASomeEnum3) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_example_b14d29ace6d111ca, []int{0, 0}
}

type A struct {
	MapEnum            map[int32]SomeEnum             `protobuf:"bytes,1,rep,name=map_enum,json=mapEnum,proto3" json:"map_enum,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=example.SomeEnum"`
	MapScalar          map[int32]int32                `protobuf:"bytes,2,rep,name=map_scalar,json=mapScalar,proto3" json:"map_scalar,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MapMsg             map[int32]*timestamp.Timestamp `protobuf:"bytes,3,rep,name=map_msg,json=mapMsg,proto3" json:"map_msg,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RMsg               []*timestamp.Timestamp         `protobuf:"bytes,4,rep,name=r_msg,json=rMsg,proto3" json:"r_msg,omitempty"`
	RScalar            []int32                        `protobuf:"varint,5,rep,packed,name=r_scalar,json=rScalar,proto3" json:"r_scalar,omitempty"`
	REnum              []SomeEnum                     `protobuf:"varint,6,rep,packed,name=r_enum,json=rEnum,proto3,enum=example.SomeEnum" json:"r_enum,omitempty"`
	NREnum             ASomeEnum3                     `protobuf:"varint,7,opt,name=n_r_enum,json=nREnum,proto3,enum=example.ASomeEnum3" json:"n_r_enum,omitempty"`
	NRScalar           int32                          `protobuf:"varint,8,opt,name=n_r_scalar,json=nRScalar,proto3" json:"n_r_scalar,omitempty"`
	NRMsg              *timestamp.Timestamp           `protobuf:"bytes,9,opt,name=n_r_msg,json=nRMsg,proto3" json:"n_r_msg,omitempty"`
	ScalarFromContext  int32                          `protobuf:"varint,10,opt,name=scalar_from_context,json=scalarFromContext,proto3" json:"scalar_from_context,omitempty"`
	EnumFromContext    SomeEnum                       `protobuf:"varint,11,opt,name=enum_from_context,json=enumFromContext,proto3,enum=example.SomeEnum" json:"enum_from_context,omitempty"`
	MessageFromContext *timestamp.Timestamp           `protobuf:"bytes,12,opt,name=message_from_context,json=messageFromContext,proto3" json:"message_from_context,omitempty"`
	//    repeated bytes r_bytes = 13; // TODO
	//    bytes n_r_bytes = 14; // TODO
	MessageWithOneoffs   *AOneOffs `protobuf:"bytes,13,opt,name=message_with_oneoffs,json=messageWithOneoffs,proto3" json:"message_with_oneoffs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *A) Reset()         { *m = A{} }
func (m *A) String() string { return proto.CompactTextString(m) }
func (*A) ProtoMessage()    {}
func (*A) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_b14d29ace6d111ca, []int{0}
}
func (m *A) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_A.Unmarshal(m, b)
}
func (m *A) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_A.Marshal(b, m, deterministic)
}
func (dst *A) XXX_Merge(src proto.Message) {
	xxx_messageInfo_A.Merge(dst, src)
}
func (m *A) XXX_Size() int {
	return xxx_messageInfo_A.Size(m)
}
func (m *A) XXX_DiscardUnknown() {
	xxx_messageInfo_A.DiscardUnknown(m)
}

var xxx_messageInfo_A proto.InternalMessageInfo

func (m *A) GetMapEnum() map[int32]SomeEnum {
	if m != nil {
		return m.MapEnum
	}
	return nil
}

func (m *A) GetMapScalar() map[int32]int32 {
	if m != nil {
		return m.MapScalar
	}
	return nil
}

func (m *A) GetMapMsg() map[int32]*timestamp.Timestamp {
	if m != nil {
		return m.MapMsg
	}
	return nil
}

func (m *A) GetRMsg() []*timestamp.Timestamp {
	if m != nil {
		return m.RMsg
	}
	return nil
}

func (m *A) GetRScalar() []int32 {
	if m != nil {
		return m.RScalar
	}
	return nil
}

func (m *A) GetREnum() []SomeEnum {
	if m != nil {
		return m.REnum
	}
	return nil
}

func (m *A) GetNREnum() ASomeEnum3 {
	if m != nil {
		return m.NREnum
	}
	return A_Val5
}

func (m *A) GetNRScalar() int32 {
	if m != nil {
		return m.NRScalar
	}
	return 0
}

func (m *A) GetNRMsg() *timestamp.Timestamp {
	if m != nil {
		return m.NRMsg
	}
	return nil
}

func (m *A) GetScalarFromContext() int32 {
	if m != nil {
		return m.ScalarFromContext
	}
	return 0
}

func (m *A) GetEnumFromContext() SomeEnum {
	if m != nil {
		return m.EnumFromContext
	}
	return SomeEnum_Val1
}

func (m *A) GetMessageFromContext() *timestamp.Timestamp {
	if m != nil {
		return m.MessageFromContext
	}
	return nil
}

func (m *A) GetMessageWithOneoffs() *AOneOffs {
	if m != nil {
		return m.MessageWithOneoffs
	}
	return nil
}

type AOneOffs struct {
	// Types that are valid to be assigned to FirstEnum:
	//	*AOneOffs_ENREnum
	//	*AOneOffs_ENRScalar
	//	*AOneOffs_ENRMsg
	FirstEnum isAOneOffs_FirstEnum `protobuf_oneof:"firstEnum"`
	// Types that are valid to be assigned to FirstScalar:
	//	*AOneOffs_SNRScalar
	//	*AOneOffs_SNREnum
	//	*AOneOffs_SNRMsg
	FirstScalar isAOneOffs_FirstScalar `protobuf_oneof:"firstScalar"`
	// Types that are valid to be assigned to FirstMessage:
	//	*AOneOffs_MNRMsg
	//	*AOneOffs_MNRScalar
	//	*AOneOffs_MNREnum
	FirstMessage         isAOneOffs_FirstMessage `protobuf_oneof:"firstMessage"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *AOneOffs) Reset()         { *m = AOneOffs{} }
func (m *AOneOffs) String() string { return proto.CompactTextString(m) }
func (*AOneOffs) ProtoMessage()    {}
func (*AOneOffs) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_b14d29ace6d111ca, []int{1}
}
func (m *AOneOffs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AOneOffs.Unmarshal(m, b)
}
func (m *AOneOffs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AOneOffs.Marshal(b, m, deterministic)
}
func (dst *AOneOffs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AOneOffs.Merge(dst, src)
}
func (m *AOneOffs) XXX_Size() int {
	return xxx_messageInfo_AOneOffs.Size(m)
}
func (m *AOneOffs) XXX_DiscardUnknown() {
	xxx_messageInfo_AOneOffs.DiscardUnknown(m)
}

var xxx_messageInfo_AOneOffs proto.InternalMessageInfo

type isAOneOffs_FirstEnum interface {
	isAOneOffs_FirstEnum()
}
type isAOneOffs_FirstScalar interface {
	isAOneOffs_FirstScalar()
}
type isAOneOffs_FirstMessage interface {
	isAOneOffs_FirstMessage()
}

type AOneOffs_ENREnum struct {
	ENREnum SomeEnum `protobuf:"varint,7,opt,name=e_n_r_enum,json=eNREnum,proto3,enum=example.SomeEnum,oneof"`
}
type AOneOffs_ENRScalar struct {
	ENRScalar int32 `protobuf:"varint,8,opt,name=e_n_r_scalar,json=eNRScalar,proto3,oneof"`
}
type AOneOffs_ENRMsg struct {
	ENRMsg *timestamp.Timestamp `protobuf:"bytes,9,opt,name=e_n_r_msg,json=eNRMsg,proto3,oneof"`
}
type AOneOffs_SNRScalar struct {
	SNRScalar int32 `protobuf:"varint,10,opt,name=s_n_r_scalar,json=sNRScalar,proto3,oneof"`
}
type AOneOffs_SNREnum struct {
	SNREnum SomeEnum `protobuf:"varint,11,opt,name=s_n_r_enum,json=sNREnum,proto3,enum=example.SomeEnum,oneof"`
}
type AOneOffs_SNRMsg struct {
	SNRMsg *timestamp.Timestamp `protobuf:"bytes,12,opt,name=s_n_r_msg,json=sNRMsg,proto3,oneof"`
}
type AOneOffs_MNRMsg struct {
	MNRMsg *timestamp.Timestamp `protobuf:"bytes,13,opt,name=m_n_r_msg,json=mNRMsg,proto3,oneof"`
}
type AOneOffs_MNRScalar struct {
	MNRScalar int32 `protobuf:"varint,14,opt,name=m_n_r_scalar,json=mNRScalar,proto3,oneof"`
}
type AOneOffs_MNREnum struct {
	MNREnum SomeEnum `protobuf:"varint,15,opt,name=m_n_r_enum,json=mNREnum,proto3,enum=example.SomeEnum,oneof"`
}

func (*AOneOffs_ENREnum) isAOneOffs_FirstEnum()      {}
func (*AOneOffs_ENRScalar) isAOneOffs_FirstEnum()    {}
func (*AOneOffs_ENRMsg) isAOneOffs_FirstEnum()       {}
func (*AOneOffs_SNRScalar) isAOneOffs_FirstScalar()  {}
func (*AOneOffs_SNREnum) isAOneOffs_FirstScalar()    {}
func (*AOneOffs_SNRMsg) isAOneOffs_FirstScalar()     {}
func (*AOneOffs_MNRMsg) isAOneOffs_FirstMessage()    {}
func (*AOneOffs_MNRScalar) isAOneOffs_FirstMessage() {}
func (*AOneOffs_MNREnum) isAOneOffs_FirstMessage()   {}

func (m *AOneOffs) GetFirstEnum() isAOneOffs_FirstEnum {
	if m != nil {
		return m.FirstEnum
	}
	return nil
}
func (m *AOneOffs) GetFirstScalar() isAOneOffs_FirstScalar {
	if m != nil {
		return m.FirstScalar
	}
	return nil
}
func (m *AOneOffs) GetFirstMessage() isAOneOffs_FirstMessage {
	if m != nil {
		return m.FirstMessage
	}
	return nil
}

func (m *AOneOffs) GetENREnum() SomeEnum {
	if x, ok := m.GetFirstEnum().(*AOneOffs_ENREnum); ok {
		return x.ENREnum
	}
	return SomeEnum_Val1
}

func (m *AOneOffs) GetENRScalar() int32 {
	if x, ok := m.GetFirstEnum().(*AOneOffs_ENRScalar); ok {
		return x.ENRScalar
	}
	return 0
}

func (m *AOneOffs) GetENRMsg() *timestamp.Timestamp {
	if x, ok := m.GetFirstEnum().(*AOneOffs_ENRMsg); ok {
		return x.ENRMsg
	}
	return nil
}

func (m *AOneOffs) GetSNRScalar() int32 {
	if x, ok := m.GetFirstScalar().(*AOneOffs_SNRScalar); ok {
		return x.SNRScalar
	}
	return 0
}

func (m *AOneOffs) GetSNREnum() SomeEnum {
	if x, ok := m.GetFirstScalar().(*AOneOffs_SNREnum); ok {
		return x.SNREnum
	}
	return SomeEnum_Val1
}

func (m *AOneOffs) GetSNRMsg() *timestamp.Timestamp {
	if x, ok := m.GetFirstScalar().(*AOneOffs_SNRMsg); ok {
		return x.SNRMsg
	}
	return nil
}

func (m *AOneOffs) GetMNRMsg() *timestamp.Timestamp {
	if x, ok := m.GetFirstMessage().(*AOneOffs_MNRMsg); ok {
		return x.MNRMsg
	}
	return nil
}

func (m *AOneOffs) GetMNRScalar() int32 {
	if x, ok := m.GetFirstMessage().(*AOneOffs_MNRScalar); ok {
		return x.MNRScalar
	}
	return 0
}

func (m *AOneOffs) GetMNREnum() SomeEnum {
	if x, ok := m.GetFirstMessage().(*AOneOffs_MNREnum); ok {
		return x.MNREnum
	}
	return SomeEnum_Val1
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*AOneOffs) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _AOneOffs_OneofMarshaler, _AOneOffs_OneofUnmarshaler, _AOneOffs_OneofSizer, []interface{}{
		(*AOneOffs_ENREnum)(nil),
		(*AOneOffs_ENRScalar)(nil),
		(*AOneOffs_ENRMsg)(nil),
		(*AOneOffs_SNRScalar)(nil),
		(*AOneOffs_SNREnum)(nil),
		(*AOneOffs_SNRMsg)(nil),
		(*AOneOffs_MNRMsg)(nil),
		(*AOneOffs_MNRScalar)(nil),
		(*AOneOffs_MNREnum)(nil),
	}
}

func _AOneOffs_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*AOneOffs)
	// firstEnum
	switch x := m.FirstEnum.(type) {
	case *AOneOffs_ENREnum:
		b.EncodeVarint(7<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ENREnum))
	case *AOneOffs_ENRScalar:
		b.EncodeVarint(8<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.ENRScalar))
	case *AOneOffs_ENRMsg:
		b.EncodeVarint(9<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.ENRMsg); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AOneOffs.FirstEnum has unexpected type %T", x)
	}
	// firstScalar
	switch x := m.FirstScalar.(type) {
	case *AOneOffs_SNRScalar:
		b.EncodeVarint(10<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.SNRScalar))
	case *AOneOffs_SNREnum:
		b.EncodeVarint(11<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.SNREnum))
	case *AOneOffs_SNRMsg:
		b.EncodeVarint(12<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SNRMsg); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("AOneOffs.FirstScalar has unexpected type %T", x)
	}
	// firstMessage
	switch x := m.FirstMessage.(type) {
	case *AOneOffs_MNRMsg:
		b.EncodeVarint(13<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MNRMsg); err != nil {
			return err
		}
	case *AOneOffs_MNRScalar:
		b.EncodeVarint(14<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.MNRScalar))
	case *AOneOffs_MNREnum:
		b.EncodeVarint(15<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.MNREnum))
	case nil:
	default:
		return fmt.Errorf("AOneOffs.FirstMessage has unexpected type %T", x)
	}
	return nil
}

func _AOneOffs_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*AOneOffs)
	switch tag {
	case 7: // firstEnum.e_n_r_enum
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FirstEnum = &AOneOffs_ENREnum{SomeEnum(x)}
		return true, err
	case 8: // firstEnum.e_n_r_scalar
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FirstEnum = &AOneOffs_ENRScalar{int32(x)}
		return true, err
	case 9: // firstEnum.e_n_r_msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(timestamp.Timestamp)
		err := b.DecodeMessage(msg)
		m.FirstEnum = &AOneOffs_ENRMsg{msg}
		return true, err
	case 10: // firstScalar.s_n_r_scalar
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FirstScalar = &AOneOffs_SNRScalar{int32(x)}
		return true, err
	case 11: // firstScalar.s_n_r_enum
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FirstScalar = &AOneOffs_SNREnum{SomeEnum(x)}
		return true, err
	case 12: // firstScalar.s_n_r_msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(timestamp.Timestamp)
		err := b.DecodeMessage(msg)
		m.FirstScalar = &AOneOffs_SNRMsg{msg}
		return true, err
	case 13: // firstMessage.m_n_r_msg
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(timestamp.Timestamp)
		err := b.DecodeMessage(msg)
		m.FirstMessage = &AOneOffs_MNRMsg{msg}
		return true, err
	case 14: // firstMessage.m_n_r_scalar
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FirstMessage = &AOneOffs_MNRScalar{int32(x)}
		return true, err
	case 15: // firstMessage.m_n_r_enum
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.FirstMessage = &AOneOffs_MNREnum{SomeEnum(x)}
		return true, err
	default:
		return false, nil
	}
}

func _AOneOffs_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*AOneOffs)
	// firstEnum
	switch x := m.FirstEnum.(type) {
	case *AOneOffs_ENREnum:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.ENREnum))
	case *AOneOffs_ENRScalar:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.ENRScalar))
	case *AOneOffs_ENRMsg:
		s := proto.Size(x.ENRMsg)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// firstScalar
	switch x := m.FirstScalar.(type) {
	case *AOneOffs_SNRScalar:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.SNRScalar))
	case *AOneOffs_SNREnum:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.SNREnum))
	case *AOneOffs_SNRMsg:
		s := proto.Size(x.SNRMsg)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// firstMessage
	switch x := m.FirstMessage.(type) {
	case *AOneOffs_MNRMsg:
		s := proto.Size(x.MNRMsg)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *AOneOffs_MNRScalar:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.MNRScalar))
	case *AOneOffs_MNREnum:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.MNREnum))
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type MsgWithEmpty struct {
	EmptyField           *Empty   `protobuf:"bytes,1,opt,name=empty_field,json=emptyField,proto3" json:"empty_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgWithEmpty) Reset()         { *m = MsgWithEmpty{} }
func (m *MsgWithEmpty) String() string { return proto.CompactTextString(m) }
func (*MsgWithEmpty) ProtoMessage()    {}
func (*MsgWithEmpty) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_b14d29ace6d111ca, []int{2}
}
func (m *MsgWithEmpty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgWithEmpty.Unmarshal(m, b)
}
func (m *MsgWithEmpty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgWithEmpty.Marshal(b, m, deterministic)
}
func (dst *MsgWithEmpty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgWithEmpty.Merge(dst, src)
}
func (m *MsgWithEmpty) XXX_Size() int {
	return xxx_messageInfo_MsgWithEmpty.Size(m)
}
func (m *MsgWithEmpty) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgWithEmpty.DiscardUnknown(m)
}

var xxx_messageInfo_MsgWithEmpty proto.InternalMessageInfo

func (m *MsgWithEmpty) GetEmptyField() *Empty {
	if m != nil {
		return m.EmptyField
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_b14d29ace6d111ca, []int{3}
}
func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (dst *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(dst, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type B struct {
	MapEnum              map[int32]SomeEnum             `protobuf:"bytes,1,rep,name=map_enum,json=mapEnum,proto3" json:"map_enum,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=example.SomeEnum"`
	MapScalar            map[int32]int32                `protobuf:"bytes,2,rep,name=map_scalar,json=mapScalar,proto3" json:"map_scalar,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MapMsg               map[int32]*timestamp.Timestamp `protobuf:"bytes,3,rep,name=map_msg,json=mapMsg,proto3" json:"map_msg,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RMsg                 []*timestamp.Timestamp         `protobuf:"bytes,4,rep,name=r_msg,json=rMsg,proto3" json:"r_msg,omitempty"`
	RScalar              []int32                        `protobuf:"varint,5,rep,packed,name=r_scalar,json=rScalar,proto3" json:"r_scalar,omitempty"`
	REnum                []SomeEnum                     `protobuf:"varint,6,rep,packed,name=r_enum,json=rEnum,proto3,enum=example.SomeEnum" json:"r_enum,omitempty"`
	NREnum               SomeEnum                       `protobuf:"varint,7,opt,name=n_r_enum,json=nREnum,proto3,enum=example.SomeEnum" json:"n_r_enum,omitempty"`
	NRScalar             int32                          `protobuf:"varint,8,opt,name=n_r_scalar,json=nRScalar,proto3" json:"n_r_scalar,omitempty"`
	NRMsg                *timestamp.Timestamp           `protobuf:"bytes,9,opt,name=n_r_msg,json=nRMsg,proto3" json:"n_r_msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *B) Reset()         { *m = B{} }
func (m *B) String() string { return proto.CompactTextString(m) }
func (*B) ProtoMessage()    {}
func (*B) Descriptor() ([]byte, []int) {
	return fileDescriptor_example_b14d29ace6d111ca, []int{4}
}
func (m *B) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_B.Unmarshal(m, b)
}
func (m *B) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_B.Marshal(b, m, deterministic)
}
func (dst *B) XXX_Merge(src proto.Message) {
	xxx_messageInfo_B.Merge(dst, src)
}
func (m *B) XXX_Size() int {
	return xxx_messageInfo_B.Size(m)
}
func (m *B) XXX_DiscardUnknown() {
	xxx_messageInfo_B.DiscardUnknown(m)
}

var xxx_messageInfo_B proto.InternalMessageInfo

func (m *B) GetMapEnum() map[int32]SomeEnum {
	if m != nil {
		return m.MapEnum
	}
	return nil
}

func (m *B) GetMapScalar() map[int32]int32 {
	if m != nil {
		return m.MapScalar
	}
	return nil
}

func (m *B) GetMapMsg() map[int32]*timestamp.Timestamp {
	if m != nil {
		return m.MapMsg
	}
	return nil
}

func (m *B) GetRMsg() []*timestamp.Timestamp {
	if m != nil {
		return m.RMsg
	}
	return nil
}

func (m *B) GetRScalar() []int32 {
	if m != nil {
		return m.RScalar
	}
	return nil
}

func (m *B) GetREnum() []SomeEnum {
	if m != nil {
		return m.REnum
	}
	return nil
}

func (m *B) GetNREnum() SomeEnum {
	if m != nil {
		return m.NREnum
	}
	return SomeEnum_Val1
}

func (m *B) GetNRScalar() int32 {
	if m != nil {
		return m.NRScalar
	}
	return 0
}

func (m *B) GetNRMsg() *timestamp.Timestamp {
	if m != nil {
		return m.NRMsg
	}
	return nil
}

func init() {
	proto.RegisterType((*A)(nil), "example.A")
	proto.RegisterMapType((map[int32]SomeEnum)(nil), "example.A.MapEnumEntry")
	proto.RegisterMapType((map[int32]*timestamp.Timestamp)(nil), "example.A.MapMsgEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "example.A.MapScalarEntry")
	proto.RegisterType((*AOneOffs)(nil), "example.AOneOffs")
	proto.RegisterType((*MsgWithEmpty)(nil), "example.MsgWithEmpty")
	proto.RegisterType((*Empty)(nil), "example.Empty")
	proto.RegisterType((*B)(nil), "example.B")
	proto.RegisterMapType((map[int32]SomeEnum)(nil), "example.B.MapEnumEntry")
	proto.RegisterMapType((map[int32]*timestamp.Timestamp)(nil), "example.B.MapMsgEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "example.B.MapScalarEntry")
	proto.RegisterEnum("example.SomeEnum", SomeEnum_name, SomeEnum_value)
	proto.RegisterEnum("example.ASomeEnum3", ASomeEnum3_name, ASomeEnum3_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceExampleClient is the client API for ServiceExample service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceExampleClient interface {
	GetQueryMethod(ctx context.Context, in *AOneOffs, opts ...grpc.CallOption) (*B, error)
	MutationMethod(ctx context.Context, in *B, opts ...grpc.CallOption) (*A, error)
	QueryMethod(ctx context.Context, in *timestamp.Timestamp, opts ...grpc.CallOption) (*timestamp.Timestamp, error)
	GetMutatuionMethod(ctx context.Context, in *MsgWithEmpty, opts ...grpc.CallOption) (*MsgWithEmpty, error)
	GetEmptiesMsg(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
}

type serviceExampleClient struct {
	cc *grpc.ClientConn
}

func NewServiceExampleClient(cc *grpc.ClientConn) ServiceExampleClient {
	return &serviceExampleClient{cc}
}

func (c *serviceExampleClient) GetQueryMethod(ctx context.Context, in *AOneOffs, opts ...grpc.CallOption) (*B, error) {
	out := new(B)
	err := c.cc.Invoke(ctx, "/example.ServiceExample/getQueryMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceExampleClient) MutationMethod(ctx context.Context, in *B, opts ...grpc.CallOption) (*A, error) {
	out := new(A)
	err := c.cc.Invoke(ctx, "/example.ServiceExample/mutationMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceExampleClient) QueryMethod(ctx context.Context, in *timestamp.Timestamp, opts ...grpc.CallOption) (*timestamp.Timestamp, error) {
	out := new(timestamp.Timestamp)
	err := c.cc.Invoke(ctx, "/example.ServiceExample/queryMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceExampleClient) GetMutatuionMethod(ctx context.Context, in *MsgWithEmpty, opts ...grpc.CallOption) (*MsgWithEmpty, error) {
	out := new(MsgWithEmpty)
	err := c.cc.Invoke(ctx, "/example.ServiceExample/getMutatuionMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceExampleClient) GetEmptiesMsg(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/example.ServiceExample/getEmptiesMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceExampleServer is the server API for ServiceExample service.
type ServiceExampleServer interface {
	GetQueryMethod(context.Context, *AOneOffs) (*B, error)
	MutationMethod(context.Context, *B) (*A, error)
	QueryMethod(context.Context, *timestamp.Timestamp) (*timestamp.Timestamp, error)
	GetMutatuionMethod(context.Context, *MsgWithEmpty) (*MsgWithEmpty, error)
	GetEmptiesMsg(context.Context, *Empty) (*Empty, error)
}

func RegisterServiceExampleServer(s *grpc.Server, srv ServiceExampleServer) {
	s.RegisterService(&_ServiceExample_serviceDesc, srv)
}

func _ServiceExample_GetQueryMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AOneOffs)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceExampleServer).GetQueryMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.ServiceExample/GetQueryMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceExampleServer).GetQueryMethod(ctx, req.(*AOneOffs))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceExample_MutationMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(B)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceExampleServer).MutationMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.ServiceExample/MutationMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceExampleServer).MutationMethod(ctx, req.(*B))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceExample_QueryMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(timestamp.Timestamp)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceExampleServer).QueryMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.ServiceExample/QueryMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceExampleServer).QueryMethod(ctx, req.(*timestamp.Timestamp))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceExample_GetMutatuionMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MsgWithEmpty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceExampleServer).GetMutatuionMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.ServiceExample/GetMutatuionMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceExampleServer).GetMutatuionMethod(ctx, req.(*MsgWithEmpty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceExample_GetEmptiesMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceExampleServer).GetEmptiesMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.ServiceExample/GetEmptiesMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceExampleServer).GetEmptiesMsg(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceExample_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.ServiceExample",
	HandlerType: (*ServiceExampleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getQueryMethod",
			Handler:    _ServiceExample_GetQueryMethod_Handler,
		},
		{
			MethodName: "mutationMethod",
			Handler:    _ServiceExample_MutationMethod_Handler,
		},
		{
			MethodName: "queryMethod",
			Handler:    _ServiceExample_QueryMethod_Handler,
		},
		{
			MethodName: "getMutatuionMethod",
			Handler:    _ServiceExample_GetMutatuionMethod_Handler,
		},
		{
			MethodName: "getEmptiesMsg",
			Handler:    _ServiceExample_GetEmptiesMsg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/example.proto",
}

func init() { proto.RegisterFile("proto/example.proto", fileDescriptor_example_b14d29ace6d111ca) }

var fileDescriptor_example_b14d29ace6d111ca = []byte{
	// 819 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe4, 0x55, 0x5d, 0x6f, 0xe3, 0x44,
	0x14, 0xad, 0x93, 0x3a, 0xb6, 0xaf, 0x53, 0x6f, 0x3b, 0x5b, 0x20, 0x6b, 0x21, 0x36, 0x9b, 0x17,
	0x22, 0x90, 0xec, 0xe2, 0x15, 0x74, 0x85, 0x40, 0xa8, 0x59, 0x65, 0x95, 0x07, 0xd2, 0x8a, 0x59,
	0x3e, 0x1e, 0x2d, 0x6f, 0x77, 0xec, 0x5a, 0x64, 0xec, 0xe0, 0x99, 0x2c, 0xdb, 0x9f, 0xc3, 0x13,
	0x7f, 0x8b, 0xff, 0xc1, 0x0b, 0x9a, 0x19, 0xdb, 0x99, 0xb4, 0x69, 0x83, 0x56, 0x42, 0x42, 0xda,
	0xb7, 0xb9, 0x9e, 0x73, 0xce, 0xbd, 0xc7, 0x39, 0xbe, 0x81, 0x87, 0xcb, 0xaa, 0xe4, 0x65, 0x48,
	0xde, 0x26, 0x74, 0xb9, 0x20, 0x81, 0xac, 0x90, 0x55, 0x97, 0xfe, 0xe3, 0xac, 0x2c, 0xb3, 0x05,
	0x09, 0xe5, 0xe3, 0x57, 0xab, 0x34, 0xe4, 0x39, 0x25, 0x8c, 0x27, 0x74, 0xa9, 0x90, 0xa3, 0x3f,
	0x2c, 0x30, 0xce, 0x50, 0x04, 0x36, 0x4d, 0x96, 0x31, 0x29, 0x56, 0x74, 0x60, 0x0c, 0xbb, 0x63,
	0x37, 0xfa, 0x28, 0x68, 0x14, 0xcf, 0x82, 0x79, 0xb2, 0x9c, 0x16, 0x2b, 0x3a, 0x2d, 0x78, 0x75,
	0x8d, 0x2d, 0xaa, 0x2a, 0xf4, 0x0c, 0x40, 0x70, 0xd8, 0x65, 0xb2, 0x48, 0xaa, 0x41, 0x47, 0xb2,
	0x1e, 0x6d, 0xb2, 0x5e, 0xca, 0x3b, 0xc5, 0x73, 0x68, 0x53, 0xa3, 0x10, 0x84, 0x48, 0x4c, 0x59,
	0x36, 0xe8, 0x4a, 0xda, 0x87, 0x9b, 0xb4, 0x39, 0xcb, 0x14, 0xa7, 0x47, 0x65, 0x81, 0x42, 0x30,
	0x2b, 0x09, 0xdf, 0x97, 0x70, 0x3f, 0x50, 0xae, 0x82, 0xc6, 0x55, 0xf0, 0x63, 0xe3, 0x0a, 0xef,
	0x57, 0x82, 0xf0, 0x08, 0xec, 0xaa, 0x99, 0xcc, 0x1c, 0x76, 0xc7, 0x26, 0xb6, 0xaa, 0xba, 0xf9,
	0x18, 0x7a, 0x95, 0x32, 0xda, 0x1b, 0x76, 0xc7, 0x5e, 0x74, 0xd4, 0xf6, 0x66, 0x25, 0x25, 0xc2,
	0x19, 0x36, 0x2b, 0x69, 0x30, 0x00, 0xbb, 0x88, 0x6b, 0xac, 0x35, 0x34, 0xc6, 0x5e, 0x74, 0xac,
	0xcd, 0xd9, 0xa0, 0x9f, 0xe2, 0x5e, 0x81, 0x25, 0xfe, 0x63, 0x00, 0x81, 0xaf, 0xdb, 0xda, 0x43,
	0x63, 0x6c, 0x62, 0xbb, 0xc0, 0x75, 0xdf, 0x08, 0x2c, 0x71, 0x2b, 0x5c, 0x38, 0x43, 0x63, 0x87,
	0x0b, 0xb3, 0xc0, 0xc2, 0x46, 0x00, 0x0f, 0x95, 0x5a, 0x9c, 0x56, 0x25, 0x8d, 0x2f, 0xcb, 0x82,
	0x93, 0xb7, 0x7c, 0x00, 0x52, 0xfa, 0x48, 0x5d, 0xbd, 0xa8, 0x4a, 0xfa, 0x5c, 0x5d, 0xa0, 0x6f,
	0xe1, 0x48, 0x4c, 0xbb, 0x89, 0x76, 0xe5, 0xe8, 0x5b, 0x6c, 0x3e, 0x10, 0x58, 0x9d, 0xfe, 0x3d,
	0x1c, 0x53, 0xc2, 0x58, 0x92, 0x91, 0x4d, 0x85, 0xfe, 0xce, 0x79, 0x51, 0xcd, 0xd3, 0xd5, 0x9e,
	0xaf, 0xd5, 0x7e, 0xcf, 0xf9, 0x55, 0x5c, 0x16, 0xa4, 0x4c, 0x53, 0x36, 0x38, 0x90, 0x6a, 0xeb,
	0x79, 0xce, 0x2e, 0x0a, 0x72, 0x91, 0xa6, 0xac, 0x15, 0xf9, 0x25, 0xe7, 0x57, 0x17, 0x0a, 0xec,
	0xcf, 0xa1, 0xaf, 0xa7, 0x0f, 0x1d, 0x42, 0xf7, 0x57, 0x72, 0x3d, 0x30, 0xe4, 0x1b, 0x10, 0x47,
	0xf4, 0x29, 0x98, 0x6f, 0x92, 0xc5, 0x8a, 0x0c, 0x3a, 0x77, 0xf9, 0x54, 0xf7, 0x5f, 0x77, 0x9e,
	0x19, 0xfe, 0x37, 0xe0, 0x6d, 0xc6, 0x72, 0x8b, 0xe0, 0xb1, 0x2e, 0x68, 0xea, 0xec, 0x9f, 0xc0,
	0xd5, 0xd2, 0xb9, 0x85, 0x7a, 0xa2, 0x53, 0x77, 0xfc, 0xc2, 0xad, 0xec, 0xe8, 0x31, 0x38, 0x6d,
	0x98, 0x90, 0x0d, 0xfb, 0x3f, 0x27, 0x8b, 0x2f, 0x0f, 0xf7, 0xea, 0xd3, 0x57, 0x87, 0xc6, 0xe8,
	0xaf, 0x2e, 0xd8, 0xcd, 0x5b, 0x42, 0x27, 0x00, 0x24, 0xbe, 0x91, 0xcb, 0xdb, 0xa6, 0x67, 0x7b,
	0xd8, 0x22, 0xe7, 0x2a, 0x97, 0x4f, 0xa0, 0xaf, 0x18, 0x7a, 0x32, 0x67, 0x7b, 0xd8, 0x21, 0xe7,
	0x4d, 0x38, 0x4f, 0xc1, 0x51, 0x90, 0x7f, 0x15, 0xcf, 0xd9, 0x1e, 0xee, 0x91, 0x73, 0x99, 0xd0,
	0x27, 0xd0, 0x67, 0xba, 0xb6, 0x8c, 0xe6, 0xcc, 0xc0, 0x0e, 0x6b, 0xb5, 0x4f, 0x00, 0xd8, 0x7a,
	0xe0, 0xbb, 0xd2, 0x38, 0x33, 0xb0, 0xc5, 0xea, 0x81, 0x4f, 0xc1, 0x61, 0xed, 0x34, 0x3b, 0xc3,
	0x37, 0x33, 0x70, 0x8f, 0xa9, 0x69, 0x4e, 0xc1, 0xa1, 0x2d, 0xf1, 0x60, 0x27, 0xb1, 0x83, 0x7b,
	0xb4, 0xb5, 0x41, 0x75, 0x1b, 0x9e, 0xb4, 0xd1, 0xc1, 0x0e, 0xd5, 0x6d, 0xd0, 0xb5, 0x8d, 0x07,
	0x77, 0xd9, 0xe8, 0x60, 0x8b, 0x2a, 0x1b, 0x13, 0x17, 0x9c, 0x34, 0xaf, 0x18, 0x97, 0xc5, 0x01,
	0xb8, 0xb2, 0x50, 0x6a, 0x13, 0x0f, 0xfa, 0xb2, 0x9c, 0xab, 0xc8, 0x8f, 0xbe, 0x83, 0xfe, 0x9c,
	0x65, 0x22, 0xf9, 0x53, 0xba, 0xe4, 0xd7, 0x28, 0x04, 0x97, 0x88, 0x43, 0x9c, 0xe6, 0x64, 0xf1,
	0x5a, 0x66, 0xcc, 0x8d, 0xbc, 0xb6, 0x9d, 0x04, 0x61, 0x90, 0x90, 0x17, 0x02, 0x31, 0xb2, 0xc0,
	0x94, 0x0f, 0x47, 0x7f, 0xef, 0x83, 0x31, 0xb9, 0x77, 0xa1, 0x4f, 0xde, 0x69, 0xa1, 0x4f, 0xde,
	0x6d, 0xa1, 0x4f, 0xfe, 0x47, 0x0b, 0xfd, 0xf3, 0x5b, 0x0b, 0x7d, 0x0b, 0xf6, 0x3f, 0xdb, 0xe6,
	0xef, 0xc3, 0x2e, 0xfb, 0xec, 0x13, 0xb0, 0x9b, 0x59, 0xeb, 0x05, 0xf6, 0x45, 0xbb, 0xca, 0xa2,
	0x43, 0x23, 0xfa, 0xb3, 0x03, 0xde, 0x4b, 0x52, 0xbd, 0xc9, 0x2f, 0xc9, 0x54, 0x79, 0x43, 0x21,
	0x78, 0x19, 0xe1, 0x3f, 0xac, 0x48, 0x75, 0x3d, 0x27, 0xfc, 0xaa, 0x7c, 0x8d, 0x6e, 0xff, 0x37,
	0xf8, 0xb0, 0x0e, 0x14, 0x1a, 0x83, 0x47, 0x57, 0x3c, 0xe1, 0x79, 0x59, 0xd4, 0x04, 0xed, 0x56,
	0x43, 0x9e, 0xa1, 0x29, 0xb8, 0xbf, 0x69, 0xba, 0xf7, 0x78, 0xf0, 0xef, 0xb9, 0x43, 0x13, 0x40,
	0x19, 0xe1, 0x73, 0xd1, 0x73, 0xb5, 0x6e, 0xfa, 0x41, 0xdb, 0x48, 0xff, 0x72, 0xfd, 0xed, 0x8f,
	0x51, 0x08, 0x07, 0x19, 0xe1, 0xe2, 0x9c, 0x13, 0x26, 0x12, 0x7d, 0xe3, 0x63, 0xf6, 0x6f, 0xd4,
	0xaf, 0x7a, 0x72, 0x90, 0xa7, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xc3, 0x12, 0x40, 0xe0,
	0x09, 0x00, 0x00,
}
