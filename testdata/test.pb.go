// Code generated by protoc-gen-go. DO NOT EDIT.
// source: test.proto

package testdata

import (
	fmt "fmt"
	common "github.com/EGT-Ukraine/go2gql/testdata/common"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type RootEnum int32

const (
	RootEnum_RootEnumVal0 RootEnum = 0
	RootEnum_RootEnumVal1 RootEnum = 1
	// It's a RootEnumVal2
	RootEnum_RootEnumVal2 RootEnum = 2
)

var RootEnum_name = map[int32]string{
	0: "RootEnumVal0",
	1: "RootEnumVal1",
	2: "RootEnumVal2",
}

var RootEnum_value = map[string]int32{
	"RootEnumVal0": 0,
	"RootEnumVal1": 1,
	"RootEnumVal2": 2,
}

func (x RootEnum) String() string {
	return proto.EnumName(RootEnum_name, int32(x))
}

func (RootEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

type RootMessage_NestedEnum int32

const (
	RootMessage_NestedEnumVal0 RootMessage_NestedEnum = 0
	RootMessage_NestedEnumVal1 RootMessage_NestedEnum = 1
)

var RootMessage_NestedEnum_name = map[int32]string{
	0: "NestedEnumVal0",
	1: "NestedEnumVal1",
}

var RootMessage_NestedEnum_value = map[string]int32{
	"NestedEnumVal0": 0,
	"NestedEnumVal1": 1,
}

func (x RootMessage_NestedEnum) String() string {
	return proto.EnumName(RootMessage_NestedEnum_name, int32(x))
}

func (RootMessage_NestedEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0, 0}
}

type RootMessage_NestedMessage_NestedNestedEnum int32

const (
	RootMessage_NestedMessage_NestedNestedEnumVal0 RootMessage_NestedMessage_NestedNestedEnum = 0
	RootMessage_NestedMessage_NestedNestedEnumVal1 RootMessage_NestedMessage_NestedNestedEnum = 1
	RootMessage_NestedMessage_NestedNestedEnumVal2 RootMessage_NestedMessage_NestedNestedEnum = 2
	RootMessage_NestedMessage_NestedNestedEnumVal3 RootMessage_NestedMessage_NestedNestedEnum = 3
)

var RootMessage_NestedMessage_NestedNestedEnum_name = map[int32]string{
	0: "NestedNestedEnumVal0",
	1: "NestedNestedEnumVal1",
	2: "NestedNestedEnumVal2",
	3: "NestedNestedEnumVal3",
}

var RootMessage_NestedMessage_NestedNestedEnum_value = map[string]int32{
	"NestedNestedEnumVal0": 0,
	"NestedNestedEnumVal1": 1,
	"NestedNestedEnumVal2": 2,
	"NestedNestedEnumVal3": 3,
}

func (x RootMessage_NestedMessage_NestedNestedEnum) String() string {
	return proto.EnumName(RootMessage_NestedMessage_NestedNestedEnum_name, int32(x))
}

func (RootMessage_NestedMessage_NestedNestedEnum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0, 0, 0}
}

type RootMessage struct {
	// enum_map
	MapEnum map[int32]RootMessage_NestedEnum `protobuf:"bytes,1,rep,name=map_enum,json=mapEnum,proto3" json:"map_enum,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=example.package.RootMessage_NestedEnum"`
	// scalar map
	MapScalar  map[int32]int32                       `protobuf:"bytes,28,rep,name=map_scalar,json=mapScalar,proto3" json:"map_scalar,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	MapMsg     map[string]*RootMessage_NestedMessage `protobuf:"bytes,2,rep,name=map_msg,json=mapMsg,proto3" json:"map_msg,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CtxMap     map[string]*RootMessage_NestedMessage `protobuf:"bytes,30,rep,name=ctx_map,json=ctxMap,proto3" json:"ctx_map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CtxMapEnum map[string]RootMessage_NestedEnum     `protobuf:"bytes,31,rep,name=ctx_map_enum,json=ctxMapEnum,proto3" json:"ctx_map_enum,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=example.package.RootMessage_NestedEnum"`
	// repeated Message
	RMsg []*RootMessage_NestedMessage `protobuf:"bytes,3,rep,name=r_msg,json=rMsg,proto3" json:"r_msg,omitempty"`
	// repeated Scalar
	RScalar []int32 `protobuf:"varint,4,rep,packed,name=r_scalar,json=rScalar,proto3" json:"r_scalar,omitempty"`
	// repeated Enum
	REnum []RootEnum `protobuf:"varint,5,rep,packed,name=r_enum,json=rEnum,proto3,enum=example.package.RootEnum" json:"r_enum,omitempty"`
	// repeated empty message
	REmptyMsg []*Empty `protobuf:"bytes,6,rep,name=r_empty_msg,json=rEmptyMsg,proto3" json:"r_empty_msg,omitempty"`
	// non-repeated Enum
	NREnum common.CommonEnum `protobuf:"varint,7,opt,name=n_r_enum,json=nREnum,proto3,enum=common.CommonEnum" json:"n_r_enum,omitempty"`
	// non-repeated Scalar
	NRScalar int32 `protobuf:"varint,8,opt,name=n_r_scalar,json=nRScalar,proto3" json:"n_r_scalar,omitempty"`
	// non-repeated Message
	NRMsg *common.CommonMessage `protobuf:"bytes,9,opt,name=n_r_msg,json=nRMsg,proto3" json:"n_r_msg,omitempty"`
	// field from context
	ScalarFromContext int32 `protobuf:"varint,10,opt,name=scalar_from_context,json=scalarFromContext,proto3" json:"scalar_from_context,omitempty"`
	// non-repeated empty message field
	NREmptyMsg *Empty `protobuf:"bytes,11,opt,name=n_r_empty_msg,json=nREmptyMsg,proto3" json:"n_r_empty_msg,omitempty"`
	// Types that are valid to be assigned to EnumFirstOneoff:
	//	*RootMessage_EFOE
	//	*RootMessage_EFOS
	//	*RootMessage_EFOM
	//	*RootMessage_EFOEm
	EnumFirstOneoff isRootMessage_EnumFirstOneoff `protobuf_oneof:"enum_first_oneoff"`
	// Types that are valid to be assigned to ScalarFirstOneoff:
	//	*RootMessage_SFOS
	//	*RootMessage_SFOE
	//	*RootMessage_SFOMes
	//	*RootMessage_SFOM
	ScalarFirstOneoff isRootMessage_ScalarFirstOneoff `protobuf_oneof:"scalar_first_oneoff"`
	// Types that are valid to be assigned to MessageFirstOneoff:
	//	*RootMessage_MFOM
	//	*RootMessage_MFOS
	//	*RootMessage_MFOE
	//	*RootMessage_MFOEm
	MessageFirstOneoff isRootMessage_MessageFirstOneoff `protobuf_oneof:"message_first_oneoff"`
	// Types that are valid to be assigned to EmptyFirstOneoff:
	//	*RootMessage_EmFOEm
	//	*RootMessage_EmFOS
	//	*RootMessage_EmFOEn
	//	*RootMessage_EmFOM
	EmptyFirstOneoff isRootMessage_EmptyFirstOneoff `protobuf_oneof:"empty_first_oneoff"`
	// leading dot in type name
	LeadingDot *common.CommonMessage `protobuf:"bytes,29,opt,name=leading_dot,json=leadingDot,proto3" json:"leading_dot,omitempty"`
	// parent scope
	ParentScope          ParentScopeEnum       `protobuf:"varint,32,opt,name=parent_scope,json=parentScope,proto3,enum=example.test_scope.ParentScopeEnum" json:"parent_scope,omitempty"`
	Proto2Message        *common.Proto2Message `protobuf:"bytes,33,opt,name=proto2message,proto3" json:"proto2message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *RootMessage) Reset()         { *m = RootMessage{} }
func (m *RootMessage) String() string { return proto.CompactTextString(m) }
func (*RootMessage) ProtoMessage()    {}
func (*RootMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0}
}

func (m *RootMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootMessage.Unmarshal(m, b)
}
func (m *RootMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootMessage.Marshal(b, m, deterministic)
}
func (m *RootMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootMessage.Merge(m, src)
}
func (m *RootMessage) XXX_Size() int {
	return xxx_messageInfo_RootMessage.Size(m)
}
func (m *RootMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RootMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RootMessage proto.InternalMessageInfo

func (m *RootMessage) GetMapEnum() map[int32]RootMessage_NestedEnum {
	if m != nil {
		return m.MapEnum
	}
	return nil
}

func (m *RootMessage) GetMapScalar() map[int32]int32 {
	if m != nil {
		return m.MapScalar
	}
	return nil
}

func (m *RootMessage) GetMapMsg() map[string]*RootMessage_NestedMessage {
	if m != nil {
		return m.MapMsg
	}
	return nil
}

func (m *RootMessage) GetCtxMap() map[string]*RootMessage_NestedMessage {
	if m != nil {
		return m.CtxMap
	}
	return nil
}

func (m *RootMessage) GetCtxMapEnum() map[string]RootMessage_NestedEnum {
	if m != nil {
		return m.CtxMapEnum
	}
	return nil
}

func (m *RootMessage) GetRMsg() []*RootMessage_NestedMessage {
	if m != nil {
		return m.RMsg
	}
	return nil
}

func (m *RootMessage) GetRScalar() []int32 {
	if m != nil {
		return m.RScalar
	}
	return nil
}

func (m *RootMessage) GetREnum() []RootEnum {
	if m != nil {
		return m.REnum
	}
	return nil
}

func (m *RootMessage) GetREmptyMsg() []*Empty {
	if m != nil {
		return m.REmptyMsg
	}
	return nil
}

func (m *RootMessage) GetNREnum() common.CommonEnum {
	if m != nil {
		return m.NREnum
	}
	return common.CommonEnum_CommonEnumVal0
}

func (m *RootMessage) GetNRScalar() int32 {
	if m != nil {
		return m.NRScalar
	}
	return 0
}

func (m *RootMessage) GetNRMsg() *common.CommonMessage {
	if m != nil {
		return m.NRMsg
	}
	return nil
}

func (m *RootMessage) GetScalarFromContext() int32 {
	if m != nil {
		return m.ScalarFromContext
	}
	return 0
}

func (m *RootMessage) GetNREmptyMsg() *Empty {
	if m != nil {
		return m.NREmptyMsg
	}
	return nil
}

type isRootMessage_EnumFirstOneoff interface {
	isRootMessage_EnumFirstOneoff()
}

type RootMessage_EFOE struct {
	EFOE common.CommonEnum `protobuf:"varint,12,opt,name=e_f_o_e,json=eFOE,proto3,enum=common.CommonEnum,oneof"`
}

type RootMessage_EFOS struct {
	EFOS int32 `protobuf:"varint,13,opt,name=e_f_o_s,json=eFOS,proto3,oneof"`
}

type RootMessage_EFOM struct {
	EFOM *common.CommonMessage `protobuf:"bytes,14,opt,name=e_f_o_m,json=eFOM,proto3,oneof"`
}

type RootMessage_EFOEm struct {
	EFOEm *Empty `protobuf:"bytes,15,opt,name=e_f_o_em,json=eFOEm,proto3,oneof"`
}

func (*RootMessage_EFOE) isRootMessage_EnumFirstOneoff() {}

func (*RootMessage_EFOS) isRootMessage_EnumFirstOneoff() {}

func (*RootMessage_EFOM) isRootMessage_EnumFirstOneoff() {}

func (*RootMessage_EFOEm) isRootMessage_EnumFirstOneoff() {}

func (m *RootMessage) GetEnumFirstOneoff() isRootMessage_EnumFirstOneoff {
	if m != nil {
		return m.EnumFirstOneoff
	}
	return nil
}

func (m *RootMessage) GetEFOE() common.CommonEnum {
	if x, ok := m.GetEnumFirstOneoff().(*RootMessage_EFOE); ok {
		return x.EFOE
	}
	return common.CommonEnum_CommonEnumVal0
}

func (m *RootMessage) GetEFOS() int32 {
	if x, ok := m.GetEnumFirstOneoff().(*RootMessage_EFOS); ok {
		return x.EFOS
	}
	return 0
}

func (m *RootMessage) GetEFOM() *common.CommonMessage {
	if x, ok := m.GetEnumFirstOneoff().(*RootMessage_EFOM); ok {
		return x.EFOM
	}
	return nil
}

func (m *RootMessage) GetEFOEm() *Empty {
	if x, ok := m.GetEnumFirstOneoff().(*RootMessage_EFOEm); ok {
		return x.EFOEm
	}
	return nil
}

type isRootMessage_ScalarFirstOneoff interface {
	isRootMessage_ScalarFirstOneoff()
}

type RootMessage_SFOS struct {
	SFOS int32 `protobuf:"varint,16,opt,name=s_f_o_s,json=sFOS,proto3,oneof"`
}

type RootMessage_SFOE struct {
	SFOE RootEnum `protobuf:"varint,17,opt,name=s_f_o_e,json=sFOE,proto3,enum=example.package.RootEnum,oneof"`
}

type RootMessage_SFOMes struct {
	SFOMes *RootMessage2 `protobuf:"bytes,18,opt,name=s_f_o_mes,json=sFOMes,proto3,oneof"`
}

type RootMessage_SFOM struct {
	SFOM *Empty `protobuf:"bytes,19,opt,name=s_f_o_m,json=sFOM,proto3,oneof"`
}

func (*RootMessage_SFOS) isRootMessage_ScalarFirstOneoff() {}

func (*RootMessage_SFOE) isRootMessage_ScalarFirstOneoff() {}

func (*RootMessage_SFOMes) isRootMessage_ScalarFirstOneoff() {}

func (*RootMessage_SFOM) isRootMessage_ScalarFirstOneoff() {}

func (m *RootMessage) GetScalarFirstOneoff() isRootMessage_ScalarFirstOneoff {
	if m != nil {
		return m.ScalarFirstOneoff
	}
	return nil
}

func (m *RootMessage) GetSFOS() int32 {
	if x, ok := m.GetScalarFirstOneoff().(*RootMessage_SFOS); ok {
		return x.SFOS
	}
	return 0
}

func (m *RootMessage) GetSFOE() RootEnum {
	if x, ok := m.GetScalarFirstOneoff().(*RootMessage_SFOE); ok {
		return x.SFOE
	}
	return RootEnum_RootEnumVal0
}

func (m *RootMessage) GetSFOMes() *RootMessage2 {
	if x, ok := m.GetScalarFirstOneoff().(*RootMessage_SFOMes); ok {
		return x.SFOMes
	}
	return nil
}

func (m *RootMessage) GetSFOM() *Empty {
	if x, ok := m.GetScalarFirstOneoff().(*RootMessage_SFOM); ok {
		return x.SFOM
	}
	return nil
}

type isRootMessage_MessageFirstOneoff interface {
	isRootMessage_MessageFirstOneoff()
}

type RootMessage_MFOM struct {
	MFOM *RootMessage2 `protobuf:"bytes,20,opt,name=m_f_o_m,json=mFOM,proto3,oneof"`
}

type RootMessage_MFOS struct {
	MFOS int32 `protobuf:"varint,21,opt,name=m_f_o_s,json=mFOS,proto3,oneof"`
}

type RootMessage_MFOE struct {
	MFOE RootEnum `protobuf:"varint,22,opt,name=m_f_o_e,json=mFOE,proto3,enum=example.package.RootEnum,oneof"`
}

type RootMessage_MFOEm struct {
	MFOEm *Empty `protobuf:"bytes,23,opt,name=m_f_o_em,json=mFOEm,proto3,oneof"`
}

func (*RootMessage_MFOM) isRootMessage_MessageFirstOneoff() {}

func (*RootMessage_MFOS) isRootMessage_MessageFirstOneoff() {}

func (*RootMessage_MFOE) isRootMessage_MessageFirstOneoff() {}

func (*RootMessage_MFOEm) isRootMessage_MessageFirstOneoff() {}

func (m *RootMessage) GetMessageFirstOneoff() isRootMessage_MessageFirstOneoff {
	if m != nil {
		return m.MessageFirstOneoff
	}
	return nil
}

func (m *RootMessage) GetMFOM() *RootMessage2 {
	if x, ok := m.GetMessageFirstOneoff().(*RootMessage_MFOM); ok {
		return x.MFOM
	}
	return nil
}

func (m *RootMessage) GetMFOS() int32 {
	if x, ok := m.GetMessageFirstOneoff().(*RootMessage_MFOS); ok {
		return x.MFOS
	}
	return 0
}

func (m *RootMessage) GetMFOE() RootEnum {
	if x, ok := m.GetMessageFirstOneoff().(*RootMessage_MFOE); ok {
		return x.MFOE
	}
	return RootEnum_RootEnumVal0
}

func (m *RootMessage) GetMFOEm() *Empty {
	if x, ok := m.GetMessageFirstOneoff().(*RootMessage_MFOEm); ok {
		return x.MFOEm
	}
	return nil
}

type isRootMessage_EmptyFirstOneoff interface {
	isRootMessage_EmptyFirstOneoff()
}

type RootMessage_EmFOEm struct {
	EmFOEm *Empty `protobuf:"bytes,24,opt,name=em_f_o_em,json=emFOEm,proto3,oneof"`
}

type RootMessage_EmFOS struct {
	EmFOS int32 `protobuf:"varint,25,opt,name=em_f_o_s,json=emFOS,proto3,oneof"`
}

type RootMessage_EmFOEn struct {
	EmFOEn RootEnum `protobuf:"varint,26,opt,name=em_f_o_en,json=emFOEn,proto3,enum=example.package.RootEnum,oneof"`
}

type RootMessage_EmFOM struct {
	EmFOM *RootMessage2 `protobuf:"bytes,27,opt,name=em_f_o_m,json=emFOM,proto3,oneof"`
}

func (*RootMessage_EmFOEm) isRootMessage_EmptyFirstOneoff() {}

func (*RootMessage_EmFOS) isRootMessage_EmptyFirstOneoff() {}

func (*RootMessage_EmFOEn) isRootMessage_EmptyFirstOneoff() {}

func (*RootMessage_EmFOM) isRootMessage_EmptyFirstOneoff() {}

func (m *RootMessage) GetEmptyFirstOneoff() isRootMessage_EmptyFirstOneoff {
	if m != nil {
		return m.EmptyFirstOneoff
	}
	return nil
}

func (m *RootMessage) GetEmFOEm() *Empty {
	if x, ok := m.GetEmptyFirstOneoff().(*RootMessage_EmFOEm); ok {
		return x.EmFOEm
	}
	return nil
}

func (m *RootMessage) GetEmFOS() int32 {
	if x, ok := m.GetEmptyFirstOneoff().(*RootMessage_EmFOS); ok {
		return x.EmFOS
	}
	return 0
}

func (m *RootMessage) GetEmFOEn() RootEnum {
	if x, ok := m.GetEmptyFirstOneoff().(*RootMessage_EmFOEn); ok {
		return x.EmFOEn
	}
	return RootEnum_RootEnumVal0
}

func (m *RootMessage) GetEmFOM() *RootMessage2 {
	if x, ok := m.GetEmptyFirstOneoff().(*RootMessage_EmFOM); ok {
		return x.EmFOM
	}
	return nil
}

func (m *RootMessage) GetLeadingDot() *common.CommonMessage {
	if m != nil {
		return m.LeadingDot
	}
	return nil
}

func (m *RootMessage) GetParentScope() ParentScopeEnum {
	if m != nil {
		return m.ParentScope
	}
	return ParentScopeEnum_TestEnumVal0
}

func (m *RootMessage) GetProto2Message() *common.Proto2Message {
	if m != nil {
		return m.Proto2Message
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RootMessage) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RootMessage_OneofMarshaler, _RootMessage_OneofUnmarshaler, _RootMessage_OneofSizer, []interface{}{
		(*RootMessage_EFOE)(nil),
		(*RootMessage_EFOS)(nil),
		(*RootMessage_EFOM)(nil),
		(*RootMessage_EFOEm)(nil),
		(*RootMessage_SFOS)(nil),
		(*RootMessage_SFOE)(nil),
		(*RootMessage_SFOMes)(nil),
		(*RootMessage_SFOM)(nil),
		(*RootMessage_MFOM)(nil),
		(*RootMessage_MFOS)(nil),
		(*RootMessage_MFOE)(nil),
		(*RootMessage_MFOEm)(nil),
		(*RootMessage_EmFOEm)(nil),
		(*RootMessage_EmFOS)(nil),
		(*RootMessage_EmFOEn)(nil),
		(*RootMessage_EmFOM)(nil),
	}
}

func _RootMessage_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RootMessage)
	// enum_first_oneoff
	switch x := m.EnumFirstOneoff.(type) {
	case *RootMessage_EFOE:
		b.EncodeVarint(12<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.EFOE))
	case *RootMessage_EFOS:
		b.EncodeVarint(13<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.EFOS))
	case *RootMessage_EFOM:
		b.EncodeVarint(14<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EFOM); err != nil {
			return err
		}
	case *RootMessage_EFOEm:
		b.EncodeVarint(15<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EFOEm); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RootMessage.EnumFirstOneoff has unexpected type %T", x)
	}
	// scalar_first_oneoff
	switch x := m.ScalarFirstOneoff.(type) {
	case *RootMessage_SFOS:
		b.EncodeVarint(16<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.SFOS))
	case *RootMessage_SFOE:
		b.EncodeVarint(17<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.SFOE))
	case *RootMessage_SFOMes:
		b.EncodeVarint(18<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SFOMes); err != nil {
			return err
		}
	case *RootMessage_SFOM:
		b.EncodeVarint(19<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.SFOM); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RootMessage.ScalarFirstOneoff has unexpected type %T", x)
	}
	// message_first_oneoff
	switch x := m.MessageFirstOneoff.(type) {
	case *RootMessage_MFOM:
		b.EncodeVarint(20<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MFOM); err != nil {
			return err
		}
	case *RootMessage_MFOS:
		b.EncodeVarint(21<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.MFOS))
	case *RootMessage_MFOE:
		b.EncodeVarint(22<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.MFOE))
	case *RootMessage_MFOEm:
		b.EncodeVarint(23<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.MFOEm); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RootMessage.MessageFirstOneoff has unexpected type %T", x)
	}
	// empty_first_oneoff
	switch x := m.EmptyFirstOneoff.(type) {
	case *RootMessage_EmFOEm:
		b.EncodeVarint(24<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EmFOEm); err != nil {
			return err
		}
	case *RootMessage_EmFOS:
		b.EncodeVarint(25<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.EmFOS))
	case *RootMessage_EmFOEn:
		b.EncodeVarint(26<<3 | proto.WireVarint)
		b.EncodeVarint(uint64(x.EmFOEn))
	case *RootMessage_EmFOM:
		b.EncodeVarint(27<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.EmFOM); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RootMessage.EmptyFirstOneoff has unexpected type %T", x)
	}
	return nil
}

func _RootMessage_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RootMessage)
	switch tag {
	case 12: // enum_first_oneoff.e_f_o_e
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.EnumFirstOneoff = &RootMessage_EFOE{common.CommonEnum(x)}
		return true, err
	case 13: // enum_first_oneoff.e_f_o_s
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.EnumFirstOneoff = &RootMessage_EFOS{int32(x)}
		return true, err
	case 14: // enum_first_oneoff.e_f_o_m
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(common.CommonMessage)
		err := b.DecodeMessage(msg)
		m.EnumFirstOneoff = &RootMessage_EFOM{msg}
		return true, err
	case 15: // enum_first_oneoff.e_f_o_em
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Empty)
		err := b.DecodeMessage(msg)
		m.EnumFirstOneoff = &RootMessage_EFOEm{msg}
		return true, err
	case 16: // scalar_first_oneoff.s_f_o_s
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ScalarFirstOneoff = &RootMessage_SFOS{int32(x)}
		return true, err
	case 17: // scalar_first_oneoff.s_f_o_e
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.ScalarFirstOneoff = &RootMessage_SFOE{RootEnum(x)}
		return true, err
	case 18: // scalar_first_oneoff.s_f_o_mes
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RootMessage2)
		err := b.DecodeMessage(msg)
		m.ScalarFirstOneoff = &RootMessage_SFOMes{msg}
		return true, err
	case 19: // scalar_first_oneoff.s_f_o_m
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Empty)
		err := b.DecodeMessage(msg)
		m.ScalarFirstOneoff = &RootMessage_SFOM{msg}
		return true, err
	case 20: // message_first_oneoff.m_f_o_m
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RootMessage2)
		err := b.DecodeMessage(msg)
		m.MessageFirstOneoff = &RootMessage_MFOM{msg}
		return true, err
	case 21: // message_first_oneoff.m_f_o_s
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.MessageFirstOneoff = &RootMessage_MFOS{int32(x)}
		return true, err
	case 22: // message_first_oneoff.m_f_o_e
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.MessageFirstOneoff = &RootMessage_MFOE{RootEnum(x)}
		return true, err
	case 23: // message_first_oneoff.m_f_o_em
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Empty)
		err := b.DecodeMessage(msg)
		m.MessageFirstOneoff = &RootMessage_MFOEm{msg}
		return true, err
	case 24: // empty_first_oneoff.em_f_o_em
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Empty)
		err := b.DecodeMessage(msg)
		m.EmptyFirstOneoff = &RootMessage_EmFOEm{msg}
		return true, err
	case 25: // empty_first_oneoff.em_f_o_s
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.EmptyFirstOneoff = &RootMessage_EmFOS{int32(x)}
		return true, err
	case 26: // empty_first_oneoff.em_f_o_en
		if wire != proto.WireVarint {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeVarint()
		m.EmptyFirstOneoff = &RootMessage_EmFOEn{RootEnum(x)}
		return true, err
	case 27: // empty_first_oneoff.em_f_o_m
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RootMessage2)
		err := b.DecodeMessage(msg)
		m.EmptyFirstOneoff = &RootMessage_EmFOM{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RootMessage_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RootMessage)
	// enum_first_oneoff
	switch x := m.EnumFirstOneoff.(type) {
	case *RootMessage_EFOE:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.EFOE))
	case *RootMessage_EFOS:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(x.EFOS))
	case *RootMessage_EFOM:
		s := proto.Size(x.EFOM)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RootMessage_EFOEm:
		s := proto.Size(x.EFOEm)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// scalar_first_oneoff
	switch x := m.ScalarFirstOneoff.(type) {
	case *RootMessage_SFOS:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.SFOS))
	case *RootMessage_SFOE:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.SFOE))
	case *RootMessage_SFOMes:
		s := proto.Size(x.SFOMes)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RootMessage_SFOM:
		s := proto.Size(x.SFOM)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// message_first_oneoff
	switch x := m.MessageFirstOneoff.(type) {
	case *RootMessage_MFOM:
		s := proto.Size(x.MFOM)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RootMessage_MFOS:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.MFOS))
	case *RootMessage_MFOE:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.MFOE))
	case *RootMessage_MFOEm:
		s := proto.Size(x.MFOEm)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// empty_first_oneoff
	switch x := m.EmptyFirstOneoff.(type) {
	case *RootMessage_EmFOEm:
		s := proto.Size(x.EmFOEm)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RootMessage_EmFOS:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.EmFOS))
	case *RootMessage_EmFOEn:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(x.EmFOEn))
	case *RootMessage_EmFOM:
		s := proto.Size(x.EmFOM)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type RootMessage_NestedMessage struct {
	SubREnum             []RootMessage_NestedEnum                     `protobuf:"varint,1,rep,packed,name=sub_r_enum,json=subREnum,proto3,enum=example.package.RootMessage_NestedEnum" json:"sub_r_enum,omitempty"`
	SubSubREnum          []RootMessage_NestedMessage_NestedNestedEnum `protobuf:"varint,2,rep,packed,name=sub_sub_r_enum,json=subSubREnum,proto3,enum=example.package.RootMessage_NestedMessage_NestedNestedEnum" json:"sub_sub_r_enum,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                     `json:"-"`
	XXX_unrecognized     []byte                                       `json:"-"`
	XXX_sizecache        int32                                        `json:"-"`
}

func (m *RootMessage_NestedMessage) Reset()         { *m = RootMessage_NestedMessage{} }
func (m *RootMessage_NestedMessage) String() string { return proto.CompactTextString(m) }
func (*RootMessage_NestedMessage) ProtoMessage()    {}
func (*RootMessage_NestedMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{0, 0}
}

func (m *RootMessage_NestedMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootMessage_NestedMessage.Unmarshal(m, b)
}
func (m *RootMessage_NestedMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootMessage_NestedMessage.Marshal(b, m, deterministic)
}
func (m *RootMessage_NestedMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootMessage_NestedMessage.Merge(m, src)
}
func (m *RootMessage_NestedMessage) XXX_Size() int {
	return xxx_messageInfo_RootMessage_NestedMessage.Size(m)
}
func (m *RootMessage_NestedMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_RootMessage_NestedMessage.DiscardUnknown(m)
}

var xxx_messageInfo_RootMessage_NestedMessage proto.InternalMessageInfo

func (m *RootMessage_NestedMessage) GetSubREnum() []RootMessage_NestedEnum {
	if m != nil {
		return m.SubREnum
	}
	return nil
}

func (m *RootMessage_NestedMessage) GetSubSubREnum() []RootMessage_NestedMessage_NestedNestedEnum {
	if m != nil {
		return m.SubSubREnum
	}
	return nil
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{1}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type MessageWithEmpty struct {
	Empt                 *Empty   `protobuf:"bytes,1,opt,name=empt,proto3" json:"empt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageWithEmpty) Reset()         { *m = MessageWithEmpty{} }
func (m *MessageWithEmpty) String() string { return proto.CompactTextString(m) }
func (*MessageWithEmpty) ProtoMessage()    {}
func (*MessageWithEmpty) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{2}
}

func (m *MessageWithEmpty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageWithEmpty.Unmarshal(m, b)
}
func (m *MessageWithEmpty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageWithEmpty.Marshal(b, m, deterministic)
}
func (m *MessageWithEmpty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageWithEmpty.Merge(m, src)
}
func (m *MessageWithEmpty) XXX_Size() int {
	return xxx_messageInfo_MessageWithEmpty.Size(m)
}
func (m *MessageWithEmpty) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageWithEmpty.DiscardUnknown(m)
}

var xxx_messageInfo_MessageWithEmpty proto.InternalMessageInfo

func (m *MessageWithEmpty) GetEmpt() *Empty {
	if m != nil {
		return m.Empt
	}
	return nil
}

type RootMessage2 struct {
	SomeField            int32    `protobuf:"varint,1,opt,name=some_field,json=someField,proto3" json:"some_field,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RootMessage2) Reset()         { *m = RootMessage2{} }
func (m *RootMessage2) String() string { return proto.CompactTextString(m) }
func (*RootMessage2) ProtoMessage()    {}
func (*RootMessage2) Descriptor() ([]byte, []int) {
	return fileDescriptor_c161fcfdc0c3ff1e, []int{3}
}

func (m *RootMessage2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RootMessage2.Unmarshal(m, b)
}
func (m *RootMessage2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RootMessage2.Marshal(b, m, deterministic)
}
func (m *RootMessage2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RootMessage2.Merge(m, src)
}
func (m *RootMessage2) XXX_Size() int {
	return xxx_messageInfo_RootMessage2.Size(m)
}
func (m *RootMessage2) XXX_DiscardUnknown() {
	xxx_messageInfo_RootMessage2.DiscardUnknown(m)
}

var xxx_messageInfo_RootMessage2 proto.InternalMessageInfo

func (m *RootMessage2) GetSomeField() int32 {
	if m != nil {
		return m.SomeField
	}
	return 0
}

func init() {
	proto.RegisterEnum("example.package.RootEnum", RootEnum_name, RootEnum_value)
	proto.RegisterEnum("example.package.RootMessage_NestedEnum", RootMessage_NestedEnum_name, RootMessage_NestedEnum_value)
	proto.RegisterEnum("example.package.RootMessage_NestedMessage_NestedNestedEnum", RootMessage_NestedMessage_NestedNestedEnum_name, RootMessage_NestedMessage_NestedNestedEnum_value)
	proto.RegisterType((*RootMessage)(nil), "example.package.RootMessage")
	proto.RegisterMapType((map[string]*RootMessage_NestedMessage)(nil), "example.package.RootMessage.CtxMapEntry")
	proto.RegisterMapType((map[string]RootMessage_NestedEnum)(nil), "example.package.RootMessage.CtxMapEnumEntry")
	proto.RegisterMapType((map[int32]RootMessage_NestedEnum)(nil), "example.package.RootMessage.MapEnumEntry")
	proto.RegisterMapType((map[string]*RootMessage_NestedMessage)(nil), "example.package.RootMessage.MapMsgEntry")
	proto.RegisterMapType((map[int32]int32)(nil), "example.package.RootMessage.MapScalarEntry")
	proto.RegisterType((*RootMessage_NestedMessage)(nil), "example.package.RootMessage.NestedMessage")
	proto.RegisterType((*Empty)(nil), "example.package.Empty")
	proto.RegisterType((*MessageWithEmpty)(nil), "example.package.MessageWithEmpty")
	proto.RegisterType((*RootMessage2)(nil), "example.package.RootMessage2")
}

func init() { proto.RegisterFile("test.proto", fileDescriptor_c161fcfdc0c3ff1e) }

var fileDescriptor_c161fcfdc0c3ff1e = []byte{
	// 1124 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0xeb, 0x52, 0x23, 0x45,
	0x14, 0x26, 0x97, 0xc9, 0xe5, 0x04, 0xc2, 0xd0, 0x04, 0x68, 0x22, 0x68, 0x36, 0x56, 0x69, 0x64,
	0x97, 0xb0, 0x04, 0x8b, 0x5a, 0x17, 0x2f, 0x2b, 0x6c, 0x90, 0xb2, 0xcc, 0xee, 0x3a, 0xb8, 0x5a,
	0xa5, 0x3f, 0xc6, 0x21, 0xe9, 0x84, 0x14, 0xe9, 0x99, 0x38, 0xd3, 0xd9, 0x02, 0x9f, 0xcb, 0xf7,
	0xf0, 0x01, 0x7c, 0x19, 0xab, 0x4f, 0xf7, 0x84, 0x49, 0x20, 0x43, 0xb6, 0x2c, 0x7f, 0x4d, 0xfa,
	0x5c, 0xbe, 0xef, 0x3b, 0x67, 0x7a, 0xce, 0x09, 0x80, 0x60, 0x81, 0xa8, 0x0f, 0x7d, 0x4f, 0x78,
	0x64, 0x99, 0x5d, 0x3b, 0x7c, 0x38, 0x60, 0xf5, 0xa1, 0xd3, 0xbe, 0x72, 0x7a, 0xac, 0xbc, 0xda,
	0xf6, 0x38, 0xf7, 0xdc, 0x3d, 0xf5, 0x50, 0x51, 0x63, 0x23, 0x9e, 0x1a, 0xda, 0x68, 0x4a, 0x18,
	0x3b, 0x68, 0x7b, 0x43, 0xa6, 0x2c, 0xd5, 0x7f, 0x4a, 0x50, 0xb0, 0x3c, 0x4f, 0xb4, 0x58, 0x10,
	0x38, 0x3d, 0x46, 0x5e, 0x42, 0x8e, 0x3b, 0x43, 0x9b, 0xb9, 0x23, 0x4e, 0x13, 0x95, 0x54, 0xad,
	0xd0, 0xf8, 0xac, 0x3e, 0xc5, 0x57, 0x8f, 0xc4, 0xd7, 0x5b, 0xce, 0xb0, 0xe9, 0x8e, 0x78, 0xd3,
	0x15, 0xfe, 0x8d, 0x95, 0xe5, 0xea, 0x44, 0xbe, 0x07, 0x90, 0x28, 0x41, 0xdb, 0x19, 0x38, 0x3e,
	0xdd, 0x42, 0x9c, 0xc7, 0x0f, 0xe1, 0x9c, 0x63, 0xb4, 0x42, 0xca, 0xf3, 0xf0, 0x4c, 0xbe, 0x05,
	0x09, 0x6b, 0xf3, 0xa0, 0x47, 0x93, 0x08, 0x54, 0x7b, 0x08, 0xa8, 0x15, 0xf4, 0x14, 0x4a, 0x86,
	0xe3, 0x41, 0x42, 0xb4, 0xc5, 0xb5, 0xcd, 0x9d, 0x21, 0xfd, 0x70, 0x0e, 0x88, 0x13, 0x71, 0x8d,
	0x65, 0x21, 0x44, 0x1b, 0x0f, 0xe4, 0x15, 0x2c, 0x6a, 0x08, 0xd5, 0x9b, 0x8f, 0x10, 0xe7, 0xc9,
	0x5c, 0x38, 0x61, 0x7b, 0xa0, 0x3d, 0x36, 0x90, 0x6f, 0xc0, 0xf0, 0xb1, 0xa6, 0x14, 0x02, 0xed,
	0xc4, 0x02, 0xbd, 0x62, 0x81, 0x60, 0x1d, 0x7d, 0xb2, 0xd2, 0xbe, 0xac, 0x69, 0x13, 0x72, 0x7e,
	0xd8, 0xe0, 0x74, 0x25, 0x55, 0x33, 0xac, 0xac, 0xaf, 0x3b, 0xf6, 0x14, 0x32, 0xbe, 0x52, 0x69,
	0x54, 0x52, 0xb5, 0x62, 0x63, 0xf3, 0x5e, 0x70, 0x29, 0xc3, 0x32, 0x7c, 0x54, 0x73, 0x08, 0x05,
	0xdf, 0x66, 0x7c, 0x28, 0x6e, 0x50, 0x53, 0x06, 0x35, 0xad, 0xdf, 0x49, 0x6b, 0xca, 0x08, 0x2b,
	0xef, 0xe3, 0x53, 0x8a, 0x78, 0x02, 0x39, 0xd7, 0xd6, 0x5c, 0xd9, 0x4a, 0xa2, 0x56, 0x6c, 0x90,
	0xba, 0xbe, 0x85, 0x27, 0xf8, 0x40, 0x92, 0x8c, 0x6b, 0x21, 0xcb, 0x16, 0x80, 0x8c, 0xd6, 0xa2,
	0x73, 0x95, 0x44, 0xcd, 0xb0, 0x72, 0xae, 0xa5, 0x55, 0xef, 0x42, 0x56, 0x7a, 0x25, 0x7f, 0xbe,
	0x92, 0xa8, 0x15, 0x1a, 0x6b, 0x93, 0x50, 0x61, 0xf9, 0x86, 0x6b, 0x49, 0xea, 0x3a, 0xac, 0x2a,
	0x20, 0xbb, 0xeb, 0x7b, 0xdc, 0x6e, 0x7b, 0xae, 0x60, 0xd7, 0x82, 0x02, 0xa2, 0xae, 0x28, 0xd7,
	0xa9, 0xef, 0xf1, 0x13, 0xe5, 0x20, 0x5f, 0xc0, 0x12, 0x4a, 0x1d, 0x17, 0x59, 0x40, 0x92, 0x59,
	0x45, 0x82, 0x6b, 0x8d, 0xab, 0x7c, 0x0c, 0x59, 0x66, 0x77, 0x6d, 0xcf, 0x66, 0x74, 0x71, 0x56,
	0x91, 0x67, 0x0b, 0x56, 0x9a, 0x9d, 0xbe, 0x6e, 0x92, 0x8d, 0x30, 0x38, 0xa0, 0x4b, 0x52, 0x8b,
	0x76, 0x9c, 0x93, 0x7a, 0xe8, 0xe0, 0xb4, 0x18, 0x53, 0x9f, 0x8e, 0x6f, 0x91, 0x7d, 0xc8, 0x69,
	0x56, 0x4e, 0x97, 0xe3, 0xb4, 0x9e, 0x2d, 0x58, 0x86, 0xa4, 0xe6, 0x92, 0x3b, 0xd0, 0xdc, 0x26,
	0x72, 0x27, 0xac, 0x74, 0x20, 0xb9, 0x1b, 0xa1, 0x83, 0xd1, 0x15, 0xac, 0x60, 0xf6, 0x95, 0xd0,
	0x39, 0x4d, 0xf2, 0x1c, 0xf2, 0x2a, 0x87, 0xb3, 0x80, 0x12, 0x14, 0xb0, 0x1d, 0x77, 0x4b, 0x1b,
	0x67, 0x09, 0x2b, 0x13, 0x9c, 0xbe, 0x6e, 0xb1, 0x80, 0xec, 0x85, 0x7c, 0x9c, 0xae, 0xc6, 0x4a,
	0x57, 0x64, 0x2d, 0x72, 0x08, 0x59, 0xae, 0x13, 0x4a, 0xf3, 0x50, 0x25, 0xad, 0x34, 0x97, 0x79,
	0x1b, 0x61, 0x5e, 0x40, 0xd7, 0xb0, 0x62, 0xe5, 0xc0, 0x8a, 0xb9, 0xae, 0x78, 0xfd, 0xa1, 0x8a,
	0x55, 0x4e, 0x53, 0x76, 0x9c, 0x87, 0x1d, 0xdf, 0x88, 0x95, 0x9d, 0xb4, 0x0c, 0x8e, 0x1d, 0x3f,
	0x80, 0x3c, 0x1b, 0xe7, 0xd0, 0xd8, 0x9c, 0x94, 0x95, 0x61, 0x2a, 0x69, 0x13, 0x72, 0x2c, 0x54,
	0xbd, 0x89, 0xaa, 0x53, 0x96, 0xc1, 0x50, 0xf6, 0xe1, 0x2d, 0x9e, 0x4b, 0xcb, 0x0f, 0x09, 0x0f,
	0x21, 0x5d, 0xf2, 0x6c, 0x0c, 0xc9, 0xe9, 0x07, 0xf3, 0x34, 0x50, 0x33, 0xca, 0xce, 0x17, 0x06,
	0xcc, 0xe9, 0xf4, 0xdd, 0x9e, 0xdd, 0xf1, 0x04, 0xdd, 0x8e, 0xfb, 0xf4, 0x40, 0x47, 0xbe, 0xf4,
	0x04, 0x39, 0x85, 0xc5, 0xa1, 0xe3, 0x33, 0x57, 0xaf, 0x13, 0x5a, 0x41, 0xb1, 0x1f, 0x8f, 0x59,
	0x23, 0x9b, 0xe6, 0x0d, 0xc6, 0x9d, 0xcb, 0xdf, 0x38, 0x0f, 0x0a, 0xc3, 0x5b, 0x03, 0x39, 0x82,
	0x25, 0xb5, 0xa2, 0xb8, 0x22, 0xa1, 0x8f, 0x26, 0x15, 0xbc, 0x41, 0x67, 0xa8, 0x60, 0x32, 0xb6,
	0xfc, 0x57, 0x12, 0x96, 0x26, 0x86, 0x23, 0x69, 0x02, 0x04, 0xa3, 0x8b, 0x70, 0x26, 0x25, 0x70,
	0xfe, 0x7d, 0x3a, 0xc7, 0x70, 0x45, 0x61, 0xb9, 0x60, 0x74, 0xa1, 0x46, 0xd5, 0xef, 0x50, 0x94,
	0x30, 0x11, 0xa8, 0x24, 0x42, 0x1d, 0xcd, 0x3f, 0xa7, 0xf5, 0x29, 0x02, 0x5f, 0x08, 0x46, 0x17,
	0xe7, 0x9a, 0xa1, 0xfa, 0x27, 0x98, 0xd3, 0x01, 0x84, 0x42, 0x69, 0xda, 0xf6, 0xb3, 0x33, 0x78,
	0x6a, 0x2e, 0xcc, 0xf0, 0xec, 0x9b, 0x89, 0x19, 0x9e, 0x86, 0x99, 0x9c, 0xe1, 0x39, 0x30, 0x53,
	0xe5, 0x36, 0x2c, 0x46, 0x17, 0x13, 0x31, 0x21, 0x75, 0xc5, 0x6e, 0x68, 0x02, 0x67, 0xa7, 0xfc,
	0x49, 0xbe, 0x02, 0xe3, 0x9d, 0x33, 0x18, 0x31, 0x9a, 0xc4, 0xd7, 0x3a, 0x77, 0x07, 0x55, 0xd6,
	0xf3, 0xe4, 0xb3, 0x44, 0xf9, 0x4b, 0x28, 0x4e, 0x2e, 0xf5, 0x7b, 0x68, 0x4a, 0x51, 0x1a, 0x23,
	0x9a, 0xcd, 0xa0, 0x10, 0xd9, 0xe4, 0xd1, 0xd4, 0xbc, 0x4a, 0x7d, 0x11, 0x4d, 0x7d, 0xbf, 0x05,
	0x3a, 0x49, 0x13, 0xd9, 0xf6, 0xff, 0x1b, 0x4d, 0x17, 0x96, 0xa7, 0xfe, 0x0c, 0xdc, 0x43, 0xf5,
	0xdf, 0x7b, 0x5e, 0xfd, 0x1c, 0x20, 0x72, 0x9d, 0x08, 0x14, 0xef, 0x5c, 0xa4, 0x69, 0xdb, 0xbe,
	0x99, 0x38, 0x5e, 0x85, 0x15, 0x79, 0xc5, 0xed, 0x6e, 0xdf, 0x0f, 0x84, 0xed, 0xb9, 0xcc, 0xeb,
	0x76, 0x8f, 0xd7, 0x6e, 0xf7, 0x6b, 0xd4, 0xbc, 0x0e, 0x25, 0xfd, 0xf1, 0x4d, 0xda, 0x4b, 0x40,
	0xd4, 0x6a, 0x8d, 0x5a, 0xab, 0x59, 0x30, 0x70, 0xf8, 0x55, 0xbf, 0x06, 0x53, 0x2b, 0xff, 0xa5,
	0x2f, 0x2e, 0xd1, 0x46, 0x76, 0x20, 0x2d, 0x53, 0xb0, 0x05, 0xb3, 0x17, 0x31, 0xc6, 0x54, 0x77,
	0x61, 0x31, 0x3a, 0xbe, 0xc8, 0x36, 0x40, 0xe0, 0x71, 0xa9, 0x81, 0x0d, 0x3a, 0xfa, 0x46, 0xe5,
	0xa5, 0xe5, 0x54, 0x1a, 0x76, 0x5e, 0x40, 0x2e, 0x1c, 0x92, 0xc4, 0x54, 0xa9, 0x91, 0x1e, 0x4c,
	0x5a, 0xe4, 0x47, 0x34, 0x69, 0x69, 0x98, 0xc9, 0xc6, 0xdf, 0x49, 0x28, 0x9e, 0x33, 0xff, 0x5d,
	0xbf, 0xcd, 0x9a, 0x4a, 0x17, 0xf9, 0x01, 0x8a, 0x3d, 0x26, 0x7e, 0x1c, 0x31, 0xff, 0xa6, 0xc5,
	0xc4, 0xa5, 0xd7, 0x21, 0x5b, 0x71, 0xaf, 0xa8, 0x1c, 0xeb, 0x25, 0xbf, 0x41, 0x91, 0x8f, 0x84,
	0x23, 0xfa, 0x72, 0xbc, 0x22, 0x5a, 0xfc, 0xc4, 0x2e, 0xbf, 0xc7, 0xd5, 0x23, 0x47, 0x90, 0x0f,
	0xff, 0xbd, 0x04, 0x64, 0x46, 0x67, 0xcb, 0x33, 0xec, 0xe4, 0x2d, 0x2c, 0xc9, 0x3c, 0x7c, 0x51,
	0x43, 0x2e, 0x6e, 0xc8, 0xa3, 0x3b, 0x81, 0xd3, 0xef, 0xb2, 0xfc, 0x70, 0xc8, 0x71, 0xed, 0xd7,
	0x4f, 0x7a, 0x7d, 0x71, 0x39, 0xba, 0x90, 0x93, 0x7d, 0xaf, 0xf9, 0xdd, 0x4f, 0xbb, 0x6f, 0xaf,
	0x7c, 0xa7, 0xef, 0xb2, 0xbd, 0x9e, 0xd7, 0xe8, 0xfd, 0x31, 0xd8, 0x93, 0x1b, 0xa3, 0xe3, 0x08,
	0xe7, 0x22, 0x83, 0x43, 0xfe, 0xe0, 0xdf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x26, 0x8d, 0x22, 0x88,
	0xf5, 0x0c, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServiceExampleClient is the client API for ServiceExample service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServiceExampleClient interface {
	GetQueryMethod(ctx context.Context, in *RootMessage, opts ...grpc.CallOption) (*RootMessage, error)
	// rpc comment
	MutationMethod(ctx context.Context, in *RootMessage2, opts ...grpc.CallOption) (*RootMessage_NestedMessage, error)
	EmptyMsgs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	MsgsWithEpmty(ctx context.Context, in *MessageWithEmpty, opts ...grpc.CallOption) (*MessageWithEmpty, error)
}

type serviceExampleClient struct {
	cc *grpc.ClientConn
}

func NewServiceExampleClient(cc *grpc.ClientConn) ServiceExampleClient {
	return &serviceExampleClient{cc}
}

func (c *serviceExampleClient) GetQueryMethod(ctx context.Context, in *RootMessage, opts ...grpc.CallOption) (*RootMessage, error) {
	out := new(RootMessage)
	err := c.cc.Invoke(ctx, "/example.package.ServiceExample/getQueryMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceExampleClient) MutationMethod(ctx context.Context, in *RootMessage2, opts ...grpc.CallOption) (*RootMessage_NestedMessage, error) {
	out := new(RootMessage_NestedMessage)
	err := c.cc.Invoke(ctx, "/example.package.ServiceExample/mutationMethod", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceExampleClient) EmptyMsgs(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/example.package.ServiceExample/EmptyMsgs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serviceExampleClient) MsgsWithEpmty(ctx context.Context, in *MessageWithEmpty, opts ...grpc.CallOption) (*MessageWithEmpty, error) {
	out := new(MessageWithEmpty)
	err := c.cc.Invoke(ctx, "/example.package.ServiceExample/MsgsWithEpmty", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServiceExampleServer is the server API for ServiceExample service.
type ServiceExampleServer interface {
	GetQueryMethod(context.Context, *RootMessage) (*RootMessage, error)
	// rpc comment
	MutationMethod(context.Context, *RootMessage2) (*RootMessage_NestedMessage, error)
	EmptyMsgs(context.Context, *Empty) (*Empty, error)
	MsgsWithEpmty(context.Context, *MessageWithEmpty) (*MessageWithEmpty, error)
}

func RegisterServiceExampleServer(s *grpc.Server, srv ServiceExampleServer) {
	s.RegisterService(&_ServiceExample_serviceDesc, srv)
}

func _ServiceExample_GetQueryMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RootMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceExampleServer).GetQueryMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.package.ServiceExample/GetQueryMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceExampleServer).GetQueryMethod(ctx, req.(*RootMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceExample_MutationMethod_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RootMessage2)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceExampleServer).MutationMethod(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.package.ServiceExample/MutationMethod",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceExampleServer).MutationMethod(ctx, req.(*RootMessage2))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceExample_EmptyMsgs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceExampleServer).EmptyMsgs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.package.ServiceExample/EmptyMsgs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceExampleServer).EmptyMsgs(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServiceExample_MsgsWithEpmty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageWithEmpty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServiceExampleServer).MsgsWithEpmty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/example.package.ServiceExample/MsgsWithEpmty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServiceExampleServer).MsgsWithEpmty(ctx, req.(*MessageWithEmpty))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServiceExample_serviceDesc = grpc.ServiceDesc{
	ServiceName: "example.package.ServiceExample",
	HandlerType: (*ServiceExampleServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getQueryMethod",
			Handler:    _ServiceExample_GetQueryMethod_Handler,
		},
		{
			MethodName: "mutationMethod",
			Handler:    _ServiceExample_MutationMethod_Handler,
		},
		{
			MethodName: "EmptyMsgs",
			Handler:    _ServiceExample_EmptyMsgs_Handler,
		},
		{
			MethodName: "MsgsWithEpmty",
			Handler:    _ServiceExample_MsgsWithEpmty_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "test.proto",
}
