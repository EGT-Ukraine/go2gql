// Code generated by go-bindata.
// sources:
// generator/plugins/graphql/templates/schemas_body.gohtml
// generator/plugins/graphql/templates/schemas_head.gohtml
// generator/plugins/graphql/templates/types_body.gohtml
// generator/plugins/graphql/templates/types_head.gohtml
// generator/plugins/graphql/templates/types_service.gohtml
// DO NOT EDIT!

package graphql

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesSchemas_bodyGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4d\x6f\xdb\x38\x10\x3d\xcb\xbf\x62\x20\x18\xbb\x76\xe0\xc8\xc0\x1e\x0d\xf8\xb2\xde\x6c\xda\x43\xf3\xd1\xb8\xa7\xa2\x28\x68\x7a\x2c\xb3\xa1\x49\x85\xa2\x92\x06\x04\xff\x7b\xc1\x0f\x49\xb4\x1d\xbb\xb9\xd5\x27\x7a\x66\x38\xef\xcd\xbc\xe1\xc8\x98\x4b\x98\x5e\x94\x52\xbf\x56\x38\x83\x92\xe9\x6d\xb3\x2a\xa8\xdc\x4d\xaf\xae\x97\x97\x5f\x1e\x15\x61\x02\xa7\xa5\xfc\xa7\x7c\xe2\xd3\x12\x05\x2a\xa2\xa5\x9a\x56\xbc\x29\x99\xa8\xa7\xa5\x22\xd5\xf6\x89\x17\x0f\x74\x8b\x3b\xf2\xaf\x5c\xbf\x2e\xa4\xd0\xf8\x53\x5f\x4c\xe1\xd2\xda\x81\xcb\x0a\xc6\x0c\x63\xc0\x0d\xd9\xa1\xb5\xe1\xbc\xe0\x0c\x85\xae\xa1\xd6\xaa\xa1\x1a\xcc\x20\x33\x06\x14\x11\x25\xc2\xb0\x46\xf5\xcc\x28\xc2\x6c\x0e\xc3\xe2\x21\xfc\xa9\x7d\xc2\x2c\x33\xa6\x75\x17\x21\x5d\x48\x04\xc6\x94\x72\xe9\xe0\x3a\x77\x70\x5c\x7b\xab\xbb\x6a\x0c\xa0\x58\xfb\x34\x76\xb0\x69\x04\x85\x6b\xd4\x6f\x93\x1b\x51\x5e\x9f\xe7\x3d\x01\xb6\x85\x0b\x63\x98\xd0\xa8\x28\x56\x5a\xaa\xfa\xee\xb1\xb4\xb6\xf8\xd8\x5b\x3e\x10\xb1\xe6\xa8\x5c\x8f\xd9\x06\x86\xc5\x52\x11\x8a\xea\x4a\x90\x15\x47\x4f\x64\x02\x5a\x81\x31\xb2\x42\xa1\x15\xa1\x4c\x94\x21\x47\x08\x74\xf7\x22\xe3\x31\x8c\x8c\x29\x9f\x78\x70\x07\x26\x13\x40\xa5\xa4\x1a\xbf\xbf\x77\x6c\x03\x94\xd7\xc5\xa9\x16\xce\xe7\x20\x18\x77\xe9\xb2\x4c\xa1\x6e\x94\x80\x23\x50\x63\x27\x60\x8c\x07\x8e\xf5\x5e\xb9\xf3\x66\x94\x47\x2c\xa0\xad\x1e\x07\x20\x40\x89\xf8\x5b\xc3\x0a\x3d\x88\x60\x3c\x1f\x0f\xb2\x6c\x5f\x97\x77\xd6\xf1\x4c\xd4\x71\xfe\xfb\x06\xd5\xeb\xff\x0c\xf9\xba\x86\x39\x18\x13\xbd\x0b\x29\xc2\x88\x49\x05\xb9\x8f\xc9\xfb\xe4\x43\x6b\x47\x67\x3a\xe2\x44\x3e\x2f\x5e\x2a\x51\x24\xf6\xdd\xa3\x9f\x26\x77\x8a\xff\xa7\x46\x13\xcd\xa4\xf8\x4d\x09\x6d\xd8\x9f\xa8\x62\x9f\xe2\x29\xe5\xe4\xea\x07\x52\x1d\x84\xbb\xf5\xe7\x03\xdd\x42\x40\x3b\x16\xf3\x74\xc8\x6e\xf0\x25\x5c\x49\xc7\x3d\x58\x16\x52\x6c\x58\xe9\x87\xd3\xdd\x9c\x41\x7e\x98\x2a\x9f\x38\xa7\x31\xae\x52\xd1\x11\x29\xee\x1b\xa9\x71\xbd\x90\xbb\x9d\x9b\xcb\x3c\x8f\x64\xb2\x2c\x9a\x66\x09\xa7\xbd\x58\x6b\xdb\x84\x5d\x95\x59\x16\x6a\x9f\xa5\xa4\x83\xc9\x33\x8b\xe8\x1c\x45\x07\x1f\xf5\x6c\x41\x93\x46\x6d\xf8\xda\x77\xe9\x44\x60\xcc\xe5\xc2\xda\x07\x90\x38\x33\x57\xbe\x73\xc5\xda\x7d\x15\x49\x68\xb4\xf7\xa5\xb9\x35\x18\x6c\x01\xe8\xeb\x41\x82\x6f\x93\x1e\x16\x79\x7d\x1e\xeb\xaf\xc3\xf2\x4d\x1b\x9a\x88\x93\xdc\x98\x74\xee\xa5\xff\xd0\x44\xef\x6d\x2a\x5f\x1f\xf3\x1f\xd6\x54\xb1\xca\x8d\x5a\x17\xfa\x96\x32\xfe\xf7\x19\x6b\xc9\x9f\x71\x06\x6e\xa5\x8f\xaa\x54\x98\xe8\xba\x23\x8a\xec\xea\x31\x8c\xfc\xb2\xde\x10\x8a\x6e\x8b\xf5\xcb\xb3\xfd\xc5\x9d\x17\xde\x9a\xb1\x2e\x48\x30\xde\xf9\x7b\x4c\x9b\xb6\xaa\x1f\x8d\xa3\xff\x47\x9d\xcc\x85\x0c\xcd\x3f\xd7\xc2\xd8\xc0\x2e\xb4\x05\x6b\x3b\xd7\x6f\x64\xad\x98\x28\xa3\x3b\x72\xda\x67\xe0\x8d\xee\x4d\xa7\xe6\xe3\xd5\x7e\x83\x2f\xf1\xbb\x77\xb4\xef\xfb\x57\xe7\x57\x98\x97\xa3\xf0\xc7\xa0\x5d\x50\x22\x4e\x6a\xd1\x2e\x88\xe0\x6b\x59\xb4\xd6\x70\x79\x3f\xa6\xbb\xdf\xd1\xb3\xe3\x81\xfd\x15\x00\x00\xff\xff\x85\xb5\xd8\xd5\x96\x08\x00\x00")

func templatesSchemas_bodyGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemas_bodyGohtml,
		"templates/schemas_body.gohtml",
	)
}

func templatesSchemas_bodyGohtml() (*asset, error) {
	bytes, err := templatesSchemas_bodyGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemas_body.gohtml", size: 2198, mode: os.FileMode(420), modTime: time.Unix(1543491470, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemas_headGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xc1\x4a\xc4\x30\x14\x85\xe1\xb5\x79\x8a\xc3\xd0\x85\x2e\x26\x01\x97\x82\x0b\x61\x06\xe9\xc6\xba\x88\x0f\x70\xdb\x5e\xd3\xd0\x36\xad\x49\x44\xe4\x72\xdf\x5d\xd0\x82\xbb\x9f\xef\x1c\xe7\xe0\xa7\x58\xf0\x1e\x17\xc6\x17\x15\x04\x4e\x9c\xa9\xf2\x88\xfe\x1b\x21\xd6\xe9\xb3\xb7\xc3\xb6\xba\xeb\xb3\x3f\xbf\xcd\x99\x62\x62\x17\xb6\xfb\xf0\xb1\x58\x5c\x3a\xbc\x74\x1e\xd7\x4b\xeb\xd1\x7a\xb3\xd3\x30\x53\x60\x88\x34\xf6\x68\x55\x63\xe2\xba\x6f\xb9\xe2\xd6\x88\x64\x4a\x81\xd1\x1c\xf2\xf0\x88\xc6\xfe\x75\xc1\x59\xd5\xdc\x88\x1c\x9b\x7d\x5a\x22\x15\x55\x9c\xfe\xe9\x95\xea\xa4\x7a\x32\x22\x9c\xc6\xdf\xff\x9d\xf9\x09\x00\x00\xff\xff\xc2\xe3\x00\xe2\xbf\x00\x00\x00")

func templatesSchemas_headGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemas_headGohtml,
		"templates/schemas_head.gohtml",
	)
}

func templatesSchemas_headGohtml() (*asset, error) {
	bytes, err := templatesSchemas_headGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemas_head.gohtml", size: 191, mode: os.FileMode(436), modTime: time.Unix(1539090323, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_bodyGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x73\xdb\xb8\x11\x7f\x26\x3f\xc5\x96\x4d\x3d\xa4\x87\x91\x3a\x7d\x54\x47\x0f\xae\x1b\x67\x32\xa9\xed\xa4\x75\x93\x07\x47\x63\x33\x14\x24\xe3\x48\x81\x34\xf8\xc7\xd6\x70\xf8\xdd\x6f\xf0\x8f\x04\x49\x50\x92\x73\xf6\x5d\xee\x2e\x7c\xc8\x58\xe0\x62\xb1\xf8\xed\x6f\x97\xd8\x45\xaa\xea\x35\x4c\x8f\xd7\x49\xbe\x4d\xd1\x0c\xd6\x38\xbf\x2b\xbe\x4e\xc2\x64\x33\x7d\xf3\xf6\xea\xf5\xff\x23\x1a\x60\x82\xa6\xeb\xe4\x1f\xeb\xfb\x78\xba\x46\x04\xd1\x20\x4f\xe8\x34\x8d\x8b\x35\x26\xd9\x74\x4d\x83\xf4\xee\x3e\x9e\xfc\x2b\x59\x6e\x4f\x13\x92\xa3\xc7\xfc\x78\x0a\xaf\xeb\xda\x9e\x4e\xe1\x0d\x29\x36\x99\x5d\x55\x34\x20\x6b\x04\xaf\x10\x29\x36\x30\x9b\xc3\xe4\x0c\xc7\x68\xc2\x5f\x72\x49\xab\x0c\x28\x54\x15\x7f\x3f\xf9\x14\x50\x1c\x7c\x8d\xd1\x45\xb0\x41\x75\x0d\x73\xa8\xaa\xf5\x7d\xfc\x21\x5a\xd7\xf5\xe4\x02\x3d\xb0\x59\xae\x36\xc4\x7e\x9f\x26\x64\x85\xd7\x95\x6d\x59\x6c\xd2\x0c\xe4\xe3\x28\x95\x6f\x99\x8d\x1f\xff\x23\x34\x3a\xbe\x6d\x59\x55\x05\x78\x25\x0c\x9a\x9c\x26\x9b\x0d\x22\xb9\xb0\xc4\xb2\xfe\x8d\xb2\x90\xe2\x34\xc7\x09\x99\x35\x46\x49\x99\xba\x96\x93\x11\x59\x4a\xf9\x4f\x41\x5c\xa0\x6c\x06\x3d\x93\xf8\xb0\xb0\xeb\x3c\x48\x2b\x1b\xb4\xa7\xc1\xa3\x64\x42\x0c\x10\xb5\x73\xa6\x4a\xd9\x61\x31\xf3\xb9\xc4\x44\x1a\x3e\x83\xa3\xf1\x55\x2a\x3e\x47\x98\xc3\xed\x16\x53\xf9\x6f\x61\xb6\xa5\xb6\x4d\xd4\xd2\xcd\xd6\x6f\x1d\xe7\xb6\x59\x77\x08\x41\x47\x58\x57\xd6\xc2\x60\x59\x62\xb8\xaa\xda\x31\x36\x52\x7b\x76\x3b\x64\x33\x4e\xbc\x23\x69\x91\x43\xf2\xf5\x27\x14\xe6\x76\x55\x81\xc4\x42\x0c\xb4\xec\xe0\x62\x97\x7c\xb0\x4b\x12\x21\xb8\x8f\x26\xda\x74\x9d\x2d\xda\xb0\x82\x4d\x79\x45\x50\xc7\x69\x57\xe8\xb3\x46\x09\x9e\x61\x14\x2f\xbb\x1e\x1f\xa8\xe5\x32\xcc\xf1\xb5\x98\x57\x7b\xb6\xb5\x2a\x48\x08\x98\xe0\xdc\xf5\x2a\xce\x22\xb9\xf3\x15\x93\xe5\x2c\x90\x0b\x8b\x05\x14\xb0\x63\x5b\x96\x62\xae\x77\xcd\x6c\xe6\x4a\x14\x51\x16\x30\xef\x50\x45\x33\x8f\x4f\xaa\x3e\x50\x5c\x06\x39\x6a\xb7\xdc\x99\xee\xc3\x15\x4f\x05\x55\x15\x06\x71\x2c\x0d\x9c\xb0\x31\x78\x55\xd7\x3e\xc8\xd9\x7d\x96\x08\xb1\x8f\x45\x92\xa3\x65\xc3\x95\xda\xee\x70\xa2\xb6\x35\xd6\xf4\xd9\x90\x01\x45\x59\x12\x97\x88\x66\x1a\x31\xd4\x98\x91\x1a\xff\x55\x13\xb8\x42\x8e\x70\x55\x35\x53\x26\x67\x05\x09\x99\x7d\x62\x63\x6e\x98\x3f\xb2\x4d\xe5\x8f\x02\x16\x99\xae\x7c\xc0\x80\x49\x8e\xe8\x2a\x08\x51\x55\x7b\xe0\xde\x30\xdf\x26\x62\xc3\x8d\xae\xcb\x22\x4f\x8b\xfc\x2d\x1f\x66\x28\x50\x44\x29\x20\x4a\x13\xca\xdc\x89\x57\x80\x61\x3e\x07\x82\x63\x60\xde\xa5\x28\x2f\x28\x61\x3f\x7d\xf6\x0f\xdb\xb9\x15\xd0\x75\xc6\x76\x81\x27\xee\x26\x48\xaf\xb3\x9c\x62\xb2\x5e\xe8\x4b\xdb\xd6\x0d\xcc\x81\xc9\x09\xba\x53\x94\x15\x71\x0e\x73\x20\xe8\xc1\x55\x36\x9d\x25\xf4\x02\x3d\x8c\x5a\xe6\xd9\x56\x0b\x5e\xcb\xad\x16\x13\x9d\x5d\x32\x0f\x0a\xd7\xbd\xcb\xce\x68\xb2\x39\x61\x56\x4a\xee\xe1\x15\x37\x46\x63\x98\x0c\x0a\xee\x02\xae\xa9\xa1\xdc\x5f\xda\xcd\x77\x33\x83\x58\x03\x67\x27\x94\x06\x5b\xb5\x96\xb0\xb6\x49\x1e\x98\x30\x23\x0f\x5d\x6b\xe2\x5e\xf7\x60\xb3\x18\xe2\x0c\xab\x49\x33\x5b\xa0\xa2\xcd\x83\x39\x6c\x82\x08\xb9\xad\x6f\x75\x53\x98\x4b\x63\x44\x5c\x4c\x3c\xa1\x6f\x95\x50\xc0\x3e\x94\x41\xcc\x4c\x13\x78\x62\x02\x95\x9e\x49\xa5\x06\xc5\xc2\xcf\x38\xbf\x7b\xc3\x18\x01\x4d\x2a\x95\xe2\x96\x55\xfa\x8c\x2c\x4c\x55\x37\xac\x78\x82\x56\x0a\xc0\x29\x83\xd8\x61\x51\xa6\xa6\xe1\x15\x9f\xa6\x81\x2b\x1e\x9d\x5f\x55\xc5\x69\x98\x09\x56\x7f\xa6\x41\xea\x22\x4a\x7d\x70\x56\x01\x8e\xd1\x12\xf2\x44\x05\x16\xdc\x8e\x47\xc7\x2d\x60\x2d\x16\x81\x5b\xe7\x78\x6a\xc1\xc6\xa0\xbd\x30\x5f\x63\x96\x7e\x4a\xbb\x33\x8f\x31\x22\xce\x90\xf6\x8d\x39\x50\xcf\x13\xc0\xea\x7f\x8f\x6c\xc3\xba\x7b\xdc\xd6\x98\xa7\x80\x3e\xcc\x6b\x6e\x98\x90\x30\xc8\xc1\xe1\x04\xfe\xe2\x38\xb0\x8b\xc1\xe0\x7c\x71\x16\x8e\xa7\x79\x79\xc4\xc9\xbf\xb2\x8f\x0f\xf6\x4c\xeb\xde\x06\xd4\xae\x73\x0f\xd1\xf0\x72\x78\x0e\xb2\x4f\xfb\x6b\x4f\xba\xab\x7b\xb9\xab\xfb\xb7\x3a\xa8\x10\x94\xac\xba\x29\xf5\x92\xa0\xcb\x55\x2f\xaf\x4a\x69\x4c\x96\xe8\xd1\xef\x7c\xe4\xd9\xfc\xc1\x37\x9e\x51\xe0\x5e\x8a\xc3\xdf\xb5\xfc\xbb\x2f\x1b\xde\xf8\x90\x44\x4f\x49\x9e\xff\x64\xf2\x47\x47\xfb\x15\xb7\x7c\x84\xde\x73\x40\x14\xf5\xa7\xb0\xe7\x69\xc1\xb4\xdb\xe5\x37\xd2\xe1\xa6\x75\xfa\xe1\x64\x92\x61\xcf\x37\xc6\x57\xc2\xbc\xdd\x09\xa1\xbd\x58\x3a\x9e\xd1\x88\xa1\xf9\x7a\x28\x19\x21\x7c\x59\xf4\xda\x93\xda\x4e\x97\x9f\x64\x19\x5e\x13\x4c\xd6\x0c\xa7\x14\x8d\x7b\xbc\x4d\x04\x82\xf5\xfb\x13\xc1\x40\xb5\x53\x3a\x23\xa6\xee\x46\xea\x90\xa5\x4b\xa3\xd6\x36\x77\xd4\x55\xa5\xd6\x10\x8b\xfd\x88\xc7\x1f\xf1\xd8\x85\xf0\x47\x3c\x1e\x88\xd4\x73\xc5\xa3\xaa\x1d\x65\x59\x29\x3e\xcd\xe2\x0f\x5b\x9d\x98\xc4\x5a\xa2\xf0\xea\x54\x9c\xd3\x29\x88\x75\x55\xc5\x69\x6c\x40\xbc\x12\x65\xa6\x90\xfc\xf6\x16\xc4\xb0\xfb\xd0\x6d\x3c\xa8\x6e\xd5\x8e\x96\x83\x65\x19\x9a\x0d\x62\xa8\x92\xdd\x95\x61\x5b\x61\x58\xfb\x3d\xad\xaf\x70\xb2\x5c\x72\x49\x61\xa7\x6b\x68\x0f\x1c\xf5\xad\x11\x47\xd6\xb1\x76\x82\x6d\xea\x29\x19\xbb\x05\x42\x74\x67\xf7\x81\x4b\xc8\xf0\x9a\x01\xdb\xbc\x9b\xea\xe8\xc8\x57\x1f\x02\x1a\x6c\x32\x0f\x5c\xad\x4e\xf4\x65\xb9\xae\xa5\x20\x8b\xff\x93\x3d\xe0\x3c\xbc\x83\x8c\x86\x0c\xae\x74\xf2\xbf\xa4\xa0\x21\x9a\xb8\xf9\x36\x45\x9e\x3a\x8e\x87\x41\x86\xe0\xb8\x2d\x1e\x95\xcb\x64\xf5\x38\xd3\x2a\x36\xa6\x68\xbe\xab\x62\xe3\x1d\x81\x5e\x61\xc5\x5b\x03\xc7\x19\x0d\xd5\x00\x3f\x14\x2a\x28\x11\x5a\x9e\x06\x59\xae\x15\x50\x8d\xc6\x06\x4c\x26\x70\x95\xd4\xb5\x6b\x48\x48\xe0\x64\x3c\x6e\xbd\xce\xe2\xed\xf7\x6d\xa8\x74\x54\x45\x4f\x43\xa7\xe8\x92\x30\xed\x47\xe9\xb9\x37\x47\xc3\x67\xd8\x9e\x54\xd2\xd7\xa1\xef\xaf\xa9\x70\xc6\x3e\x55\x17\xe8\xc1\x75\x32\x4e\x20\x48\x56\x50\x90\x88\x24\x0f\x04\x18\x95\x64\xa5\x25\x38\xcc\xbb\x16\xfd\xe2\x64\x2c\x72\xcf\x83\xf4\x37\x0d\xde\x3f\x59\x44\x9a\xbe\x5f\xea\x19\x84\xa9\xec\xd3\xc1\xf5\xc2\xdc\xd4\x53\x72\xab\x84\x42\x84\xb6\xbc\xa3\x24\xba\xfe\xc2\xdb\x3b\x22\xad\x63\x6b\x06\x73\x60\x9f\x60\xb2\x74\x29\xca\x7c\x30\xaf\xd6\xce\xb0\x9c\x08\x6d\x9d\x19\x00\x5f\x55\x1b\xe6\xeb\x3b\x33\x61\x47\xfb\xa2\x36\xf5\x7a\xd4\xe7\x54\x07\xe8\xc0\x08\x7f\x19\x5c\x64\x88\x7e\x97\xc8\xbc\x5c\x6e\xe8\x1f\x62\xce\x83\x34\xeb\xb4\x72\xcc\x07\x19\x71\x8e\x39\x0f\xd2\x3f\xc6\x65\xca\xd5\x5d\x41\x22\x97\x27\x18\xef\xa0\x09\xbd\x5a\xa3\xc9\xfd\x07\xdc\xdb\xd8\x1a\x4f\x76\x5d\xa5\xc8\x8d\x77\x13\xa4\xdc\xf3\x7b\xb4\x15\x92\x2a\x55\xca\xcb\x20\x4b\x19\xd4\x10\xee\x5b\x57\xe0\x51\x61\x5c\x43\x3d\x6d\x32\xab\xbd\xe6\x2a\x6a\x1f\x99\x0e\xbc\x87\xe9\x12\xab\x7b\x15\x63\x3d\xdf\x5d\x0c\x0b\x67\xc3\x7d\xcc\x7b\xb4\x55\x39\x67\x61\x78\xcd\xa1\x19\xbb\xad\x19\x5c\xd7\x18\xbe\x05\x2c\x9a\xc5\xb5\x04\x36\xdc\x37\xc8\x9b\x99\x99\xbc\x53\x78\x06\x1b\x99\x56\x79\xe7\x80\x8d\x97\x0e\x37\x30\x07\x6c\xf3\xcc\xca\xdf\x32\xa9\x1d\x37\x49\x96\x15\xf9\xa2\x3e\x2d\x83\xf8\x9a\x53\x79\xe1\x8b\xbf\x05\xed\x16\x5c\xa9\x0f\x4c\x6f\xe4\x97\x4d\x1f\xb2\x63\xfe\x78\x8f\x3c\x8a\x06\xed\x03\xd3\x44\x70\xa2\xb6\x47\x6f\x6c\x74\xef\x2e\xfb\x57\xa3\x75\xff\x5f\xff\xb6\x64\xdc\x00\x14\x23\x7e\x89\xcd\x76\xe8\x03\xf6\xf4\xee\x7f\xe7\xfc\x17\x45\x4f\x31\xb6\x73\xf0\xeb\x01\xd3\xa9\xf1\x87\xd0\x94\xc3\xce\x8a\x79\x6a\x53\x4d\xbf\x38\x38\xc2\xe5\x3b\xe1\x29\xcb\xa7\x19\xdc\x01\x48\xc4\xc3\x75\x14\x2d\xe6\x65\x29\xa3\xc7\x50\x8d\x0f\x2f\x80\x79\xf6\x49\xf6\x17\xe5\x4d\xca\xf9\x0e\xca\x72\x75\x54\x1d\x2f\xce\xdb\xff\xfd\x30\xac\xcf\x0f\x3c\xb9\x0b\x3a\x9b\x4f\xeb\xd2\x42\x2e\x62\x0f\xce\xe7\x63\x9f\x1f\x2e\xfa\x8b\x0f\xea\x8c\x2a\x83\x73\xf9\x8e\x2c\x64\x3e\x7e\x9b\xce\xde\xb5\xad\xbd\xc9\x68\xd8\x24\x2d\x29\xc0\x37\x20\xcf\x46\x07\x82\xa8\x68\xbf\x13\x46\x29\x34\x0a\xa4\xe1\x2b\xfb\xfb\x83\x52\xe6\xfc\x21\x98\xb5\xf6\x1f\x74\x7e\x0e\x00\x00\xff\xff\x99\x77\x63\xae\x0b\x26\x00\x00")

func templatesTypes_bodyGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_bodyGohtml,
		"templates/types_body.gohtml",
	)
}

func templatesTypes_bodyGohtml() (*asset, error) {
	bytes, err := templatesTypes_bodyGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_body.gohtml", size: 9739, mode: os.FileMode(420), modTime: time.Unix(1543488518, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_headGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xc1\x4a\xc4\x30\x14\x85\xe1\xb5\x79\x8a\xc3\xd0\x85\x2e\x26\x01\x97\x82\x0b\x61\x06\xe9\xc6\xba\x88\x0f\x70\xdb\x5e\xd3\xd0\x36\xad\x49\x44\xe4\x72\xdf\x5d\xd0\x82\xbb\x9f\xef\x1c\xe7\xe0\xa7\x58\xf0\x1e\x17\xc6\x17\x15\x04\x4e\x9c\xa9\xf2\x88\xfe\x1b\x21\xd6\xe9\xb3\xb7\xc3\xb6\xba\xeb\xb3\x3f\xbf\xcd\x99\x62\x62\x17\xb6\xfb\xf0\xb1\x58\x5c\x3a\xbc\x74\x1e\xd7\x4b\xeb\xd1\x7a\xb3\xd3\x30\x53\x60\x88\x34\xf6\x68\x55\x63\xe2\xba\x6f\xb9\xe2\xd6\x88\x64\x4a\x81\xd1\x1c\xf2\xf0\x88\xc6\xfe\x75\xc1\x59\xd5\xdc\x88\x1c\x9b\x7d\x5a\x22\x15\x55\x9c\xfe\xe9\x95\xea\xa4\x7a\x32\x22\x9c\xc6\xdf\xff\x9d\xf9\x09\x00\x00\xff\xff\xc2\xe3\x00\xe2\xbf\x00\x00\x00")

func templatesTypes_headGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_headGohtml,
		"templates/types_head.gohtml",
	)
}

func templatesTypes_headGohtml() (*asset, error) {
	bytes, err := templatesTypes_headGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_head.gohtml", size: 191, mode: os.FileMode(436), modTime: time.Unix(1539090323, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_serviceGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x8f\xdb\x36\x10\xbd\xef\xaf\x98\x08\x69\x20\x07\x8a\x0c\xf4\xe8\xc2\x87\xd4\xdd\x4d\x03\xa4\xf9\x5a\x17\x39\x06\x5c\x69\x24\x13\x96\x49\x79\x44\x6d\x76\x41\xe8\xbf\x17\xa4\x28\xaf\x6c\xeb\xcb\x4d\x5a\x84\xb7\x35\xc9\xe1\xcc\xbc\x37\x6f\x46\xab\xf5\x2b\x98\xbf\x4c\xa5\x7a\xcc\x71\x01\x29\x57\x9b\xf2\x2e\x8c\xe4\x6e\x7e\xfd\x66\xfd\xea\xef\x2d\x31\x2e\x70\x9e\xca\x5f\xd3\x7d\x36\x4f\x51\x20\x31\x25\x69\x9e\x67\x65\xca\x45\x31\x4f\x89\xe5\x9b\x7d\x16\xde\x22\xdd\xf3\x08\x57\x52\x28\x7c\x50\x2f\xe7\xf0\xaa\xaa\xae\x92\x52\x44\xf0\x06\x95\xd6\xcd\x7e\xf8\x9e\xed\xb0\xaa\xdc\x5f\x5a\x87\x37\x1c\xb3\x78\xfd\x98\x63\x55\xfd\x85\x6a\x23\xe3\xc2\x8f\x40\xeb\x54\x9a\xdf\xe0\x70\x6d\xc5\xb2\xec\xad\x50\x48\x09\x8b\xb0\xaa\x02\xe0\x1b\x78\xa9\x35\x37\x3f\x45\x98\x2b\x49\xc5\xc7\x6d\x5a\x55\xe1\xdb\xa7\x5f\xfe\x64\x22\xce\x90\x40\x6b\xe0\x09\x3c\x0f\xd7\xc4\x22\xa4\x6b\xc1\xee\x32\x8c\xa1\xaa\x20\x50\x66\x53\xe6\x28\x14\xb1\x88\x8b\xb4\x36\x51\x9f\x03\xad\x51\xc4\x55\x35\x33\xde\xec\xb3\x7a\xcb\x7a\x5b\x80\xbe\x02\x00\x67\xb7\x71\xd1\x79\x6f\xe3\x06\xb7\x08\x55\x49\xe2\xdc\x80\x3e\x9c\xa8\xed\x10\x13\x29\xc2\xf3\x9d\x35\x01\x8b\xe5\xa0\xd1\x66\x79\x5a\xbb\x1b\x2e\xa9\xde\x02\x5e\x9c\x3e\xa5\xcf\xae\x99\x65\xce\x2f\x3a\x0c\x04\x9d\xa7\xff\xc0\x22\x22\x9e\x2b\x2e\xc5\x02\x9e\xee\x7c\x2a\xa5\xc2\x78\x25\x77\x3b\x14\xaa\xaa\xba\xef\xae\x2d\xa9\xb4\x8e\x58\x96\x35\x01\x86\x6f\x0c\x67\x3e\xbd\xfb\x50\xaa\xbc\x54\x16\xe7\xe7\xe1\xef\x32\x7e\x74\xe4\xe9\xb3\xe5\x70\x74\x46\x5e\x53\x5a\x9a\x97\xbb\x93\xd3\xac\xd7\x94\x16\x8b\x33\x00\x56\x52\x24\x3c\x6d\x2c\x74\xe7\xa8\xf5\xaa\x83\x87\x51\x6a\xb0\xb9\xcc\x81\x66\x99\x64\x33\x4a\xbb\xa1\x6a\x4c\xd5\x7e\xe9\xe3\xa4\x99\x5b\x9d\x49\x3a\x03\xc6\x9c\x3c\x41\xa5\x27\x95\xad\xe0\x50\xc4\x83\x01\xf4\x83\x31\x74\xf3\x33\x16\x32\xbb\xc7\x05\x18\x09\xf0\xf3\x36\x02\x6e\xeb\x23\x23\xb6\x2b\x66\xe0\x7f\x05\xde\x14\xb6\xae\x02\x20\x24\x02\x24\x92\x34\x83\x7e\x64\x22\xf5\x60\xb0\xc8\x43\x97\x8e\xde\x83\x5f\x61\x69\x0e\xf7\xee\x77\x8b\xc3\x18\xa2\xf7\x8c\x20\x67\x84\x42\xdd\xe6\x4c\xac\xd4\x43\x97\x8e\xd8\xad\x11\xf7\xcc\xe2\x89\xb3\x65\x22\xea\xb1\x73\x43\x72\xe7\x6c\xf9\x87\xa0\x67\xbf\x35\x17\x9f\x2d\x41\xf0\x6c\x20\x5f\x6e\x1d\xfb\xbc\x74\x7f\x37\xf6\xfc\xd9\xe0\xfd\xe1\x94\x14\x39\x13\x26\x00\x45\xe1\xad\x62\x64\x1f\xf1\x0d\xeb\x4f\xa4\x3f\x3c\x55\x9d\x86\x2b\xe4\x05\x5d\xd1\xaf\x36\x3c\x8b\x3f\x24\xfe\x91\xeb\xb3\x61\x4f\x8b\xa7\xcc\xf7\xe4\xd4\xed\x7e\xe1\x6a\x63\x1d\x3d\xe4\x34\xb0\x97\x87\xcd\xc7\x98\x20\xd9\x73\xe1\x0d\x17\xbc\xd8\x8c\x24\xee\x60\x1c\x96\x6d\xd7\x06\xef\x44\x16\x9f\xa9\xa7\x6b\x8f\x6c\xad\xcd\x46\x49\x60\x08\x67\xab\x6c\x2a\x6b\xec\xb2\xe1\xde\xa2\x5a\xb3\xd4\xf7\x6c\x7d\x7a\x01\x28\x2a\x71\x16\xbe\x93\x69\xdd\xd7\x7c\xad\x33\xe9\x32\x7c\x6d\x8e\xf8\xe6\x9d\x11\xb0\x60\x94\x5a\xd5\x40\x7e\x6d\x97\x1e\xac\x57\x9e\x98\x61\x61\x39\x25\xd6\xe3\x0e\xf3\x19\xf7\x25\x16\xaa\xa1\xe7\x24\x99\x27\xdc\x07\x46\xbd\x6a\xda\x1d\x75\xbd\x53\x73\x5e\x6e\x74\xbf\xf0\x4e\x75\xdd\xcc\x63\x3c\x01\x21\x55\xdf\x55\xc3\xda\x6b\xb2\x0e\x05\xb5\x54\xfa\x82\x67\x33\x37\xb0\x4c\x81\xff\x62\xf4\xdd\x24\x23\x78\x66\x5f\xfc\x4e\x40\xa1\x3d\x1b\x1d\x25\x69\x95\x71\x14\xaa\x1e\x7b\xcc\xcc\x67\xf2\x14\x79\xe0\x11\xee\xcf\x12\x35\xda\xd9\xb2\x02\xa7\x82\x66\xf0\x12\xf8\xcd\x6f\x26\xcf\x1b\x49\xef\xf1\xdb\x29\x00\xf5\x9c\x3a\x4e\xe7\xff\x21\xb6\xb1\xae\xdd\x5f\x0e\xae\x75\xbe\xe8\x9a\x9e\xdd\xfb\xc3\x9c\x70\x7a\x5e\x0f\x90\x27\xea\xde\x33\x42\x36\xab\x0e\x7e\xfa\xe8\xd9\xac\x7a\x58\x58\x40\xde\x7f\xac\x3f\xe2\x76\x4d\xf2\x4d\x33\x7f\x98\xda\xf3\x4d\x32\x82\x5a\x37\x6d\x5e\x3a\x3f\x29\x0e\x9d\x41\x18\x09\xef\x3a\xd1\x32\xf9\x56\xdc\xcb\x2d\xd2\x0c\x7c\xc2\xa2\xcc\xd4\xf1\x70\x33\x69\xb6\x81\x1f\xa4\x44\x5d\x1c\xfc\x29\x44\xe8\xb2\xda\xac\x85\x67\x6a\x6d\x06\x46\xa3\xbe\xbb\x7a\xfa\x4b\xfc\x12\xf1\x6c\x8b\xa6\xd6\x36\x47\x8e\x30\x5f\x88\xe5\x3e\x12\x05\xe0\x25\x8c\x9b\x89\x53\x49\xa0\x3a\xb3\xc0\x0c\x20\xfd\x1e\x0c\x11\xdd\xbe\xc7\x37\xf6\x73\xd9\x91\xdb\xb2\x7f\x2a\xc3\x8d\x12\x1e\x11\xb6\x97\xf2\xe6\x85\xba\x9a\x7f\x10\xe3\x29\x00\xb9\x35\x25\x4a\xb8\x0f\x0f\x58\xff\x1b\x05\xe6\x09\x3c\x93\xdb\x09\x8d\xad\x1f\x9f\xf7\x96\x6e\xc9\x4e\x35\x13\x38\x71\xa1\x12\xdf\xfb\xdc\x82\x08\x5a\x49\x71\xa6\x0a\xb8\x63\xb1\x09\xc0\xb8\x0a\xea\x31\x47\xff\x97\xf5\x2c\x84\xdb\x8d\x2c\xb3\x18\xee\xec\x57\xdd\x50\x60\x9e\x85\x60\x64\x60\x1a\x2e\x9a\x7a\x70\x34\x58\x87\xb5\x6a\x8e\x7e\x22\x81\x2d\x8a\x96\xdc\x7c\x64\x8f\x99\x64\xb1\x9d\xe0\x56\x1b\x8c\xb6\x93\x25\xa7\xe8\x1b\x7e\x7a\x7b\xdf\x65\x9d\x0f\x7e\x9a\xf1\x85\x27\xa7\x21\x76\x65\xcd\x23\x2c\xbc\xaa\x9a\xe8\xe5\xb1\xe8\xb7\xed\xbd\x8e\x22\x2c\x0a\x39\x0d\x86\x83\x8b\x35\x07\x9e\xac\xc0\x19\x2c\x9d\x6f\x38\xa7\xa7\xba\x3c\x59\xca\x87\xfc\x22\x2c\x26\xbf\x37\x22\xde\xcd\x9a\xdc\x5b\x1a\xda\x8e\x14\xc8\xa5\x2d\xeb\xbf\xa9\x80\xf1\xef\x9d\x1e\x75\xec\xf8\x3f\xce\xc9\x4f\x1d\xb9\xad\xae\x7a\x62\x7f\x2a\xa8\xab\x63\xaf\xaa\xab\x7f\x02\x00\x00\xff\xff\x58\x91\x10\x7d\x50\x16\x00\x00")

func templatesTypes_serviceGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_serviceGohtml,
		"templates/types_service.gohtml",
	)
}

func templatesTypes_serviceGohtml() (*asset, error) {
	bytes, err := templatesTypes_serviceGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_service.gohtml", size: 5712, mode: os.FileMode(420), modTime: time.Unix(1543499439, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/schemas_body.gohtml":  templatesSchemas_bodyGohtml,
	"templates/schemas_head.gohtml":  templatesSchemas_headGohtml,
	"templates/types_body.gohtml":    templatesTypes_bodyGohtml,
	"templates/types_head.gohtml":    templatesTypes_headGohtml,
	"templates/types_service.gohtml": templatesTypes_serviceGohtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"schemas_body.gohtml":  &bintree{templatesSchemas_bodyGohtml, map[string]*bintree{}},
		"schemas_head.gohtml":  &bintree{templatesSchemas_headGohtml, map[string]*bintree{}},
		"types_body.gohtml":    &bintree{templatesTypes_bodyGohtml, map[string]*bintree{}},
		"types_head.gohtml":    &bintree{templatesTypes_headGohtml, map[string]*bintree{}},
		"types_service.gohtml": &bintree{templatesTypes_serviceGohtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
