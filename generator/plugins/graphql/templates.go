// Code generated by go-bindata.
// sources:
// generator/plugins/graphql/templates/schemas_body.gohtml
// generator/plugins/graphql/templates/schemas_head.gohtml
// generator/plugins/graphql/templates/types_body.gohtml
// generator/plugins/graphql/templates/types_head.gohtml
// generator/plugins/graphql/templates/types_service.gohtml
// DO NOT EDIT!

package graphql

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesSchemas_bodyGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x55\xcb\x8e\xdb\x3a\x0c\x5d\x2b\x5f\x41\x18\xc1\xbd\x71\x91\xfa\x03\x02\x64\x15\xb4\xd3\x2e\x3a\x8f\x4e\x77\x45\x51\x78\x1c\x3a\xa3\x56\x91\xa6\xb2\x92\xc1\x80\xd0\xbf\x17\x7a\xd9\x72\xdc\xa4\xb3\x68\x56\x32\x49\xf1\x1c\x1e\x52\x8c\x79\x79\x42\x20\x9a\x57\xf7\xcd\x23\xee\xeb\xeb\x7a\x8f\xd6\x86\xf3\x46\x70\x94\xa6\x83\xce\xe8\x43\x63\x80\x66\x8c\x08\x74\x2d\x77\x08\xf3\x0e\xf5\x91\x37\x08\xab\x35\xcc\xab\xfb\xf0\xd1\xc1\x5b\x6b\x67\x8c\x11\x25\x77\x15\xd2\x85\x44\x40\xb4\x53\x5f\x1c\x5c\xef\x0e\x8e\x2b\x6f\x75\x57\x89\x00\xe5\xd6\xa7\xb1\xb3\xf6\x20\x1b\xb8\x42\xf3\x67\x72\x8b\x46\x74\x97\x79\x2f\x81\x3f\xc2\x1b\x22\x2e\x0d\xea\x06\x9f\x8c\xd2\xdd\xed\xcf\x9d\xb5\xd5\xc7\xc1\xf2\xa1\x96\x5b\x81\xba\x84\x05\xd1\xee\x97\x08\xfe\x90\x66\x09\xa8\xb5\xd2\xe5\xeb\x0b\xe7\x2d\x34\xa2\xab\xce\xd5\xbf\x5e\x83\xe4\xc2\xa5\x63\x4c\xa3\x39\x68\x09\x13\x50\xb2\x4b\x20\xf2\xc0\x91\xec\x3b\x77\x6e\x17\x45\xc4\x82\x26\x89\x79\x02\x02\x4d\x2d\xff\x37\xf0\x80\x1e\x44\x72\x51\x94\x33\xc6\xc6\xa2\xbe\xb2\x8e\x63\xad\xa7\xf9\xef\x0e\xa8\x5f\xde\x73\x14\xdb\x0e\xd6\x40\x14\xbd\x1b\x25\xc3\x7c\x28\x0d\x85\x8f\x29\x86\xe4\x73\x6b\x17\x17\x14\x71\x1d\x2a\x23\xde\x77\x9f\xf4\x3c\xe6\x39\x5a\x9f\x0e\xa6\x36\x5c\xc9\xbf\x30\x4b\x61\xff\x90\xdc\x18\xf9\x9c\xce\xea\xe1\x07\x36\x26\xc8\x7c\xe3\xcf\x27\x2a\x87\x80\xd4\xc4\x75\x3e\x12\xd7\xf8\x1c\xae\xe4\xc3\x19\x2c\x1b\x25\x5b\xbe\xf3\xa3\xe4\x6e\xae\xa0\x38\x4d\x55\x2c\x9d\x93\x08\x78\x0b\xb2\x27\x52\xdd\x1d\x94\xc1\xed\x46\xed\xf7\x6e\x8a\x8a\x22\x92\x61\x2c\x9a\x56\x19\xa7\x51\xac\xb5\x29\x61\x5f\x25\x63\xa1\xf6\x55\x4e\x3a\x98\x3c\xb3\x88\x2e\x50\xf6\xf0\xb1\x4d\x09\x34\x13\xaa\x15\x5b\xaf\xd2\x99\xc0\x98\xcb\x85\xa5\x71\xcd\x9c\xcc\x95\xef\x5c\xb1\x76\x5f\x45\x16\x1a\xed\x43\x69\x6e\xe3\x04\x5b\x00\xfa\x7a\x92\xe0\xdb\x72\x80\x45\xd1\x5d\xc6\xfa\xef\xb4\x7c\x4a\xa1\x59\x73\xb2\x1b\xcb\xde\xed\x68\xf4\x5c\x6f\xf2\xf6\x0d\x31\x9f\xb1\x53\xe2\x88\x2b\x70\x0b\x71\xf1\x94\x6b\x1d\x5d\xb7\xb5\xae\xf7\x5d\x09\x0b\xbf\xea\xda\xba\x41\xb7\x46\x86\xed\x95\x7e\x71\xe9\x84\x57\x41\xd6\x05\x49\x2e\x7a\xff\x80\x69\xf3\xea\x87\x6e\x4f\xbe\x27\xe2\x14\x52\x05\x3d\x2f\xa9\x12\x35\xe9\x43\x13\x58\x12\x63\x58\x89\x46\x73\xb9\x8b\xee\xc8\x69\xcc\xc0\x1b\x6d\x39\x7e\x7c\xd3\xdd\x7a\x8d\xcf\xf1\x5f\x63\xb2\x70\x87\x87\xe4\x97\x8d\x6f\x46\xe5\x8f\xa1\x1d\xa1\x13\x71\xf8\xaa\xf4\xe6\x83\x2f\xb1\x48\xd6\x70\x79\x1c\xd3\xdf\xef\xe9\xd9\x72\x66\x7f\x07\x00\x00\xff\xff\xef\xb3\xa6\x2f\x76\x07\x00\x00")

func templatesSchemas_bodyGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemas_bodyGohtml,
		"templates/schemas_body.gohtml",
	)
}

func templatesSchemas_bodyGohtml() (*asset, error) {
	bytes, err := templatesSchemas_bodyGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemas_body.gohtml", size: 1910, mode: os.FileMode(420), modTime: time.Unix(1542380313, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemas_headGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xc1\x4a\xc4\x30\x14\x85\xe1\xb5\x79\x8a\xc3\xd0\x85\x2e\x26\x01\x97\x82\x0b\x61\x06\xe9\xc6\xba\x88\x0f\x70\xdb\x5e\xd3\xd0\x36\xad\x49\x44\xe4\x72\xdf\x5d\xd0\x82\xbb\x9f\xef\x1c\xe7\xe0\xa7\x58\xf0\x1e\x17\xc6\x17\x15\x04\x4e\x9c\xa9\xf2\x88\xfe\x1b\x21\xd6\xe9\xb3\xb7\xc3\xb6\xba\xeb\xb3\x3f\xbf\xcd\x99\x62\x62\x17\xb6\xfb\xf0\xb1\x58\x5c\x3a\xbc\x74\x1e\xd7\x4b\xeb\xd1\x7a\xb3\xd3\x30\x53\x60\x88\x34\xf6\x68\x55\x63\xe2\xba\x6f\xb9\xe2\xd6\x88\x64\x4a\x81\xd1\x1c\xf2\xf0\x88\xc6\xfe\x75\xc1\x59\xd5\xdc\x88\x1c\x9b\x7d\x5a\x22\x15\x55\x9c\xfe\xe9\x95\xea\xa4\x7a\x32\x22\x9c\xc6\xdf\xff\x9d\xf9\x09\x00\x00\xff\xff\xc2\xe3\x00\xe2\xbf\x00\x00\x00")

func templatesSchemas_headGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemas_headGohtml,
		"templates/schemas_head.gohtml",
	)
}

func templatesSchemas_headGohtml() (*asset, error) {
	bytes, err := templatesSchemas_headGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemas_head.gohtml", size: 191, mode: os.FileMode(436), modTime: time.Unix(1539090323, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_bodyGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\x5f\x6f\x9c\x46\x10\x7f\x86\x4f\x31\xa5\xa9\x05\x11\x3d\xf7\xf9\xaa\x7b\xb0\xdc\x38\x8a\x52\xdb\x69\x1b\x25\x0f\xce\xc9\x26\xdc\x72\xde\xc2\x2d\x64\xe1\xb0\x4f\x88\xef\x5e\xed\x3f\x58\x60\xb9\xc3\xa9\x1d\xa5\x95\x79\xb0\x8e\x65\x76\x66\xf6\x37\x7f\x76\x67\xd6\xc7\xc7\xf0\x8a\x6c\x37\xb9\x5d\x55\x34\x20\x6b\x04\x2f\x10\xd9\x6e\x60\xbe\x80\xd9\x19\x4e\xd0\x8c\x7f\x84\x9f\xeb\xda\xb6\xca\x80\x42\x55\xf1\xef\xb3\x0f\x01\xc5\xc1\xe7\x04\x5d\x04\x1b\x54\xd7\xb0\x80\xaa\x5a\x7f\x49\xde\xc5\xeb\xba\x9e\x5d\xa0\x3b\x36\xcb\xd5\x86\xd8\xfb\x69\x4a\x22\xbc\xae\x6c\xcb\x62\x93\xe6\x20\x1f\x47\xb1\x7c\x4d\x83\xec\xf6\x8f\xdf\x05\x47\xc7\xb7\x2d\xab\xaa\x00\x47\x42\xa1\xd9\x69\xba\xd9\x20\x52\x08\x4d\x2c\xeb\x37\x94\x87\x14\x67\x05\x4e\xc9\xbc\x51\x4a\xd2\xd4\xb5\x9c\x8c\xc8\x4a\xd2\x7f\x08\x92\x2d\xca\xe7\xd0\x53\x89\x0f\x0b\xbd\xce\x83\xac\xb2\x41\x7b\x1a\x3c\x4a\x46\xc4\x00\x51\x2b\x67\xac\x94\x1e\x16\x53\x9f\x53\xcc\xa4\xe2\x73\x38\x1a\x97\x52\xf1\x39\x42\x1d\xae\xb7\x98\xca\xdf\x85\xda\x96\x5a\x36\x51\xa2\x9b\xa5\xdf\x38\xce\x4d\x23\x77\x08\x41\x87\x58\x67\xd6\xc2\x60\x59\x62\xb8\xaa\xda\x31\x36\x52\x7b\x76\x3b\x64\xdb\xc7\xc7\xf0\x86\x64\xdb\x02\xd2\xcf\x7f\xa3\xb0\xb0\xab\x0a\x24\x16\x62\xa0\xf5\x0e\x4e\x76\xc9\x07\xbb\x4e\x22\x08\x0f\xb9\x89\x36\x5d\xf7\x16\x6d\x58\xc1\xa6\xac\x22\x5c\xc7\x69\x25\xf4\xbd\x46\x11\x9e\x61\x94\xac\xba\x16\x1f\xb0\xe5\x34\xcc\xf0\xb5\x98\x57\x7b\xb6\x15\x6d\x49\x08\x98\xe0\xc2\xf5\x2a\xee\x45\x72\xe5\x11\xa3\xe5\x5e\x20\x05\x0b\x01\x0a\xd8\xb1\x25\x4b\x32\xd7\xbb\x62\x3a\x73\x26\xca\x51\x96\xb0\xe8\xb8\x8a\xa6\x1e\x9f\x54\xbd\xa3\xb8\x0c\x0a\xd4\x2e\xb9\x33\xdd\x87\xf7\xbb\x8c\x3b\x51\x18\x24\x89\x54\x70\xc6\xc6\xe0\x45\xcd\x95\xd2\xac\x5c\xdb\x9a\x1f\xf4\xed\x9b\x03\x45\x79\x9a\x94\x88\xe6\x9a\xa9\xd5\x98\xd1\xd8\x7f\xaa\x09\x9c\x21\xc7\xac\xaa\x9a\x29\xb3\xb3\x2d\x09\x99\x5f\x0a\x55\xdd\xb0\xb8\x67\x6a\x16\xf7\x62\xa1\xa7\x29\x29\xd0\x7d\xe1\x03\x06\x4c\x0a\x44\xa3\x20\x44\x55\xed\x81\x7b\xcd\xac\x95\x8a\x25\x34\xbc\x2e\xb7\x45\xb6\x2d\x5e\xf3\xe1\xba\xf6\x81\x22\x4a\x01\x51\x9a\x52\x66\x20\x1c\x01\x86\xc5\x02\x08\x4e\x80\xd9\x8b\xa2\x62\x4b\x09\x7b\xf5\xd9\x1f\xb6\x72\x2b\xa0\xeb\x9c\xad\x02\xcf\xdc\x4d\x90\x5d\xe5\x05\xc5\x64\xbd\xd4\x45\xdb\xd6\x35\x2c\x80\xd1\x09\x07\xa6\x28\xdf\x26\x05\x2c\x80\xa0\x3b\x57\xe9\x74\x96\xd2\x0b\x74\x37\xaa\x99\x67\x5b\x2d\x78\xad\xb7\xb4\x98\xe8\xfe\x22\x33\x9b\xb0\xd9\x9b\xfc\x8c\xa6\x9b\x13\xa6\xa5\xf4\x26\x1c\x71\x65\x34\x9f\x91\x6e\xce\x4d\xc0\x39\x35\x4e\xf4\x43\xbb\xf8\x6e\xac\x0b\x19\x38\x3f\xa1\x34\xd8\x29\x59\x42\xdb\x26\x1d\x60\xc2\x94\x9c\x2a\x6b\xe6\x5e\xf5\x60\xb3\x18\xe2\x0c\xab\x59\x33\x5b\xa0\xa2\xcd\x83\x05\x6c\x82\x18\xb9\xad\x6d\x75\x55\x98\x49\x13\x44\x5c\x4c\x3c\xc1\x2f\x4a\x29\x60\x1f\xca\x20\x61\xaa\x09\x3c\x31\x81\x4a\xcf\x8d\x92\x83\xf2\xc2\x8f\xb8\xb8\x7d\xc5\x3c\x02\x9a\xe4\x28\xc9\x2d\xab\xf4\x99\xb3\x30\x56\xdd\x40\xe1\x29\x57\x31\x00\xa7\x0c\x12\x87\xc5\x8d\x9a\x86\x23\x3e\x4d\x03\x57\x3c\xba\x7f\x55\x15\x77\xc3\x5c\x78\xf5\x47\x1a\x64\x2e\xa2\xd4\x07\x27\x0a\x70\x82\x56\x50\xa4\x2a\xb0\xe0\x66\x3c\x3a\x6e\x00\x6b\xb1\x08\x5c\x3b\xc7\x53\x02\x1b\x85\x0e\xc2\x7c\x85\x59\x42\x29\xed\xce\x3c\xe6\x11\x49\x8e\xb4\x5d\x63\x22\x9f\x07\x80\xd5\xdf\x61\x6c\x83\xdc\x03\x66\x6b\xd4\x53\x40\x4f\xb3\x9a\x1b\xa6\x24\x0c\x0a\x70\xb8\x03\x7f\x72\x1c\xd8\xe7\xc1\xe0\x7c\x72\x96\x8e\xa7\x59\x79\xc4\xc8\xdf\xd8\xc6\x93\x2d\xd3\x9a\xb7\x01\xb5\x6b\xdc\x29\x1c\x9e\x0e\xcf\x41\xf6\x69\xdf\x0e\xa4\xbb\xba\x97\xbb\xba\xbf\xd5\xd1\x83\xa0\x34\xea\xa6\xd4\x4b\x82\x2e\xa3\x5e\x5e\x95\xd4\x98\xac\xd0\xbd\xdf\xd9\xb6\xd9\xfc\xc1\xae\xcd\x5c\xe0\x8b\x24\x87\x5f\xb4\xfc\x7b\x28\x1b\x5e\xfb\x90\xc6\x0f\x49\x9e\xbf\x32\xfa\xa3\xa3\xc3\x8c\x5b\x7f\x84\xde\x33\x21\x8a\xfa\x53\xd8\xf3\xb0\x60\xda\x6f\xf2\x6b\x69\x70\x93\x9c\x7e\x38\x99\x68\xd8\xf3\x95\xf1\x95\x32\x6b\x77\x42\xe8\x20\x96\x8e\x67\x54\x62\xa8\xbe\x1e\x4a\x46\x08\x9f\x16\xbd\xf6\xa4\xb6\xd7\xe4\x27\x79\x8e\xd7\x04\x93\x35\xc3\x29\x43\xe3\x16\x6f\x13\x81\xf0\xfa\xc3\x89\x60\xc0\xda\x29\x9d\x11\x55\xf7\x23\x35\x45\x74\x69\xe4\xda\xe6\x8e\xba\xaa\x94\x0c\x21\xec\x39\x1e\x9f\xe3\xb1\x0b\xe1\x73\x3c\x4e\x44\xea\xb1\xe2\x51\xd5\x8e\xb2\xac\x14\x5b\xb3\xf8\x61\xab\x13\x93\x90\x25\x0a\xaf\x4e\xc5\x79\x7c\x0c\x42\xae\xaa\x38\x8d\x2d\x85\x17\xa2\xcc\x14\x94\x5f\xdf\x54\x18\xf6\x13\xba\xad\x04\xd5\x7f\xda\xd3\x44\xb0\x2c\x43\xfb\x40\x0c\x55\xb2\x5f\x32\x6c\x14\x0c\x6b\xbf\x87\x75\x0a\x4e\x56\x2b\x4e\x29\xf4\x74\x0d\x05\xff\x51\x5f\x1b\x71\x64\x1d\x6b\x10\xf0\x8f\xfb\x9a\x04\x82\x42\xc6\xcc\x1c\xd8\x8a\xdc\x4c\x5f\xb2\xfc\xf4\x2e\xa0\xc1\x26\xf7\xc0\xd5\x8a\x3f\x5f\xd6\xe0\x5a\x5e\xb1\xf8\x9f\xfc\x0e\x17\xe1\x2d\xe4\x34\x64\x18\x64\xb3\xbf\xd2\x2d\x0d\xd1\xcc\x2d\x76\x19\xf2\xd4\x19\x3b\x0c\x72\x04\x2f\xdb\x8a\x50\xd9\x41\x96\x84\x73\xad\x0c\x63\x8c\x16\xfb\xca\x30\x5e\xe6\xf7\xaa\x25\x5e\xef\xbf\xcc\x69\xa8\x06\xf8\x49\x4f\xe1\x83\xd0\xea\x34\xc8\x0b\xad\x2a\x6a\x38\x36\x20\x32\x82\xf7\x69\x5d\xbb\x86\x2c\x03\x4e\xce\x83\xd1\xeb\x08\x6f\x37\xad\x21\xd3\x51\x16\x3d\x0e\x9d\x4a\x4a\xc2\x74\x18\xa5\xc7\x5e\x1c\x0d\x1f\x61\x79\x92\x49\x9f\x87\xbe\xbe\xa6\x6c\x19\xdb\x7f\x2e\xd0\x9d\xeb\xe4\xdc\x81\x20\x8d\x60\x4b\x62\x92\xde\x11\x60\xae\x24\xcb\x27\xe1\xc3\xbc\x15\xd1\xaf\x38\xc6\xc2\xf1\x3c\xc8\x9e\x23\xf2\xdb\x45\xa4\x69\x53\x52\xcf\x20\x4c\x65\xf3\x0d\xae\x96\xe6\x4e\x9d\xa2\x8b\x52\x0a\x31\xda\xf1\x36\x91\x68\xce\x0b\x6b\xef\x89\xb4\x8e\xae\x39\x2c\x80\xed\xab\x64\xe5\x52\x94\xfb\x60\x96\xd6\xce\xb0\x9c\x18\xed\x9c\x39\x00\x97\xaa\x0d\x73\xf9\xce\x5c\xe8\xd1\x7e\xa8\x4d\x0d\x1c\xb5\x47\xea\x00\x4d\x8c\xf0\xa7\xc1\x45\x86\xe8\x77\x89\xcc\xd3\xe5\x86\xfe\xc9\xe4\x3c\xc8\xf2\x4e\x7f\xc6\x7c\x3a\x11\x87\x93\xf3\x20\xfb\x7f\xdc\x79\xbc\xbf\xdd\x92\xd8\xe5\x09\xc6\x9b\x34\xa1\x57\x40\x34\xb9\x7f\xc2\xf5\x8a\xad\xf9\xc9\xbe\x1b\x0f\xb9\xf0\x6e\x82\x94\x6b\x7e\x8b\x76\x82\xb2\xb9\xe1\x10\xeb\xb6\x94\x42\x8d\xc3\x7d\xad\x04\x1e\x15\x46\x19\xea\x69\x93\x59\xed\x35\x37\x46\x87\x9c\x69\xe2\xe5\x4a\xd7\xb1\xba\xf7\x2b\xd6\xe3\x5d\xb0\xb0\x70\x36\x5c\xb2\xbc\x45\x3b\x95\x73\x96\x86\xcf\x1c\x9a\xb1\x2b\x98\xc1\x1d\x8c\x61\x2f\x60\xd1\x2c\xee\x1a\xb0\xe1\x12\x41\x5e\xb7\xcc\xe5\x45\xc1\x23\xe8\xc8\xb8\xca\x8b\x04\x6c\xbc\x49\xb8\x86\x05\x60\x9b\x67\x56\xfe\x95\x51\xed\xb9\x1e\xb2\xac\xd8\x17\x45\x67\x19\x24\x57\xdc\x95\x97\xbe\xf8\x2d\xdc\x6e\xc9\x99\xfa\xc0\xf8\xc6\x7e\xd9\x34\x17\x3b\xea\x8f\x37\xbe\xe3\x78\xd0\x13\x30\x4d\x04\x27\x6e\x1b\xef\xc6\xee\xf5\xfe\x5a\x3e\x1a\x2d\xe6\x7f\xfc\x69\xc5\x7c\x03\x50\x82\xf8\x5d\x33\x5b\xa1\x0f\xd8\xd3\x5b\xfa\x9d\xf3\x5f\x1c\x3f\x44\xd9\xce\xc1\xaf\x07\x4c\xa7\x70\x1f\x42\x53\x0e\xdb\x25\xe6\xa9\x4d\x89\xfc\xe4\xe0\x08\x93\xef\x85\xa7\x2c\x1f\xa6\x70\x07\x20\x11\x0f\x57\x71\xbc\x5c\x94\xa5\x8c\x1e\x43\x89\x3d\xbc\xd5\xe5\xd9\x27\x3d\x5c\x69\x37\x29\xe7\x3b\xa8\xb5\xd5\x51\x75\xbc\xe2\x6e\xff\x49\x61\x58\x74\x4f\x3c\xb9\x0b\x77\x36\x9f\xd6\xa5\x86\x9c\xc4\x1e\x9c\xcf\xc7\xb6\x1f\x4e\xfa\xaf\x0f\xea\xcc\x55\x06\xe7\xf2\x3d\x59\xc8\x7c\xfc\x36\x9d\xbd\x6b\x5b\xfb\x92\xd3\xb0\x49\x5a\x92\x80\x2f\x40\x9e\x8d\x26\x82\xa8\xdc\x7e\x2f\x8c\x92\x68\x14\x48\xc3\x2e\xfb\xdf\x83\x52\xe6\xfc\x21\x98\xb5\xf6\x7f\x34\xff\x04\x00\x00\xff\xff\xe6\xd0\x19\x2b\x5a\x25\x00\x00")

func templatesTypes_bodyGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_bodyGohtml,
		"templates/types_body.gohtml",
	)
}

func templatesTypes_bodyGohtml() (*asset, error) {
	bytes, err := templatesTypes_bodyGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_body.gohtml", size: 9562, mode: os.FileMode(420), modTime: time.Unix(1542380313, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_headGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xc1\x4a\xc4\x30\x14\x85\xe1\xb5\x79\x8a\xc3\xd0\x85\x2e\x26\x01\x97\x82\x0b\x61\x06\xe9\xc6\xba\x88\x0f\x70\xdb\x5e\xd3\xd0\x36\xad\x49\x44\xe4\x72\xdf\x5d\xd0\x82\xbb\x9f\xef\x1c\xe7\xe0\xa7\x58\xf0\x1e\x17\xc6\x17\x15\x04\x4e\x9c\xa9\xf2\x88\xfe\x1b\x21\xd6\xe9\xb3\xb7\xc3\xb6\xba\xeb\xb3\x3f\xbf\xcd\x99\x62\x62\x17\xb6\xfb\xf0\xb1\x58\x5c\x3a\xbc\x74\x1e\xd7\x4b\xeb\xd1\x7a\xb3\xd3\x30\x53\x60\x88\x34\xf6\x68\x55\x63\xe2\xba\x6f\xb9\xe2\xd6\x88\x64\x4a\x81\xd1\x1c\xf2\xf0\x88\xc6\xfe\x75\xc1\x59\xd5\xdc\x88\x1c\x9b\x7d\x5a\x22\x15\x55\x9c\xfe\xe9\x95\xea\xa4\x7a\x32\x22\x9c\xc6\xdf\xff\x9d\xf9\x09\x00\x00\xff\xff\xc2\xe3\x00\xe2\xbf\x00\x00\x00")

func templatesTypes_headGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_headGohtml,
		"templates/types_head.gohtml",
	)
}

func templatesTypes_headGohtml() (*asset, error) {
	bytes, err := templatesTypes_headGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_head.gohtml", size: 191, mode: os.FileMode(436), modTime: time.Unix(1539090323, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_serviceGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\xdd\x6e\xdb\xb8\x12\xbe\xcf\x53\x4c\x85\x9e\x42\x3e\x50\xf5\x00\x06\x72\x91\x0d\x92\x6e\x80\x6e\x36\x9b\x04\xe8\x65\xc1\xc8\x23\x99\x88\x4c\xca\x23\x3a\x6d\x40\xe8\xdd\x17\x43\x52\x8e\x6c\x4b\xb2\xbc\xed\x2e\xca\x8b\x00\x91\x86\xf3\xf3\xcd\xcc\x37\x23\xe7\x1b\x95\xc1\x27\x34\xd6\xa6\x0f\x48\x2f\x32\xc3\xf4\x56\xac\xb0\x69\xc2\x7f\xd6\xa6\xd7\x12\xcb\xc5\xe3\x6b\x85\x4d\xf3\x07\x9a\xa5\x5e\xd4\x71\x06\xd6\x16\x9a\x9f\xc1\xf6\xda\xa5\x28\xcb\x1b\x65\x90\x72\x91\x61\xd3\x24\x20\x97\xf0\x7f\x6b\x25\x3f\xca\xb0\x32\x9a\xea\xbb\xe7\xa2\x69\xd2\x9b\xb7\x27\xbf\x0b\xb5\x28\x91\x66\xac\x6e\x5d\xfa\xd7\xce\x5c\x0d\xf6\x0c\x00\xc0\x5a\x90\xf9\xd6\x46\x30\x0f\x1f\x9b\xc6\xbd\xe5\x43\x68\x36\xa4\x0e\x15\xd8\xad\x84\xd7\x43\x42\x15\x08\xef\x57\x4e\x05\xcc\xcf\x47\x95\xb6\x27\xb2\x36\xdc\x08\xa8\x44\x73\xf8\xb0\x6f\xca\x1e\x5c\xe3\xc3\xf2\xf3\x1e\x05\x49\xaf\x34\x43\x39\x07\x6b\x33\x51\x96\xad\x93\xe9\x27\x12\xd5\xf2\xaf\xcf\x7f\x6e\x4c\xb5\x31\x0e\xec\xf7\xe9\x6f\x7a\xf1\x7a\xa9\x95\xc1\xef\xa6\x69\xfa\x75\x79\xcc\x5a\x25\x17\x54\x6c\x56\xa8\x4c\x7f\x80\xed\xb9\xa0\xa2\x9e\x1f\x80\x78\xa9\x55\x2e\x8b\x56\x43\x7f\x9c\x1d\xab\x01\x62\x41\x05\xe3\x7b\x9a\x03\x5d\xc4\x05\x15\xfd\x70\xb7\xaa\xbc\x5f\x76\x17\x34\xbe\xd5\x07\xd2\x00\x4a\x1d\xbf\x51\x2d\x46\x7d\x1b\xc6\x79\xec\xe6\x3d\xd6\xba\x7c\xc1\x39\x70\x8b\xc5\x55\x17\xdc\xf0\xea\x4e\x90\x58\xd5\x33\x88\xbf\x82\x6c\x1b\xc7\x36\x09\x10\x12\x01\x12\x69\x6e\x8c\x41\xaf\x32\xf3\x9d\x61\xae\xd2\x10\xe9\xa0\xe0\x57\x38\x67\xe1\xc1\xf7\xa1\x5e\xd2\x47\x12\x19\xd2\x95\x12\x4f\x25\x8e\x03\xc2\xa7\xae\x84\x4a\xdc\xdf\x60\x9f\x9d\xb1\x56\x57\xa8\x0c\x89\x4c\xaa\xc2\xc7\xfa\x60\x04\x99\x87\x4a\xa8\x6b\xd2\xab\x20\x1a\x6f\x9d\x4e\x5c\xc2\xf7\xa8\x27\xdd\x6f\x9a\x16\x4b\x8a\x66\xa3\x3e\x2d\x30\x47\x72\x3e\xa5\xd7\x52\xc9\x7a\x19\x8f\xcb\x6f\xdd\x80\xf3\x6e\x24\xa3\x77\x18\xf6\xe9\xd2\xde\x23\x57\x01\xb3\xf1\xfe\xe1\x23\x73\x9f\xfb\x77\xe7\xa0\x64\x39\x92\xfb\xee\x71\xe1\x3e\xa0\x79\x14\x45\x1c\xb9\xaa\x89\x12\x30\xb4\xc1\x59\xfa\x59\x17\x9e\x0c\x63\x6b\x4b\x1d\x12\x72\xc5\x22\x31\xdb\x99\x8d\xa3\xc3\x67\xbc\x06\x9a\x11\x7c\xad\x3d\xd6\x56\x32\xe7\x11\x71\x3e\x25\xd6\x5d\x4a\xbb\xc7\xf5\x06\x6b\xd3\x16\xc5\x24\x5e\x21\x5c\x27\xdc\x53\xbe\x4a\x77\x68\x76\x5f\x5d\x54\x31\xd1\xd4\xd1\x3e\x91\x58\xfb\x91\xbd\x50\xda\x0c\x5d\xfd\x22\xcd\xf2\x8a\x9c\x43\x89\x6f\xe0\x58\xc9\x72\xe6\xa0\x98\xe0\xa3\xcc\xe1\xe4\xec\x87\xf1\xa7\x64\xe9\x2c\xfe\x60\x42\xa1\x3b\x50\x77\x40\xba\x2c\x25\x2a\xe3\x67\x25\x4f\x7a\xc6\x29\x8b\x20\x22\x5c\x1f\x00\x75\x94\x6f\xcb\x1a\xa7\x26\x8d\xf3\xa5\xf0\x5b\xdc\xee\x1b\xd7\x9a\x6e\xf1\xdb\x7e\x02\xfc\x76\x72\xbc\x9c\xff\x83\xd8\x8e\xcd\x92\xe1\x76\x08\x84\xfe\xa1\x6f\x67\x0a\xf6\xc7\x6b\x22\xb0\xe8\xbc\x8f\x53\x07\xf6\x8e\xf6\xf8\xe0\xa7\xef\x2b\xed\xf1\x23\x6c\x0e\xd5\xb0\xd8\x70\xc4\xdd\x9e\x94\xcb\x76\x2a\x72\xef\xc5\x0c\x46\xe2\x79\xd3\xe1\xd2\xbb\x48\x6e\x67\x88\x62\x0a\xef\x93\xe8\xa8\xbc\x51\x2f\xfa\x99\x57\xcd\x98\xb0\xde\x94\x66\x77\xe4\x4e\x9a\xb8\xf0\x93\x98\xa8\xaf\x06\x7f\x09\x12\x3a\xad\x37\x3d\xf1\x4c\xed\xcd\x84\x39\xea\x87\xbb\x67\xb8\xc5\x4f\x21\xcf\x2e\x69\x5a\xeb\x30\x0a\x05\xf3\x85\x44\x15\x23\x51\x02\x51\x2e\x24\xef\x41\x46\x03\x79\x64\x41\x70\x42\x86\x3d\x18\x2b\x74\x67\x4f\x2e\xdd\x47\x52\x28\x6e\x57\xfd\x53\x2b\x9c\x99\x70\xa7\x60\x07\x4b\x9e\x2d\xf8\x6e\xfe\x49\x15\x4f\x09\xe8\x67\x6e\x51\xc2\x75\xba\xcd\xf5\x3f\x61\x60\x99\xc3\x3b\xfd\x3c\x61\xb0\x0d\xe7\xe7\xd6\x95\x5b\xbe\x32\x61\xb9\xac\x48\x2a\x93\xc7\xd1\x7d\x27\x45\xd0\x01\x25\xa8\xaa\xe1\x49\x2c\x38\x00\x76\x15\xcc\x6b\x85\xf1\xff\x1e\x67\x29\x3c\x2c\xf5\xa6\x5c\xc0\x93\xfb\x8c\x18\x0b\x2c\x72\x29\x38\xb2\x30\x8d\x37\x8d\x5f\x1c\x39\xd7\xa9\x67\xcd\xa3\x8b\x3b\xb8\xa6\xe8\xd0\xcd\x9d\x78\x2d\xb5\x58\xb8\x0d\xee\x72\x89\xd9\xf3\x64\xca\xa9\x87\x96\x9f\xc1\xd9\x77\xda\xe4\x83\x5f\x66\x7d\x91\xf9\x7e\x88\x7d\xa8\x45\x84\x75\xd4\x34\x13\xbd\xdc\x25\xfd\xae\xbe\x8b\x2c\xc3\xba\xd6\xd3\xd2\xb0\x75\xd1\xd7\xc0\x9b\x16\x38\x48\x4b\xaf\x8d\xe0\xf4\x54\x97\x27\x53\xf9\x98\x5f\x84\xf5\x64\x7b\x47\xc8\xbb\x3d\x93\x67\x4b\x5b\xb6\x47\x1a\xe4\xd4\x91\xf5\xef\x74\xc0\xf1\xef\x9d\x01\x76\xec\xf9\x75\x61\xef\x51\x0f\xb6\xcd\xd9\x40\xec\x6f\x0d\x75\xb6\xeb\x55\x73\xf6\x77\x00\x00\x00\xff\xff\x5e\x08\xea\x93\xeb\x13\x00\x00")

func templatesTypes_serviceGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_serviceGohtml,
		"templates/types_service.gohtml",
	)
}

func templatesTypes_serviceGohtml() (*asset, error) {
	bytes, err := templatesTypes_serviceGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_service.gohtml", size: 5099, mode: os.FileMode(420), modTime: time.Unix(1542625429, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/schemas_body.gohtml":  templatesSchemas_bodyGohtml,
	"templates/schemas_head.gohtml":  templatesSchemas_headGohtml,
	"templates/types_body.gohtml":    templatesTypes_bodyGohtml,
	"templates/types_head.gohtml":    templatesTypes_headGohtml,
	"templates/types_service.gohtml": templatesTypes_serviceGohtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"schemas_body.gohtml":  &bintree{templatesSchemas_bodyGohtml, map[string]*bintree{}},
		"schemas_head.gohtml":  &bintree{templatesSchemas_headGohtml, map[string]*bintree{}},
		"types_body.gohtml":    &bintree{templatesTypes_bodyGohtml, map[string]*bintree{}},
		"types_head.gohtml":    &bintree{templatesTypes_headGohtml, map[string]*bintree{}},
		"types_service.gohtml": &bintree{templatesTypes_serviceGohtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
