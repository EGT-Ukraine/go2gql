// Code generated by go-bindata.
// sources:
// generator/plugins/graphql/templates/loaders.gohtml
// generator/plugins/graphql/templates/schemas_body.gohtml
// generator/plugins/graphql/templates/schemas_head.gohtml
// generator/plugins/graphql/templates/types_body.gohtml
// generator/plugins/graphql/templates/types_head.gohtml
// generator/plugins/graphql/templates/types_service.gohtml
// DO NOT EDIT!

package graphql

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesLoadersGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xc1\x6a\x1b\x31\x10\x3d\x4b\x5f\x31\x98\x50\xbc\xc6\xd9\x85\x1e\x0d\x3e\x14\xa7\x31\xa1\x4d\x29\x6d\xda\x1c\x42\x0e\xaa\x3c\x5e\x8b\xc8\xd2\x46\x3b\xeb\x26\x08\xfd\x7b\xd1\xae\x1c\x6f\x92\x0d\xce\xa1\xb7\x45\xf3\x34\xef\xcd\xbc\xb7\xf2\xfe\x14\x8a\x49\x69\xe9\xb1\xc2\x19\x94\x8a\x36\xcd\x9f\x5c\xda\x6d\xf1\x79\x79\x75\xfa\xeb\xce\x09\x65\xb0\x28\xed\xc7\xf2\x5e\x17\x25\x1a\x74\x82\xac\x2b\x2a\xdd\x94\xca\xd4\x45\xe9\x44\xb5\xb9\xd7\xf9\x57\x2b\x56\xe8\xea\x85\x35\x84\x0f\x34\x29\xe0\x34\x04\x5e\x09\x79\x27\x4a\x04\xdd\x15\x39\x57\xdb\xca\x3a\x82\x31\x67\x23\xd9\x21\x47\x9c\x8d\x48\x6d\x71\xc4\x39\xf3\xde\x09\x53\x22\x9c\x24\xd8\x6c\x0e\x27\xf9\x45\xfb\x5d\xb7\xfd\x18\xf3\x3e\x15\xf3\x4f\x5a\x89\x3a\x04\x18\x1d\x8e\xbe\x0b\xda\x84\x30\x8a\x8d\xd0\xac\xda\x1b\x19\xe7\x71\x2e\xe8\xe4\x2d\xb4\x42\x43\x35\x28\x43\xe8\xd6\x42\x22\xf8\x1e\x6b\xa7\xb2\x63\x4d\xe3\x24\xd6\x25\x92\xf7\xa9\x9e\xff\x44\xb7\x53\x12\xf3\x6f\x62\x8b\x21\x74\x2d\xc7\x19\x78\x5f\xda\xab\x48\xf5\x12\xb7\x10\x5a\x5f\xec\x09\x63\xbb\x83\xba\x90\xd4\x9d\x09\x12\x7b\xc6\x9a\x5c\x23\xe9\x9d\xc2\x0e\xaa\x16\xd6\xac\x55\x99\x44\x75\x20\x38\x54\xbb\x83\x28\xaf\x0f\x18\x92\xb2\x3a\x48\x49\x5e\x7e\xc1\xc7\x76\xae\x4e\x98\x0f\x9c\xef\x84\x1b\xc6\xc1\xfc\xed\xfb\xf1\xe2\xba\x31\x12\x96\x48\xa9\x72\xad\x68\x93\xb0\x63\x49\x0f\x90\x22\x91\xa7\xf2\x14\x44\xa5\xf6\x96\x3d\x33\x30\x7b\x09\x8d\xeb\xea\x31\xc7\x55\x7d\xe8\x2d\xf5\x3f\x2c\x73\x06\xd2\xa1\x20\x7c\x03\x14\xf5\xf7\xf5\xe6\xef\x88\x4c\x36\xed\x1b\xc0\x02\xe7\xcc\x21\x35\xce\x3c\x4d\x17\x17\xf4\x5b\xe8\x06\xbb\xf6\x83\xbb\x7d\x76\x9c\x45\x1f\x8f\x8e\xda\xda\x70\x74\x9c\xd7\x76\xc8\x56\xf8\xbb\x93\x9e\x1d\x0d\x60\xb4\x2d\x8d\x7c\x0c\xea\x39\x63\x6b\x24\xb9\x99\x41\x94\x3f\xbe\xc3\xc7\xfa\xb5\x92\x1f\x78\xdf\x60\x4d\xcb\xf6\x34\x2a\x18\xdf\xdc\x0e\x80\xea\xca\x9a\x1a\xf7\xa8\x29\xdc\xdc\xa2\x73\xd6\x65\x51\x4f\x3f\x07\xe7\x91\x70\x61\x57\xed\x6f\xcb\xc2\x94\x33\xf6\x57\x28\x9a\x81\xf7\xab\xc6\x09\x52\xd6\xc0\x8b\xfd\x5d\x0b\x45\x67\xa9\x76\x19\xdf\xa7\x09\xc4\xe7\x2d\xbf\x54\x5a\xab\x1a\xa5\x35\xab\x69\xf4\x3a\xf0\x83\xf5\x4f\xff\x45\x2f\xb2\xe7\xce\x6e\xd3\xe2\x87\xcc\xc8\x60\xd2\x7f\x34\x3c\x67\x3b\xa1\xa3\xd3\x92\x1e\xf2\x2e\x32\x83\x69\xc9\x38\x67\x6a\x0d\x11\x3c\x9f\x83\x51\xba\x1d\x39\x79\x60\x94\x7e\x16\xc3\x9d\xd0\xf9\xb8\xcf\x13\xe3\xf5\x2f\x00\x00\xff\xff\xc9\x14\x3a\x07\x2f\x06\x00\x00")

func templatesLoadersGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesLoadersGohtml,
		"templates/loaders.gohtml",
	)
}

func templatesLoadersGohtml() (*asset, error) {
	bytes, err := templatesLoadersGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/loaders.gohtml", size: 1583, mode: os.FileMode(436), modTime: time.Unix(1546599359, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemas_bodyGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4b\x6f\x1a\x31\x10\x3e\xef\xfe\x8a\xd1\x0a\xb5\x4b\x44\x16\xa9\x47\x24\x2e\xa5\x69\xda\x43\xf3\x68\xe8\xa9\xaa\x2a\x63\x86\xc5\x8d\xb1\x89\xd7\x9b\x34\xb2\xfc\xdf\x2b\x3f\xf6\x01\x04\x92\x5b\x39\x99\x99\xf1\x7c\xdf\xcc\x37\x9e\x35\xe6\x1c\xc6\x67\xa5\xd4\xcf\x5b\x9c\x40\xc9\xf4\xba\x5e\x14\x54\x6e\xc6\x17\x97\xf3\xf3\x1f\xf7\x8a\x30\x81\xe3\x52\x7e\x28\x1f\xf8\xb8\x44\x81\x8a\x68\xa9\xc6\x5b\x5e\x97\x4c\x54\xe3\x52\x91\xed\xfa\x81\x17\x77\x74\x8d\x1b\xf2\x51\x2e\x9f\x67\x52\x68\xfc\xab\xcf\xc6\x70\x6e\x6d\xea\xb2\x82\x31\x83\x18\x70\x45\x36\x68\x6d\x38\xcf\x38\x43\xa1\x2b\xa8\xb4\xaa\xa9\x06\x93\x26\xc6\x80\x22\xa2\x44\x18\x54\xa8\x1e\x19\x45\x98\x4c\x61\x50\xdc\x85\x3f\x95\x4f\x98\x24\xc6\x34\xee\x22\xa4\x0b\x89\xc0\x98\x52\xce\x1d\x5c\xeb\x0e\x8e\x4b\x6f\x75\x57\x8d\x01\x14\x4b\x9f\xc6\xa6\xe9\x5b\xd0\x56\xb5\xa0\x90\xd3\xd3\x15\x0c\xe1\x12\xf5\x11\x56\xf9\xf0\x55\x5e\xae\x72\x85\xba\x56\x02\x68\x71\x24\x4d\x6a\xd3\x1e\xf9\x40\x2b\x80\xbe\x40\x2b\xa7\xbc\x3a\xcd\x78\x04\x6c\x0d\x67\xc6\x30\xa1\x51\x51\xdc\x6a\xa9\xaa\x9b\xfb\xd2\xda\xe2\x6b\x67\xf9\x42\xc4\x92\xa3\x72\xf3\xc1\x56\x30\x28\xe6\x8a\x50\x54\x17\x82\x2c\x38\x7a\x1e\x23\xd0\x0a\x8c\x91\x5b\x14\x5a\x11\xca\x44\x19\x72\x84\x40\x77\x2f\x12\x1e\x42\x6e\x4c\xf9\xc0\x83\x3b\x30\x19\x01\x2a\x25\xd5\xf0\xed\xba\xb3\x15\x50\x5e\x1d\xeb\x10\x4c\xa7\x20\x18\x77\xe9\x92\xa6\x9d\x07\xa0\xc6\x8e\xc0\x18\x0f\x1c\xeb\xbd\x70\xe7\x55\x9e\x45\x2c\xa0\xcd\x2c\xed\x81\x00\x25\xe2\xbd\x86\x05\x7a\x10\xc1\x78\x36\x4c\x93\x64\x77\xa6\xde\x58\xc7\x23\x51\x87\xf9\x6f\x6b\x54\xcf\x9f\x19\xf2\x65\x05\x53\x30\x26\x7a\x67\x52\x84\xe7\x21\x15\x64\x3e\x26\xeb\x92\x0f\xac\xcd\x4f\x74\xc4\x89\x7c\x5a\xbc\xbe\x44\x91\xd8\x6f\x8f\x7e\x9c\xdc\x31\xfe\xdf\x6a\x4d\x34\x93\xe2\x95\x12\x9a\xb0\xff\x51\xc5\x2e\xc5\x63\xca\xc9\xc5\x1f\xa4\x3a\x08\x77\xed\xcf\x7b\xba\x85\x80\x66\x2c\xa6\xfd\x21\xbb\xc2\xa7\x70\xa5\x3f\xee\xc1\x32\x93\x62\xc5\x4a\x3f\x9c\xee\xe6\x04\xb2\xfd\x54\xd9\xc8\x39\x8d\x71\x95\x8a\x96\x48\x71\x5b\x4b\x8d\xcb\x99\xdc\x6c\xdc\x5c\x66\x59\x24\x93\x24\x9f\xb0\xa2\x8a\x6d\x5d\x45\x93\x1e\xaf\x9d\x78\x6b\x9b\xa4\x6d\xa5\x49\x12\xea\x9f\xf4\x89\x07\x93\x67\x17\x19\x70\x14\x2d\x85\xa8\x69\x03\xdc\x6b\xd6\x8a\x2f\x7d\xa7\x8e\x04\xc6\x5c\x2e\xac\x79\x04\x3d\x67\xe2\x5a\xe0\x5c\xb1\x7e\x5f\x45\x2f\x34\xda\xbb\xd2\xdc\xba\x0c\xb6\x00\xf4\x73\x2f\xc1\xaf\x51\x07\x8b\xbc\x3a\x8d\xf5\x6e\xbf\x7c\xd3\x84\xf6\x04\xea\xdd\x18\xb5\xee\xb9\xff\x50\x46\xef\x75\x5f\xc2\x2e\x66\x5f\x1c\x17\xfa\x92\x32\xfe\xf7\x1d\x2b\xc9\x1f\x71\x02\x6e\xad\xe7\xdb\xbe\x30\xd1\x75\x43\x14\xd9\x54\x43\xc8\xfd\xc2\x5e\x11\x8a\x6e\x93\x75\x0b\xb4\xf9\xc5\xbd\x17\xde\x9b\xb1\x2e\x48\x30\xde\xfa\x3b\x4c\xdb\x6f\x55\x37\x1a\x07\xff\x0f\x3a\x99\x09\x19\x9a\x7f\xaa\x85\xb1\x81\x6d\x68\x03\xd6\x74\xae\xdb\xca\x5a\x31\x51\x46\x77\xe4\xb4\xcb\xc0\x1b\xdd\xbb\xee\x9b\x0f\xd7\xfb\x15\x3e\xc5\x6f\xdf\xc1\xce\xef\x5e\x9e\x5f\x63\x5e\x8e\xc2\x1f\x83\x76\x41\x89\x38\xa9\x45\xb3\x24\x82\xaf\x61\xd1\x58\xc3\xe5\xdd\x98\xf6\x7e\x4b\xcf\x0e\x53\xfb\x2f\x00\x00\xff\xff\xb8\x44\x15\x75\x56\x09\x00\x00")

func templatesSchemas_bodyGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemas_bodyGohtml,
		"templates/schemas_body.gohtml",
	)
}

func templatesSchemas_bodyGohtml() (*asset, error) {
	bytes, err := templatesSchemas_bodyGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemas_body.gohtml", size: 2390, mode: os.FileMode(436), modTime: time.Unix(1545987539, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemas_headGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xc1\x4a\xc4\x30\x14\x85\xe1\xb5\x79\x8a\xc3\xd0\x85\x2e\x26\x01\x97\x82\x0b\x61\x06\xe9\xc6\xba\x88\x0f\x70\xdb\x5e\xd3\xd0\x36\xad\x49\x44\xe4\x72\xdf\x5d\xd0\x82\xbb\x9f\xef\x1c\xe7\xe0\xa7\x58\xf0\x1e\x17\xc6\x17\x15\x04\x4e\x9c\xa9\xf2\x88\xfe\x1b\x21\xd6\xe9\xb3\xb7\xc3\xb6\xba\xeb\xb3\x3f\xbf\xcd\x99\x62\x62\x17\xb6\xfb\xf0\xb1\x58\x5c\x3a\xbc\x74\x1e\xd7\x4b\xeb\xd1\x7a\xb3\xd3\x30\x53\x60\x88\x34\xf6\x68\x55\x63\xe2\xba\x6f\xb9\xe2\xd6\x88\x64\x4a\x81\xd1\x1c\xf2\xf0\x88\xc6\xfe\x75\xc1\x59\xd5\xdc\x88\x1c\x9b\x7d\x5a\x22\x15\x55\x9c\xfe\xe9\x95\xea\xa4\x7a\x32\x22\x9c\xc6\xdf\xff\x9d\xf9\x09\x00\x00\xff\xff\xc2\xe3\x00\xe2\xbf\x00\x00\x00")

func templatesSchemas_headGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemas_headGohtml,
		"templates/schemas_head.gohtml",
	)
}

func templatesSchemas_headGohtml() (*asset, error) {
	bytes, err := templatesSchemas_headGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemas_head.gohtml", size: 191, mode: os.FileMode(436), modTime: time.Unix(1539090323, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_bodyGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x73\xdb\xb8\x11\x7f\x26\xff\x8a\x2d\x9b\x66\xa8\x0c\x43\x75\xfa\xa8\x8e\x1e\x52\x5f\x9c\xb9\xc9\xe5\xe3\xda\xf4\xee\xc1\xa7\x71\x10\x0a\x94\x51\x51\x20\x03\x92\xb2\x55\x0e\xff\xf7\xce\xe2\x83\x04\xbf\x24\xd9\xb5\xaf\xd7\x36\x7c\xb0\x25\x70\x77\xb1\xd8\xfd\xed\x62\xb1\x50\x55\xbd\x84\xf9\x8b\x4d\x5a\x1c\x32\xba\x80\x0d\x2b\x6e\xca\x2f\x61\x94\xee\xe6\xaf\xdf\x7c\x7a\xf9\xf7\xad\x20\x8c\xd3\xf9\x26\xfd\xd3\xe6\x6b\x32\xdf\x50\x4e\x05\x29\x52\x31\xcf\x92\x72\xc3\x78\x3e\xdf\x08\x92\xdd\x7c\x4d\xc2\xbf\xa4\xeb\xc3\x45\xca\x0b\x7a\x57\xbc\x98\xc3\xcb\xba\x76\xe7\x73\x78\xcd\xcb\x5d\xee\x56\x95\x20\x7c\x43\xe1\x19\xe5\xe5\x0e\x16\x4b\x08\x2f\x59\x42\x43\xf9\x52\x52\x3a\x7b\x22\xa0\xaa\xe4\xfb\xf0\x27\x22\x18\xf9\x92\xd0\xf7\x64\x47\xeb\x1a\x96\x50\x55\x9b\xaf\xc9\xc7\xed\xa6\xae\xc3\xf7\xf4\x16\xb9\x7c\x6b\x08\xbf\x5f\xa4\x3c\x66\x9b\xca\x75\x1c\x64\x5a\x80\x7e\x3c\x23\xf2\x0d\xea\xf8\xe3\x0f\x4a\xa2\x17\xb8\x8e\x53\x55\xc0\x62\xa5\x50\x78\x91\xee\x76\x94\x17\x4a\x13\xc7\xf9\x8e\xe6\x91\x60\x59\xc1\x52\xbe\x68\x94\xd2\x34\x75\xad\x99\x29\x5f\x6b\xfa\x9f\x48\x52\xd2\x7c\x01\x3d\x95\xe4\xb0\xd2\xeb\x1d\xc9\x2a\x17\xac\xa7\xb1\xc7\x1e\x89\xd0\x20\x66\xe5\x28\xca\xe8\xe1\xa0\xfa\x92\x22\xd4\x8a\x2f\xe0\xf9\xf4\x2c\x95\xe4\x51\xea\x48\xbd\x15\xab\xfc\xae\xd4\x76\xcc\xb2\xb9\x99\xba\x59\xfa\x67\xcf\xfb\xdc\xcc\x3b\x34\x41\x87\xd8\x16\xd6\x9a\xc1\x71\xd4\x70\x55\xb5\x63\x38\x52\xcf\xdc\x76\xc8\x45\x4c\x7c\xcf\xb3\xb2\x80\xf4\xcb\x3f\x68\x54\xb8\x55\x05\xda\x16\x6a\xa0\x45\x87\x24\xfb\x20\x07\xbb\x20\x51\x84\xa7\x60\x62\xb1\xdb\x68\xb1\x86\x8d\xd9\x8c\x57\x14\x74\xbc\x76\x86\x3e\x6a\x0c\xe1\x25\xa3\xc9\xba\xeb\xf1\x81\x58\x49\x83\x8e\xaf\x15\x5f\x3d\x73\x9d\xb8\xe4\x11\x30\xce\x0a\x7f\x56\x49\x14\xe9\x95\xc7\x48\x2b\x51\xa0\x27\x56\x13\x18\xc3\x4e\x2d\x39\x7c\xb5\x5e\x4b\x4a\x35\xa3\x8f\x9a\x4b\x51\x06\x2e\x41\x07\x2e\x96\x8a\x16\x57\xf5\x49\x06\x7d\x55\x45\x24\x49\xb4\x2a\x21\x8e\xc1\xb3\xba\x0e\xa0\x0f\x04\xf5\xfe\xc7\x32\x2d\xe8\xba\x81\x03\xae\xcd\xf6\x7b\xed\x5a\xc8\xe8\x7b\x3c\x07\x41\xf3\x34\xd9\x53\x91\x5b\xce\x37\x63\xa3\xee\xff\xab\x61\x90\x02\xa5\x15\xab\xaa\x61\x09\x2f\x4b\x1e\xa1\x82\x6a\xd5\x7e\x54\xdc\xe1\x72\x8a\x3b\xb5\x6c\x9d\x92\x02\x60\xc0\x78\x41\x45\x4c\x22\x5a\xd5\x33\xf0\xaf\xd1\x7f\xa9\x5a\x6a\x23\xeb\x43\x59\x64\x65\xf1\x46\x0e\xe3\xfa\x05\x15\x02\xa8\x10\xa9\x40\x97\xb1\x18\x18\x2c\x97\xc0\x59\x02\xe8\x41\x41\x8b\x52\x70\xfc\x1a\xe0\x1f\x5c\xb9\x43\xc4\x26\xc7\x55\xb0\xd0\xdf\x91\xec\x2a\x2f\x04\xe3\x9b\x95\x3d\xb5\xeb\x5c\xc3\x12\x90\x4e\x41\x5a\xd0\xbc\x4c\x0a\x58\x02\xa7\xb7\xbe\xd1\xe9\x32\x15\xef\xe9\xed\xa4\x66\x33\xd7\x69\x8d\xd7\xe2\xa7\xb5\x89\x8d\x20\x9d\xeb\x94\xef\xbe\xcf\x2f\x45\xba\x7b\x85\x5a\x6a\x7c\xb1\x58\x2a\x73\xd5\xe2\x47\x03\x5f\xba\x40\x4a\xd2\x80\x5a\xc1\xef\xda\xc5\x77\xa3\x5f\xcd\xc1\xf2\x57\x42\x90\x83\x99\x4b\x69\xdb\x24\x08\xc6\x51\xc9\x73\xe7\x0a\xfd\xab\x9e\xd9\x1c\xb4\x38\xda\x2a\x6c\xb8\x95\x55\x2c\x3e\x58\xc2\x8e\x6c\xa9\xdf\xfa\xd6\x56\x05\x5d\x9a\x50\xee\x33\x3e\x53\xf2\xe2\x54\x00\x0b\x60\x4f\x12\x54\x4d\xd9\x93\x71\xa8\xec\x6c\xa9\x25\x18\x14\xfe\xcc\x8a\x9b\xd7\x88\x08\x68\xd2\xa5\x26\x77\x9c\x7d\x80\x60\x41\x51\xdd\x80\x92\x49\xd8\x08\x00\x6f\x4f\x12\x0f\xe3\xcb\xb0\xb1\x58\xb2\x59\xc6\x55\x8f\x8d\xaf\xaa\x92\x30\xcc\x15\xaa\x7f\x16\x24\xf3\xa9\x10\x01\x78\x31\x61\x09\x5d\x43\x91\x9a\xc0\x82\xcf\xd3\xd1\xf1\x19\x98\x15\x8b\x20\xb5\xf3\x66\x66\xc2\x46\xa1\x93\x66\xbe\x62\x2b\x58\xc2\xde\xed\xf0\x21\x22\x92\x9c\x5a\xfb\xc8\x99\x72\xee\x61\xac\xfe\x9e\xe3\x8e\xcc\x7b\xc2\x6d\x8d\x7a\xc6\xd0\xe7\x79\xcd\x8f\x52\x1e\x91\x02\x3c\x09\xe0\x5f\x3c\x0f\x8e\x21\x18\xbc\x5f\xbc\x95\x37\xb3\xbc\x3c\xe1\xe4\x5f\xd9\xc7\x67\x7b\xa6\x75\x6f\x63\xd4\xae\x73\xcf\x91\xf0\x74\xf6\x1c\x64\x9f\xf6\xdb\x89\x74\x57\xf7\x72\x57\xf7\xb3\x29\x46\x38\x4d\xe3\x6e\x4a\xfd\xc0\xe9\x87\xb8\x97\x57\x35\x35\xe3\x6b\x7a\x17\x74\x36\x72\xe4\x1f\xec\xe3\x08\x81\xaf\x9a\x1c\xfe\x68\xe5\xdf\x53\xd9\xf0\x3a\x80\x74\x7b\x9f\xe4\xf9\x67\xa4\x7f\xfe\xfc\xb4\xe0\x16\x8f\xd0\x7b\xce\x88\xa2\x3e\x0b\x3e\xf7\x0b\xa6\xe3\x2e\xbf\xd6\x0e\x1f\x9b\xa7\x1f\x4e\x63\x34\xf8\x3c\x30\xbe\x52\xf4\x76\x27\x84\x4e\xda\xd2\x9b\x8d\x2a\x31\x54\xdf\x0e\xa5\x51\x13\x3e\xad\xf5\xda\x4a\xed\xa8\xcb\x5f\xe5\x39\xdb\x70\xc6\x37\x68\xa7\x8c\x4e\x7b\xbc\x4d\x04\x0a\xf5\xa7\x13\xc1\x40\xb4\xb7\xf7\x26\x54\x3d\x6e\xa9\x73\xa6\xde\x8f\x4a\x6d\x73\x47\x5d\x55\x66\x0e\x35\xd9\xb7\x78\xfc\x16\x8f\x5d\x13\x7e\x8b\xc7\x33\x2d\xf5\x58\xf1\x68\xce\x8e\xfa\x58\xa9\xb6\x66\xf5\xc1\x35\x15\x93\x9a\x4b\x1d\xbc\x3a\x27\xce\xf9\x1c\xd4\xbc\xe6\xc4\x39\xda\x64\x78\xa6\x8e\x99\x8a\xf2\xe1\x6d\x86\x61\x87\xa1\xdb\x5c\x30\x1d\xa9\x23\x6d\x05\xc7\x19\x69\x28\xa8\xa1\x4a\x77\x50\x86\xad\x83\xe1\xd9\x4f\x4b\xff\x8e\x14\xe4\x87\x94\xac\xa9\x78\x92\x2e\x82\x24\x55\xc5\xeb\xa0\xd5\xd6\x65\x73\x07\x8d\x24\x4f\x0f\xaa\x96\x43\xe3\x7c\xdd\x40\x54\x9e\x50\xaa\x23\x85\x0c\x9a\x67\x06\xa2\xed\xb2\x94\x7c\x25\x49\x47\xe0\x02\xd0\x3e\x7e\x06\xa6\x17\xa9\xc7\x3f\x12\x41\x76\xf9\x0c\x7c\xeb\x1c\x19\xe8\xe3\xbc\xa9\xc0\x33\x22\x28\x97\x88\xc8\xc2\xbf\xa5\xa5\x88\x68\xe8\xbf\x68\x4f\x8f\xc6\x67\xcd\xb9\x5b\x71\x25\x52\x95\x5c\x25\x06\xfd\x45\x19\xe8\x0d\x2d\x5a\x5d\x65\xf1\xa9\x3b\x10\x7e\x66\x7a\x11\x46\x08\x8b\xc1\xc8\x59\x76\x4f\x05\x76\x92\x54\x29\x12\xb1\xe6\x7b\x28\xb9\xe1\xe1\x69\x01\x71\x5a\xf2\x35\x9e\x58\x23\x25\x3a\x84\x0b\x8c\x6b\x4d\x82\xca\xe8\x39\x71\xa3\xd0\x3a\x99\xb3\x40\xad\xd5\x28\x6e\x4a\x2e\x37\x33\xc3\xd5\xb8\xb2\x6f\x74\xf5\x39\xc4\x7f\x9f\x90\xc9\x57\xc6\x6b\x19\xde\xa7\x62\x47\x12\xf6\x4f\xba\xfe\x28\xdf\xbc\xa5\x07\x2b\xf8\xcd\xba\xf5\xea\xa4\xcf\x8e\x3b\xc7\x90\x4a\x15\x7d\xa3\xb7\x6e\xb6\x34\x2d\x47\xdd\x7f\xea\x1e\x01\x7e\xd5\xde\xda\x20\x2a\xce\x09\x87\xa9\x76\x9a\x1d\x24\x13\x7d\xb9\x51\xf0\x5b\xfa\x9c\x87\x7f\x13\x82\x8e\xfc\x93\xdf\xb2\x22\xba\x81\x5c\x44\xdd\x60\x28\x0e\x19\x9d\x19\x7f\x44\x24\xa7\x30\x1d\x1e\x0b\xab\xa3\x81\x82\x96\xc7\x3a\x1a\xc6\x89\x76\xe3\x41\x46\xd4\x8b\x5c\x44\x66\x40\x1e\x9a\x8c\x29\x29\x5d\x5f\x90\xbc\xb0\x1a\x0c\x8d\xc4\xc6\x98\x48\xf0\x29\xad\x6b\x7f\x64\xc3\x06\x2f\x97\xfb\xda\xac\x33\x79\x5b\xff\x0d\x85\x4e\x8a\xe8\x49\xe8\x34\x25\xb4\x99\x4e\x5b\xe9\xb1\x17\x27\xa2\x47\x58\x9e\x16\xd2\x97\x61\xaf\xaf\x76\x4f\xb4\x2e\x64\xb2\xca\x25\x80\x20\x8d\xa1\xe4\x5b\x9e\xde\x72\x40\x28\xe9\xec\xf3\x80\xc8\x7d\x47\xb2\xff\x68\xf0\xfe\x9f\x45\xe4\x58\x7d\x67\x9e\x41\x98\xea\x3e\x36\x5c\xad\xc6\x9b\xde\x86\x2e\x4e\x05\x6c\xe9\x41\x76\x5c\xd5\xcd\x97\xf2\xf6\x91\x48\xeb\xe8\x9a\xc3\x12\xb0\x44\xe5\x6b\x5f\xd0\x3c\x80\xf1\xd9\x5a\x0e\xc7\xdb\xd2\x83\x87\xc5\x06\xce\x6a\x0d\xcb\xf9\xbd\x85\xd2\xa3\x7d\x51\x8f\xf5\x42\x4d\xb9\x69\x1b\xe8\xcc\x08\x7f\x1a\xbb\xe8\x10\xfd\x4d\x5a\xe6\xe9\x72\x43\xbf\xc8\x7f\x47\xb2\xbc\xd3\xea\x1c\x2f\xf4\x55\x9d\xff\x8e\x64\xff\x1b\x17\x8a\xaa\xf0\xd2\xb5\xd3\x39\x0c\xbd\xb3\x78\x93\xfb\xcf\xb8\xbb\x74\x2d\x9c\xdc\xfb\x2a\x51\xaf\xf9\x2d\x3d\x28\x4a\x93\x2a\xf5\x85\xa8\xd3\x9c\x1c\x0c\xe0\x1e\x3a\x83\x8c\x8a\xd1\x39\xcc\xd3\x26\xb3\x7a\xd6\x5c\xc7\x9e\x02\xd3\x99\xf7\x94\x5d\x60\x75\xaf\x2a\x9d\xc7\xbb\xab\xc4\x70\x1e\xb9\xaf\x7c\x4b\x0f\x26\xe7\xac\x46\x5e\x4b\xd3\x4c\xdd\x66\x0e\xae\x33\x47\xf6\x02\x8c\x66\x75\x6d\xc7\x46\xee\xe3\xf4\xcd\xe5\x42\xdf\xb9\x3d\x82\x8e\x28\x55\xdf\xc9\xb1\xd1\x4b\xb9\x6b\x58\x02\x73\x65\x66\x95\x6f\x91\xea\xc8\x4d\xab\xe3\x6c\x03\xd5\xbf\xd9\x93\xe4\x4a\x42\x79\x15\xa8\xcf\x0a\x76\x2b\x29\x34\x00\x94\xbb\x0d\xf6\x4d\x9f\xbe\xa3\xfe\xf4\x1d\xd2\x76\x3b\x68\xaf\x8d\x31\x82\xb7\x6d\xef\xb0\x46\x2f\x82\x8e\xb7\xc5\xe2\xc9\xbe\xd8\xef\xff\xb0\x46\x6c\x00\x4d\xa8\xfc\x21\x07\xae\x30\x00\x36\xb3\x6f\xc7\x3a\xf5\xdf\x76\x7b\x1f\x65\x3b\x85\x5f\xcf\x30\x9d\x1e\xd8\xd0\x34\xfb\x61\xe7\x71\x9c\xb5\xe9\x36\x3d\xb9\x71\x94\xcb\x8f\x9a\x67\xbf\xbf\x9f\xc2\x1d\x03\xa9\x78\xb8\xda\x6e\x57\xcb\xfd\x5e\x47\xcf\x48\xb7\x6a\xf8\x03\x09\x99\x7d\xd2\xd3\x4d\xab\x26\xe5\xfc\x06\xda\x56\xa6\x54\x9d\x6e\x5e\xb5\xbf\x00\x1a\xf6\xaf\xce\xac\xdc\x15\x9c\xc7\xab\x75\xad\xa1\x24\x71\x07\xf5\xf9\xd4\xf6\x23\x49\xff\xed\x42\x1d\xa1\x32\xa8\xcb\x8f\x64\xa1\xf1\xf2\x7b\xac\xf6\x56\x30\xd4\x6f\x72\x11\x35\x49\x4b\x13\xc8\x05\xe8\xda\xe8\x4c\x23\x1a\xd8\x1f\x35\xa3\x26\x9a\x34\xe4\xc8\x2e\xfb\xdf\x67\x4a\x9d\xf3\x87\xc6\xac\xad\x1f\xa9\xfd\x2b\x00\x00\xff\xff\xd2\x01\x8c\x19\x0f\x29\x00\x00")

func templatesTypes_bodyGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_bodyGohtml,
		"templates/types_body.gohtml",
	)
}

func templatesTypes_bodyGohtml() (*asset, error) {
	bytes, err := templatesTypes_bodyGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_body.gohtml", size: 10511, mode: os.FileMode(436), modTime: time.Unix(1546604105, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_headGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xc1\x4a\xc4\x30\x14\x85\xe1\xb5\x79\x8a\xc3\xd0\x85\x2e\x26\x01\x97\x82\x0b\x61\x06\xe9\xc6\xba\x88\x0f\x70\xdb\x5e\xd3\xd0\x36\xad\x49\x44\xe4\x72\xdf\x5d\xd0\x82\xbb\x9f\xef\x1c\xe7\xe0\xa7\x58\xf0\x1e\x17\xc6\x17\x15\x04\x4e\x9c\xa9\xf2\x88\xfe\x1b\x21\xd6\xe9\xb3\xb7\xc3\xb6\xba\xeb\xb3\x3f\xbf\xcd\x99\x62\x62\x17\xb6\xfb\xf0\xb1\x58\x5c\x3a\xbc\x74\x1e\xd7\x4b\xeb\xd1\x7a\xb3\xd3\x30\x53\x60\x88\x34\xf6\x68\x55\x63\xe2\xba\x6f\xb9\xe2\xd6\x88\x64\x4a\x81\xd1\x1c\xf2\xf0\x88\xc6\xfe\x75\xc1\x59\xd5\xdc\x88\x1c\x9b\x7d\x5a\x22\x15\x55\x9c\xfe\xe9\x95\xea\xa4\x7a\x32\x22\x9c\xc6\xdf\xff\x9d\xf9\x09\x00\x00\xff\xff\xc2\xe3\x00\xe2\xbf\x00\x00\x00")

func templatesTypes_headGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_headGohtml,
		"templates/types_head.gohtml",
	)
}

func templatesTypes_headGohtml() (*asset, error) {
	bytes, err := templatesTypes_headGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_head.gohtml", size: 191, mode: os.FileMode(436), modTime: time.Unix(1539090323, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_serviceGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x8f\xdb\x36\x10\xbd\xef\xaf\x98\x08\x69\x20\x07\x8a\x0c\xf4\xe8\xc2\x87\xd4\xdd\x4d\x03\xa4\xf9\x5a\x17\x39\x06\x5c\x69\x24\x13\x96\x49\x79\x44\x6d\x76\x41\xe8\xbf\x17\xa4\x28\xaf\x6c\xeb\xcb\x4d\x5a\x84\xb7\x35\xc9\xe1\xcc\xbc\x37\x6f\x46\xab\xf5\x2b\x98\xbf\x4c\xa5\x7a\xcc\x71\x01\x29\x57\x9b\xf2\x2e\x8c\xe4\x6e\x7e\xfd\x66\xfd\xea\xef\x2d\x31\x2e\x70\x9e\xca\x5f\xd3\x7d\x36\x4f\x51\x20\x31\x25\x69\x9e\x67\x65\xca\x45\x31\x4f\x89\xe5\x9b\x7d\x16\xde\x22\xdd\xf3\x08\x57\x52\x28\x7c\x50\x2f\xe7\xf0\xaa\xaa\xae\x92\x52\x44\xf0\x06\x95\xd6\xcd\x7e\xf8\x9e\xed\xb0\xaa\xdc\x5f\x5a\x87\x37\x1c\xb3\x78\xfd\x98\x63\x55\xfd\x85\x6a\x23\xe3\xc2\x8f\x40\xeb\x54\x9a\xdf\xe0\x70\x6d\xc5\xb2\xec\xad\x50\x48\x09\x8b\xb0\xaa\x02\xe0\x1b\x78\xa9\x35\x37\x3f\x45\x98\x2b\x49\xc5\xc7\x6d\x5a\x55\xe1\xdb\xa7\x5f\xfe\x64\x22\xce\x90\x40\x6b\xe0\x09\x3c\x0f\xd7\xc4\x22\xa4\x6b\xc1\xee\x32\x8c\xa1\xaa\x20\x50\x66\x53\xe6\x28\x14\xb1\x88\x8b\xb4\x36\x51\x9f\x03\xad\x51\xc4\x55\x35\x33\xde\xec\xb3\x7a\xcb\x7a\x5b\x80\xbe\x02\x00\x67\xb7\x71\xd1\x79\x6f\xe3\x06\xb7\x08\x55\x49\xe2\xdc\x80\x3e\x9c\xa8\xed\x10\x13\x29\xc2\xf3\x9d\x35\x01\x8b\xe5\xa0\xd1\x66\x79\x5a\xbb\x1b\x2e\xa9\xde\x02\x5e\x9c\x3e\xa5\xcf\xae\x99\x65\xce\x2f\x3a\x0c\x04\x9d\xa7\xff\xc0\x22\x22\x9e\x2b\x2e\xc5\x02\x9e\xee\x7c\x2a\xa5\xc2\x78\x25\x77\x3b\x14\xaa\xaa\xba\xef\xae\x2d\xa9\xb4\x8e\x58\x96\x35\x01\x86\x6f\x0c\x67\x3e\xbd\xfb\x50\xaa\xbc\x54\x16\xe7\xe7\xe1\xef\x32\x7e\x74\xe4\xe9\xb3\xe5\x70\x74\x46\x5e\x53\x5a\x9a\x97\xbb\x93\xd3\xac\xd7\x94\x16\x8b\x33\x00\x56\x52\x24\x3c\x6d\x2c\x74\xe7\xa8\xf5\xaa\x83\x87\x51\x6a\xb0\xb9\xcc\x81\x66\x99\x64\x33\x4a\xbb\xa1\x6a\x4c\xd5\x7e\xe9\xe3\xa4\x99\x5b\x9d\x49\x3a\x03\xc6\x9c\x3c\x41\xa5\x27\x95\xad\xe0\x50\xc4\x83\x01\xf4\x83\x31\x74\xf3\x33\x16\x32\xbb\xc7\x05\x18\x09\xf0\xf3\x36\x02\x6e\xeb\x23\x23\xb6\x2b\x66\xe0\x7f\x05\xde\x14\xb6\xae\x02\x20\x24\x02\x24\x92\x34\x83\x7e\x64\x22\xf5\x60\xb0\xc8\x43\x97\x8e\xde\x83\x5f\x61\x69\x0e\xf7\xee\x77\x8b\xc3\x18\xa2\xf7\x8c\x20\x67\x84\x42\xdd\xe6\x4c\xac\xd4\x43\x97\x8e\xd8\xad\x11\xf7\xcc\xe2\x89\xb3\x65\x22\xea\xb1\x73\x43\x72\xe7\x6c\xf9\x87\xa0\x67\xbf\x35\x17\x9f\x2d\x41\xf0\x6c\x20\x5f\x6e\x1d\xfb\xbc\x74\x7f\x37\xf6\xfc\xd9\xe0\xfd\xe1\x94\x14\x39\x13\x26\x00\x45\xe1\xad\x62\x64\x1f\xf1\x0d\xeb\x4f\xa4\x3f\x3c\x55\x9d\x86\x2b\xe4\x05\x5d\xd1\xaf\x36\x3c\x8b\x3f\x24\xfe\x91\xeb\xb3\x61\x4f\x8b\xa7\xcc\xf7\xe4\xd4\xed\x7e\xe1\x6a\x63\x1d\x3d\xe4\x34\xb0\x97\x87\xcd\xc7\x98\x20\xd9\x73\xe1\x0d\x17\xbc\xd8\x8c\x24\xee\x60\x1c\x96\x6d\xd7\x06\xef\x44\x16\x9f\xa9\xa7\x6b\x8f\x6c\xad\xcd\x46\x49\x60\x08\x67\xab\x6c\x2a\x6b\xec\xb2\xe1\xde\xa2\x5a\xb3\xd4\xf7\x6c\x7d\x7a\x01\x28\x2a\x71\x16\xbe\x93\x69\xdd\xd7\x7c\xad\x33\xe9\x32\x7c\x6d\x8e\xf8\xe6\x9d\x11\xb0\x60\x94\x5a\xd5\x40\x7e\x6d\x97\x1e\xac\x57\x9e\x98\x61\x61\x39\x25\xd6\xe3\x0e\xf3\x19\xf7\x25\x16\xaa\xa1\xe7\x24\x99\x27\xdc\x07\x46\xbd\x6a\xda\x1d\x75\xbd\x53\x73\x5e\x6e\x74\xbf\xf0\x4e\x75\xdd\xcc\x63\x3c\x01\x21\x55\xdf\x55\xc3\xda\x6b\xb2\x0e\x05\xb5\x54\xfa\x82\x67\x33\x37\xb0\x4c\x81\xff\x62\xf4\xdd\x24\x23\x78\x66\x5f\xfc\x4e\x40\xa1\x3d\x1b\x1d\x25\x69\x95\x71\x14\xaa\x1e\x7b\xcc\xcc\x67\xf2\x14\x79\xe0\x11\xee\xcf\x12\x35\xda\xd9\xb2\x02\xa7\x82\x66\xf0\x12\xf8\xcd\x6f\x26\xcf\x1b\x49\xef\xf1\xdb\x29\x00\xf5\x9c\x3a\x4e\xe7\xff\x21\xb6\xb1\xae\xdd\x5f\x0e\xae\x75\xbe\xe8\x9a\x9e\xdd\xfb\xc3\x9c\x70\x7a\x5e\x0f\x90\x27\xea\xde\x33\x42\x36\xab\x0e\x7e\xfa\xe8\xd9\xac\x7a\x58\x58\x40\xde\x7f\xac\x3f\xe2\x76\x4d\xf2\x4d\x33\x7f\x98\xda\xf3\x4d\x32\x82\x5a\x37\x6d\x5e\x3a\x3f\x29\x0e\x9d\x41\x18\x09\xef\x3a\xd1\x32\xf9\x56\xdc\xcb\x2d\xd2\x0c\x7c\xc2\xa2\xcc\xd4\xf1\x70\x33\x69\xb6\x81\x1f\xa4\x44\x5d\x1c\xfc\x29\x44\xe8\xb2\xda\xac\x85\x67\x6a\x6d\x06\x46\xa3\xbe\xbb\x7a\xfa\x4b\xfc\x12\xf1\x6c\x8b\xa6\xd6\x36\x47\x8e\x30\x5f\x88\xe5\x3e\x12\x05\xe0\x25\x8c\x9b\x89\x53\x49\xa0\x3a\xb3\xc0\x0c\x20\xfd\x1e\x0c\x11\xdd\xbe\xc7\x37\xf6\x73\xd9\x91\xdb\xb2\x7f\x2a\xc3\x8d\x12\x1e\x11\xb6\x97\xf2\xe6\x85\xba\x9a\x7f\x10\xe3\x29\x00\xb9\x35\x25\x4a\xb8\x0f\x0f\x58\xff\x1b\x05\xe6\x09\x3c\x93\xdb\x09\x8d\xad\x1f\x9f\xf7\x96\x6e\xc9\x4e\x35\x13\x38\x71\xa1\x12\xdf\xfb\xdc\x82\x08\x5a\x49\x71\xa6\x0a\xb8\x63\xb1\x09\xc0\xb8\x0a\xea\x31\x47\xff\x97\xf5\x2c\x84\xdb\x8d\x2c\xb3\x18\xee\xec\x57\xdd\x50\x60\x9e\x85\x60\x64\x60\x1a\x2e\x9a\x7a\x70\x34\x58\x87\xb5\x6a\x8e\x7e\x22\x81\x2d\x8a\x96\xdc\x7c\x64\x8f\x99\x64\xb1\x9d\xe0\x56\x1b\x8c\xb6\x93\x25\xa7\xe8\x1b\x7e\x7a\x7b\xdf\x65\x9d\x0f\x7e\x9a\xf1\x85\x27\xa7\x21\x76\x65\xcd\x23\x2c\xbc\xaa\x9a\xe8\xe5\xb1\xe8\xb7\xed\xbd\x8e\x22\x2c\x0a\x39\x0d\x86\x83\x8b\x35\x07\x9e\xac\xc0\x19\x2c\x9d\x6f\x38\xa7\xa7\xba\x3c\x59\xca\x87\xfc\x22\x2c\x26\xbf\x37\x22\xde\xcd\x9a\xdc\x5b\x1a\xda\x8e\x14\xc8\xa5\x2d\xeb\xbf\xa9\x80\xf1\xef\x9d\x1e\x75\xec\xf8\x3f\xce\xc9\x4f\x1d\xb9\xad\xae\x7a\x62\x7f\x2a\xa8\xab\x63\xaf\xaa\xab\x7f\x02\x00\x00\xff\xff\x58\x91\x10\x7d\x50\x16\x00\x00")

func templatesTypes_serviceGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_serviceGohtml,
		"templates/types_service.gohtml",
	)
}

func templatesTypes_serviceGohtml() (*asset, error) {
	bytes, err := templatesTypes_serviceGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_service.gohtml", size: 5712, mode: os.FileMode(436), modTime: time.Unix(1543843328, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/loaders.gohtml":       templatesLoadersGohtml,
	"templates/schemas_body.gohtml":  templatesSchemas_bodyGohtml,
	"templates/schemas_head.gohtml":  templatesSchemas_headGohtml,
	"templates/types_body.gohtml":    templatesTypes_bodyGohtml,
	"templates/types_head.gohtml":    templatesTypes_headGohtml,
	"templates/types_service.gohtml": templatesTypes_serviceGohtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"loaders.gohtml":       &bintree{templatesLoadersGohtml, map[string]*bintree{}},
		"schemas_body.gohtml":  &bintree{templatesSchemas_bodyGohtml, map[string]*bintree{}},
		"schemas_head.gohtml":  &bintree{templatesSchemas_headGohtml, map[string]*bintree{}},
		"types_body.gohtml":    &bintree{templatesTypes_bodyGohtml, map[string]*bintree{}},
		"types_head.gohtml":    &bintree{templatesTypes_headGohtml, map[string]*bintree{}},
		"types_service.gohtml": &bintree{templatesTypes_serviceGohtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
