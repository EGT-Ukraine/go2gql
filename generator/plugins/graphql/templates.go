// Code generated by go-bindata.
// sources:
// generator/plugins/graphql/templates/output_fields.gohtml
// generator/plugins/graphql/templates/output_map_fields.gohtml
// generator/plugins/graphql/templates/schemas_body.gohtml
// generator/plugins/graphql/templates/schemas_head.gohtml
// generator/plugins/graphql/templates/types_body.gohtml
// generator/plugins/graphql/templates/types_head.gohtml
// generator/plugins/graphql/templates/types_service.gohtml
// DO NOT EDIT!

package graphql

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesOutput_fieldsGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x53\x4d\x8f\xd3\x30\x10\xbd\xef\xaf\x18\x45\x15\x4a\xaa\x36\x91\x38\x46\xea\x01\x15\xd8\x5b\x77\x59\xca\xde\x5d\x67\xe2\x9a\xba\x76\x6a\x3b\x14\x34\xf2\x7f\x47\x76\xbf\x69\x59\x2d\x48\x3b\x87\x48\x99\x79\xf3\xf5\x9e\x87\x68\x0c\xd5\x50\x18\xff\xab\xc3\x1a\x84\xf4\xcb\x7e\x51\x72\xb3\xae\x3e\xdd\xcf\xc7\xdf\x56\x96\x49\x8d\x95\x30\xef\xc5\x46\x55\x02\x35\x5a\xe6\x8d\xad\x3a\xd5\x0b\xa9\x5d\x25\x2c\xeb\x96\x1b\x55\x3e\xa1\x6e\xd0\x7e\x96\xa8\x1a\x37\x35\xda\xe3\x4f\x3f\xac\x60\x1c\xc2\x1d\x11\x58\xa6\x05\xc2\xa0\x8d\x51\xa8\x27\x30\x28\x1f\x7a\xdf\xf5\xfe\x61\xf1\x1d\xb9\x2f\x77\x59\x09\x0c\x00\x40\xf4\x47\xfc\x99\x59\xc9\x16\x0a\x67\x6c\x8d\x21\x94\x1f\x9a\x26\x65\x4c\x8d\x6e\xa5\xc8\x33\xa2\x5d\xe5\x72\x17\xcf\x46\xf0\x8e\x48\x6c\xd4\xe3\x4a\x84\xb0\x2b\x4e\xa9\x70\xb4\x88\xa9\xe1\x3a\xe7\x08\xf8\x88\x8e\x5b\xd9\x79\x69\x74\x0d\x47\xd8\x97\xde\x78\x6c\xa6\x66\xbd\x46\xed\x43\x38\xc1\xe7\x89\x35\x22\xce\x94\xda\x6f\x58\x46\x5f\xdc\x31\x4d\xbf\x27\xe3\x3c\xe7\x09\x9d\x51\x3f\xb0\x86\xb6\xd7\x3c\xef\xe0\x6c\xda\x7d\xe8\x91\x59\xb6\x76\x05\xe4\x52\x7b\xb4\x2d\xe3\x48\x61\x04\x68\xad\xb1\x05\x9c\x96\x89\xe6\xb6\xd2\xf3\x25\x38\xcb\x23\xb3\x5d\xf9\xd5\xf4\x96\x63\x99\x47\x39\x8b\x4b\x68\x34\xce\x1c\xc2\x90\x48\x98\xc3\x94\xe7\x4c\xdf\x27\x6f\x08\xf5\x55\x5e\x34\xd9\xa6\x36\x93\x09\x68\xa9\xe0\xba\xf6\xc1\x2c\xfa\xde\xea\x08\x1a\xc5\xcf\x4d\x5c\xb8\xe9\x75\x71\x87\xa1\xb3\xfc\x66\x94\x48\xb6\x07\x8e\x67\x88\xcd\x94\x39\x7f\x7c\x35\x2f\x0c\x72\x54\x31\x26\xcc\x4d\x08\xf9\xa5\x5e\xcf\x4c\xf5\x08\x99\xcb\xae\x45\x2b\xfe\xbe\x01\x11\x2a\x87\xaf\xeb\xff\xca\x6e\x2f\x35\x03\xd4\xcd\xcd\x66\x49\xd1\xff\x13\xf4\xad\x09\xb5\x3c\x83\xc1\x9b\x92\x98\x3a\xfc\x0b\x8d\xb7\x58\xbc\xfc\x3b\x7f\xbd\x44\xe9\xe6\xdc\xee\x38\x67\xb8\xcd\x33\x97\xee\x0b\x4c\x0b\xbd\x5e\x69\xb3\xd5\x10\x2f\x2d\x2b\x8e\x35\xf6\x87\x1e\x8a\xbb\x93\x68\xbf\x03\x00\x00\xff\xff\x2f\x54\x41\x15\x64\x05\x00\x00")

func templatesOutput_fieldsGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesOutput_fieldsGohtml,
		"templates/output_fields.gohtml",
	)
}

func templatesOutput_fieldsGohtml() (*asset, error) {
	bytes, err := templatesOutput_fieldsGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/output_fields.gohtml", size: 1380, mode: os.FileMode(436), modTime: time.Unix(1547548147, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesOutput_map_fieldsGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x54\xb1\x6e\xdb\x30\x10\xdd\xf3\x15\x07\x21\x28\x64\xc3\x96\x80\x8e\x02\x3c\x14\x41\x9b\xa9\x49\x90\xa6\x59\x82\x0c\x34\x75\xa2\x59\xd3\xa4\x7c\xa4\xec\x1a\x04\xff\xbd\x20\xe5\xd4\x4e\x2d\x07\x68\x87\x4e\xb9\x41\x03\xef\xdd\xf1\xdd\x3d\xea\x79\x3f\x85\x72\x2c\x8c\xdb\xb5\x58\x81\x90\x6e\xd1\xcd\x0b\x6e\x56\xe5\xe7\xeb\x87\xe9\xf7\x25\x31\xa9\xb1\x14\xe6\xa3\x58\xab\x52\xa0\x46\x62\xce\x50\xd9\xaa\x4e\x48\x6d\x4b\x41\xac\x5d\xac\x55\x71\x8f\xba\x46\xfa\x22\x51\xd5\xf6\xca\x68\x87\x3f\xdd\xb8\x84\x69\x08\x17\xde\x03\x31\x2d\x10\x2e\x9b\x98\x85\x6a\x06\x97\xc5\x6d\xe7\xda\xce\xdd\xce\x7f\x20\x77\xc5\x57\xd6\xf6\x85\x09\x0f\x00\xe0\xfd\x1f\x90\x47\x46\x92\xcd\x15\xde\xb0\x15\x86\x50\x7c\xaa\xeb\x54\x71\x65\x74\x23\x45\x9e\x79\xdf\x37\x2f\xfa\x7c\x36\x81\x0f\xde\x8b\xb5\xba\x5b\x8a\x10\x8a\x04\xf5\xa9\x71\x8c\x88\xa9\xe0\xb4\xe6\x37\xe0\x21\x6d\xc2\x7b\xce\x94\xda\xb3\x2e\xe2\x59\xe4\x9d\xe8\xec\x07\x0c\xe1\x50\x73\x8f\xd6\xa8\x0d\x56\xd0\x74\x9a\xe7\x2d\x1c\x5d\xbf\x4f\xdd\x31\x62\x2b\x3b\x82\x5c\x6a\x87\xd4\x30\x8e\x3e\x4c\x00\x89\x0c\x8d\xe0\xc0\x2e\x86\xdd\x4a\xc7\x17\x60\x89\xc7\x6d\xb5\xc5\x37\xd3\x11\xc7\x22\x8f\x12\x8d\x5e\x43\x63\x70\x66\x11\xc6\xde\x0b\xf3\xc2\xf2\x78\x75\xd7\xe9\x34\x84\xea\xa4\x2e\x86\x6c\xd2\x35\xb3\x19\x68\xa9\xe0\xb4\xf7\x4b\x10\xba\x8e\x74\x04\x4d\xe2\x67\x10\x17\x06\x4f\x6d\x9c\x61\x6c\x89\x0f\x66\x37\x8c\x80\xd0\xc2\xd3\xf3\x8a\xb5\x4f\xd6\x91\xd4\xe2\xf9\x68\x43\x83\x45\x8d\x21\x58\xe2\x6e\x02\x1b\xa6\x3a\x8c\xfd\xfb\x17\xf6\x5a\xb2\xc7\x94\xcc\x6c\x76\xaa\xdb\x9b\x83\x5a\x98\x01\x6b\x5b\xd4\x75\x4e\x68\x27\x30\x4c\xec\x7c\x87\x18\xd9\x12\x77\x59\x05\x90\x68\xbe\x8d\x4c\x33\x64\x55\x3f\xcb\x79\x6c\x18\xfd\xc5\xce\xf7\x6a\x25\xfa\x43\x6a\xa5\x17\xf3\x6f\x0f\xe6\x3f\x08\x46\xfc\x5d\xb2\x8b\xf3\x15\xc7\xbf\xa2\xf7\xc9\x40\x6c\xef\x34\x37\xb8\xcd\x33\x9b\xcc\x02\x4c\x03\x9d\x5e\x6a\xb3\xd5\x10\x6d\x23\x3b\x70\xd9\xbb\x56\x18\x45\x6b\x46\x5d\x47\xd7\xfd\x15\x00\x00\xff\xff\x14\x07\xb2\x2e\x05\x06\x00\x00")

func templatesOutput_map_fieldsGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesOutput_map_fieldsGohtml,
		"templates/output_map_fields.gohtml",
	)
}

func templatesOutput_map_fieldsGohtml() (*asset, error) {
	bytes, err := templatesOutput_map_fieldsGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/output_map_fields.gohtml", size: 1541, mode: os.FileMode(436), modTime: time.Unix(1547548147, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemas_bodyGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4b\x6f\x1a\x31\x10\x3e\xef\xfe\x8a\xd1\x0a\xb5\x4b\x44\x16\xa9\x47\x24\x2e\xa5\x69\xda\x43\xf3\x68\xe8\xa9\xaa\x2a\x63\x86\xc5\x8d\xb1\x89\xd7\x9b\x34\xb2\xfc\xdf\x2b\x3f\xf6\x01\x04\x92\x5b\x39\x99\x99\xf1\x7c\xdf\xcc\x37\x9e\x35\xe6\x1c\xc6\x67\xa5\xd4\xcf\x5b\x9c\x40\xc9\xf4\xba\x5e\x14\x54\x6e\xc6\x17\x97\xf3\xf3\x1f\xf7\x8a\x30\x81\xe3\x52\x7e\x28\x1f\xf8\xb8\x44\x81\x8a\x68\xa9\xc6\x5b\x5e\x97\x4c\x54\xe3\x52\x91\xed\xfa\x81\x17\x77\x74\x8d\x1b\xf2\x51\x2e\x9f\x67\x52\x68\xfc\xab\xcf\xc6\x70\x6e\x6d\xea\xb2\x82\x31\x83\x18\x70\x45\x36\x68\x6d\x38\xcf\x38\x43\xa1\x2b\xa8\xb4\xaa\xa9\x06\x93\x26\xc6\x80\x22\xa2\x44\x18\x54\xa8\x1e\x19\x45\x98\x4c\x61\x50\xdc\x85\x3f\x95\x4f\x98\x24\xc6\x34\xee\x22\xa4\x0b\x89\xc0\x98\x52\xce\x1d\x5c\xeb\x0e\x8e\x4b\x6f\x75\x57\x8d\x01\x14\x4b\x9f\xc6\xa6\xe9\x5b\xd0\x56\xb5\xa0\x90\xd3\xd3\x15\x0c\xe1\x12\xf5\x11\x56\xf9\xf0\x55\x5e\xae\x72\x85\xba\x56\x02\x68\x71\x24\x4d\x6a\xd3\x1e\xf9\x40\x2b\x80\xbe\x40\x2b\xa7\xbc\x3a\xcd\x78\x04\x6c\x0d\x67\xc6\x30\xa1\x51\x51\xdc\x6a\xa9\xaa\x9b\xfb\xd2\xda\xe2\x6b\x67\xf9\x42\xc4\x92\xa3\x72\xf3\xc1\x56\x30\x28\xe6\x8a\x50\x54\x17\x82\x2c\x38\x7a\x1e\x23\xd0\x0a\x8c\x91\x5b\x14\x5a\x11\xca\x44\x19\x72\x84\x40\x77\x2f\x12\x1e\x42\x6e\x4c\xf9\xc0\x83\x3b\x30\x19\x01\x2a\x25\xd5\xf0\xed\xba\xb3\x15\x50\x5e\x1d\xeb\x10\x4c\xa7\x20\x18\x77\xe9\x92\xa6\x9d\x07\xa0\xc6\x8e\xc0\x18\x0f\x1c\xeb\xbd\x70\xe7\x55\x9e\x45\x2c\xa0\xcd\x2c\xed\x81\x00\x25\xe2\xbd\x86\x05\x7a\x10\xc1\x78\x36\x4c\x93\x64\x77\xa6\xde\x58\xc7\x23\x51\x87\xf9\x6f\x6b\x54\xcf\x9f\x19\xf2\x65\x05\x53\x30\x26\x7a\x67\x52\x84\xe7\x21\x15\x64\x3e\x26\xeb\x92\x0f\xac\xcd\x4f\x74\xc4\x89\x7c\x5a\xbc\xbe\x44\x91\xd8\x6f\x8f\x7e\x9c\xdc\x31\xfe\xdf\x6a\x4d\x34\x93\xe2\x95\x12\x9a\xb0\xff\x51\xc5\x2e\xc5\x63\xca\xc9\xc5\x1f\xa4\x3a\x08\x77\xed\xcf\x7b\xba\x85\x80\x66\x2c\xa6\xfd\x21\xbb\xc2\xa7\x70\xa5\x3f\xee\xc1\x32\x93\x62\xc5\x4a\x3f\x9c\xee\xe6\x04\xb2\xfd\x54\xd9\xc8\x39\x8d\x71\x95\x8a\x96\x48\x71\x5b\x4b\x8d\xcb\x99\xdc\x6c\xdc\x5c\x66\x59\x24\x93\x24\x9f\xb0\xa2\x8a\x6d\x5d\x45\x93\x1e\xaf\x9d\x78\x6b\x9b\xa4\x6d\xa5\x49\x12\xea\x9f\xf4\x89\x07\x93\x67\x17\x19\x70\x14\x2d\x85\xa8\x69\x03\xdc\x6b\xd6\x8a\x2f\x7d\xa7\x8e\x04\xc6\x5c\x2e\xac\x79\x04\x3d\x67\xe2\x5a\xe0\x5c\xb1\x7e\x5f\x45\x2f\x34\xda\xbb\xd2\xdc\xba\x0c\xb6\x00\xf4\x73\x2f\xc1\xaf\x51\x07\x8b\xbc\x3a\x8d\xf5\x6e\xbf\x7c\xd3\x84\xf6\x04\xea\xdd\x18\xb5\xee\xb9\xff\x50\x46\xef\x75\x5f\xc2\x2e\x66\x5f\x1c\x17\xfa\x92\x32\xfe\xf7\x1d\x2b\xc9\x1f\x71\x02\x6e\xad\xe7\xdb\xbe\x30\xd1\x75\x43\x14\xd9\x54\x43\xc8\xfd\xc2\x5e\x11\x8a\x6e\x93\x75\x0b\xb4\xf9\xc5\xbd\x17\xde\x9b\xb1\x2e\x48\x30\xde\xfa\x3b\x4c\xdb\x6f\x55\x37\x1a\x07\xff\x0f\x3a\x99\x09\x19\x9a\x7f\xaa\x85\xb1\x81\x6d\x68\x03\xd6\x74\xae\xdb\xca\x5a\x31\x51\x46\x77\xe4\xb4\xcb\xc0\x1b\xdd\xbb\xee\x9b\x0f\xd7\xfb\x15\x3e\xc5\x6f\xdf\xc1\xce\xef\x5e\x9e\x5f\x63\x5e\x8e\xc2\x1f\x83\x76\x41\x89\x38\xa9\x45\xb3\x24\x82\xaf\x61\xd1\x58\xc3\xe5\xdd\x98\xf6\x7e\x4b\xcf\x0e\x53\xfb\x2f\x00\x00\xff\xff\xb8\x44\x15\x75\x56\x09\x00\x00")

func templatesSchemas_bodyGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemas_bodyGohtml,
		"templates/schemas_body.gohtml",
	)
}

func templatesSchemas_bodyGohtml() (*asset, error) {
	bytes, err := templatesSchemas_bodyGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemas_body.gohtml", size: 2390, mode: os.FileMode(436), modTime: time.Unix(1547548147, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemas_headGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xc1\x4a\xc4\x30\x14\x85\xe1\xb5\x79\x8a\xc3\xd0\x85\x2e\x26\x01\x97\x82\x0b\x61\x06\xe9\xc6\xba\x88\x0f\x70\xdb\x5e\xd3\xd0\x36\xad\x49\x44\xe4\x72\xdf\x5d\xd0\x82\xbb\x9f\xef\x1c\xe7\xe0\xa7\x58\xf0\x1e\x17\xc6\x17\x15\x04\x4e\x9c\xa9\xf2\x88\xfe\x1b\x21\xd6\xe9\xb3\xb7\xc3\xb6\xba\xeb\xb3\x3f\xbf\xcd\x99\x62\x62\x17\xb6\xfb\xf0\xb1\x58\x5c\x3a\xbc\x74\x1e\xd7\x4b\xeb\xd1\x7a\xb3\xd3\x30\x53\x60\x88\x34\xf6\x68\x55\x63\xe2\xba\x6f\xb9\xe2\xd6\x88\x64\x4a\x81\xd1\x1c\xf2\xf0\x88\xc6\xfe\x75\xc1\x59\xd5\xdc\x88\x1c\x9b\x7d\x5a\x22\x15\x55\x9c\xfe\xe9\x95\xea\xa4\x7a\x32\x22\x9c\xc6\xdf\xff\x9d\xf9\x09\x00\x00\xff\xff\xc2\xe3\x00\xe2\xbf\x00\x00\x00")

func templatesSchemas_headGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemas_headGohtml,
		"templates/schemas_head.gohtml",
	)
}

func templatesSchemas_headGohtml() (*asset, error) {
	bytes, err := templatesSchemas_headGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemas_head.gohtml", size: 191, mode: os.FileMode(436), modTime: time.Unix(1542272895, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_bodyGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x59\x5b\x6f\xdb\xb8\x12\x7e\x96\x7e\xc5\x1c\x9d\x9c\x40\x2e\x54\xf9\xe0\x3c\xfa\xc0\x0f\xd9\x6e\x53\x14\xdd\x36\x6d\xb7\xdb\x3e\xb8\x46\xa2\xda\x94\xc2\x95\x4c\x29\xd4\xa5\x09\x08\xfd\xf7\x05\x6f\x12\x75\xb1\x2d\x77\xd3\xc5\x62\x51\x3d\x18\x36\x35\x9c\x19\x7e\xf3\xcd\x90\x1c\x33\xf6\x14\xe6\x4f\xa2\xb4\x78\xc8\xd0\x02\x22\x5c\xdc\x96\x5f\xfc\x4d\xba\x9b\x3f\x7f\xf1\xe1\xe9\x6f\x31\x0d\x30\x41\xf3\x28\xfd\x5f\x74\x97\xcc\x23\x44\x10\x0d\x8a\x94\xce\xb3\xa4\x8c\x30\xc9\xe7\x11\x0d\xb2\xdb\xbb\xc4\xff\x29\xdd\x3e\x3c\x4b\x49\x81\xee\x8b\x27\x73\x78\x5a\xd7\xf6\x7c\x0e\xcf\x49\xb9\xcb\x6d\xc6\x68\x40\x22\x04\x67\x88\x94\x3b\x58\x2c\xc1\xbf\xc4\x09\xf2\xc5\x4b\x21\x69\x55\x01\x05\xc6\xc4\x7b\xff\x63\x40\x71\xf0\x25\x41\x6f\x82\x1d\xaa\x6b\x58\x02\x63\xd1\x5d\xf2\x36\x8e\xea\xda\x7f\x83\xbe\xf2\x59\xae\x31\xc4\x7f\x3f\x4b\x49\x88\x23\x66\x5b\x16\x9f\xb4\x00\xf5\x38\x5a\xe5\x0b\xee\xe3\xbb\x5f\xa4\x46\xc7\xb3\x2d\x8b\x31\xc0\xa1\x74\xc8\x7f\x96\xee\x76\x88\x14\xd2\x13\xcb\xfa\x19\xe5\x1b\x8a\xb3\x02\xa7\x64\xd1\x38\xa5\x64\xea\x5a\x4d\x46\x64\xab\xe4\x3f\x06\x49\x89\xf2\x05\xf4\x5c\x12\xc3\xd2\xaf\xd7\x41\xc6\x6c\x30\x9e\x06\x8f\x8a\x0b\x71\x40\xf4\xca\xb9\x2a\xed\x87\xc5\xdd\x17\x12\xbe\x72\x7c\x01\xe7\xfb\xad\x30\x31\x47\xba\x23\xfc\x96\x53\xc5\x6f\xe9\xb6\xa5\x97\x4d\xb4\xe9\x66\xe9\x37\x8e\x73\xd3\xd8\x1d\x42\xd0\x11\x36\x95\xb5\x30\x58\x96\x1c\x66\xac\x1d\xe3\x23\xf5\xcc\x6e\x87\x6c\xce\x89\x97\x24\x2b\x0b\x48\xbf\xfc\x8e\x36\x85\xcd\x18\x28\x2c\xe4\x40\xcb\x0e\x21\x76\x25\x06\xbb\x24\x91\x82\xc7\x68\x62\x4c\x37\xd9\x62\x0c\x6b\xd8\x74\x54\x24\x75\x9c\xd6\x42\x9f\x35\x5a\xf0\x12\xa3\x64\xdb\x8d\xf8\x40\xad\x90\xe1\x81\xaf\xe5\xbc\x7a\x66\x5b\x61\x49\x36\x80\x09\x2e\xdc\x19\x13\x2c\x52\x2b\x0f\xb9\xac\x60\x81\x32\x2c\x0d\x68\x60\xf7\x2d\xd9\xbf\xd8\x6e\x85\xa4\xb4\xe8\x72\xcf\x85\x2a\x4d\x17\xaf\x43\x17\xc3\x45\x63\x16\xfb\x20\x92\x9e\xb1\x4d\x90\x24\xca\x15\x9f\x8f\xc1\x59\x5d\x7b\xd0\x27\x82\x7c\xff\xae\x4c\x0b\xb4\x6d\xe8\xc0\xd7\x66\xc6\xbd\xb6\x0d\x66\xf4\x23\x9e\x03\x45\x79\x9a\x54\x88\xe6\x46\xf0\xf5\xd8\x68\xf8\xdf\xeb\x09\x42\xa1\x40\x91\xb1\x66\x8a\x7f\x59\x92\x0d\x77\x50\xae\xda\xdd\x14\xf7\x7c\x39\xc5\xbd\x5c\xb6\x2a\x49\x1e\x60\xc0\xa4\x40\x34\x0c\x36\x88\xd5\x33\x70\xaf\x79\xfc\x52\xb9\xd4\x46\xd7\x55\x59\x64\x65\xf1\x42\x0c\xf3\xf5\x53\x44\x29\x20\x4a\x53\xca\x43\x86\x43\xc0\xb0\x5c\x02\xc1\x09\xf0\x08\x52\x54\x94\x94\xf0\x9f\x1e\xff\xe0\x2b\xb7\x02\x1a\xe5\x1e\x5c\xf3\x85\x60\xdf\xdd\x05\xd9\x2a\x2f\x28\x26\xd1\xda\xb4\x6e\x5b\xd7\xb0\x04\x2e\x2a\x59\x4d\x51\x5e\x26\x05\x2c\x81\xa0\xaf\xae\x76\xeb\x32\xa5\x6f\xd0\xd7\xbd\xce\xcd\x6c\xab\xc5\xaf\xa5\x50\x0b\x8b\x49\x22\x55\xee\x64\xf8\x5e\xe6\x97\x34\xdd\x5d\xd0\xa8\xa1\x18\x0e\x85\x33\xab\x96\x42\x8a\xfb\x22\x0a\x42\x93\xe2\xd4\x1a\xfe\xd5\xae\xbf\x5b\x00\xa4\x0d\x9c\x5f\x50\x1a\x3c\x68\x5b\xd2\xdb\xa6\x46\x60\xc2\x9d\x9c\x6a\xcb\x77\x57\x3d\xd8\x2c\x0e\x3a\xc7\xca\x6f\x66\x4b\x54\x8c\x79\xb0\x84\x5d\x10\x23\xb7\x0d\xaf\xe9\x0a\x8f\x6a\x82\x88\x8b\xc9\x4c\xea\x0b\x53\x0a\xd8\x83\x2a\x48\xb8\x6b\x12\x4f\x4c\x80\x99\x05\x53\x69\xd0\x44\xfc\x84\x8b\xdb\xe7\x9c\x14\xd0\x54\x4c\x25\x6e\x59\x95\xc7\xf9\xc2\x55\x75\x73\x4a\xd4\x61\xad\x00\x9c\x2a\x48\x1c\x9e\x62\x7a\x1a\x0e\xc5\x34\x03\x5c\xf9\x98\x14\x63\x4c\x30\x31\x97\xc4\xfe\x44\x83\xcc\x45\x94\x7a\xe0\x84\x01\x4e\xd0\x16\x8a\x54\xe7\x16\xdc\xec\x4f\x90\x1b\xc0\x46\x3a\x82\xf0\xce\x99\x69\x83\x8d\x43\x47\x61\x5e\xe1\x35\x2c\xa1\xb2\x3b\xf3\x38\x23\x92\x1c\x19\x5b\xc9\x44\x3d\x27\x80\xd5\xdf\x76\xec\x11\xbb\x47\xc2\xd6\xb8\xa7\x81\x9e\x16\x35\x77\x93\x92\x4d\x50\x80\x23\x08\xfc\xd9\x71\xe0\x10\x83\xc1\xf9\xec\xac\x9d\x99\x11\xe5\x3d\x41\xfe\x8b\x63\x3c\x39\x32\x6d\x78\x1b\x50\xbb\xc1\x9d\xa2\xe1\xfb\xe1\x39\xa8\x3e\xed\xaf\x23\xe5\xae\xee\xd5\xae\xee\x77\x7d\x1e\x21\x28\x0d\xbb\x25\xf5\x8a\xa0\xab\xb0\x57\x57\x95\x34\x26\x5b\x74\xef\x75\xf6\x72\x3e\x7f\xb0\x95\x73\x0a\xdc\x29\x71\xf8\xaf\x51\x7f\x8f\x55\xc3\x6b\x0f\xd2\xf8\x94\xe2\xf9\x7f\x2e\x7f\x7e\x7e\x5c\x71\xcb\x47\xe8\x3d\x13\xb2\xa8\x3f\x85\x3f\xa7\x25\xd3\xe1\x90\x5f\xab\x80\x8f\xd9\xe9\xa7\xd3\x98\x0c\x7f\xbe\x31\xbf\x52\x1e\xed\x4e\x0a\x1d\xc5\xd2\x99\x8d\x3a\x31\x74\xdf\x4c\xa5\x51\x08\xbf\x2f\x7a\xed\x61\xed\x60\xc8\x2f\xf2\x1c\x47\x04\x93\x88\xe3\x94\xa1\xfd\x11\x6f\x0b\x81\x64\xfd\xf1\x42\x30\x50\xed\x54\xce\x1e\x57\x0f\x23\x35\xc5\x74\x35\xaa\xb5\xad\x1d\x35\x63\xda\x86\x34\xf6\x23\x1f\x7f\xe4\x63\x17\xc2\x1f\xf9\x38\x11\xa9\xc7\xca\x47\x7d\x7d\x54\x37\x4b\xb9\x35\xcb\x2f\xb6\x3e\x31\x49\x5b\xf2\xee\xd5\xb9\x74\xce\xe7\x20\xed\xea\x4b\xe7\x68\x9f\xe1\x4c\xde\x34\xa5\xe4\xb7\x77\x1a\x86\x4d\x86\x6e\x7f\x41\x37\xa5\x0e\x74\x16\x2c\x6b\xa4\xa7\x20\x87\x98\x6a\xa2\x0c\xbb\x07\xcd\x82\x5a\x84\xdf\x23\xb2\x45\x54\x5e\xa3\xcf\x4c\xe8\xf5\x8b\x4e\x53\x61\xf8\xda\x97\x5f\xd4\xa1\x45\x43\x75\x56\xf7\x0f\x4c\x7d\xb0\x5f\x07\x59\xde\x39\x72\x8e\x03\x2e\xf1\x7e\x1d\x64\xff\x8c\xde\xce\x87\xdb\x92\xc4\x2e\x8f\x8b\x3b\x9b\x34\xa1\x57\x13\x15\x8b\x27\xb5\x91\x64\x43\x30\x46\x0f\xbd\x26\xe0\xa4\xae\x8e\x5a\xf3\x2b\xf4\x20\x25\x75\x7f\x47\xf5\xa6\x2c\xed\x90\x23\xfa\x7c\x7f\xc2\x82\xa8\x89\xa3\x36\xf4\xd3\x16\x8d\x7a\xd6\x74\xc6\x8e\x91\x69\x62\xcb\xa8\x4b\xac\x6e\xd7\xc8\x7a\xbc\xb6\xd1\x2e\xc8\x56\x23\xad\xa3\x57\xe8\x41\x77\x18\xd6\x23\xaf\x05\x34\xfb\x1a\x4b\x83\xce\xd2\xb0\xb5\x24\x2e\x2d\xb2\x7d\x82\x47\xfa\x22\xaa\x83\xb4\x50\xbd\x8f\x47\xf0\x91\x6b\x55\xbd\x11\x3c\xda\x1c\xb9\x86\x25\x60\xfe\x45\xbd\xe5\x52\x07\x3a\x5e\x96\x15\x7b\x72\x1f\xad\x82\x64\x25\xa8\xbc\xf6\xe4\x77\x49\xbb\xb5\x50\xea\x01\xd7\x1b\x7b\x55\x73\x5f\xea\xb8\xbf\xff\x2e\x1f\xc7\x83\x63\xce\xd8\x44\x70\xe2\xb6\x97\x30\x7a\x21\x3f\x7c\x3c\x09\xf7\x9e\x4f\xfe\xfd\x9f\x2d\xe7\x06\xa0\x04\x89\x9e\x3a\x5f\xa1\x07\x78\x66\x76\x29\x3a\xf7\x67\x1c\x42\xdc\x09\xfa\x21\xdb\x62\xb1\xa1\xcb\x71\x03\x1e\x96\xbe\x35\x92\x16\x90\xd1\xb4\xc2\x5b\xb4\xed\x99\xb5\xe2\xf8\x14\x54\xcc\x0e\x7e\x3f\x02\x9d\x43\xcf\x30\x06\xd5\xf0\xa8\x39\x3e\xb5\x39\x5e\x7c\xf7\x28\x48\x6e\x1d\x8b\x43\x75\x72\x1c\xe4\x5f\x37\xa7\x46\xa2\xaa\x4e\xc3\xa6\x13\x0b\x99\xe3\xab\x38\x5e\x2f\xab\x4a\x55\x84\x91\x93\xd0\xb0\xff\x2e\x2a\x6a\x7a\xfc\x40\xd4\x94\xd1\xbf\xc1\x91\x48\xed\x12\x07\x0e\x46\xed\x1f\x4c\xc3\xb3\xd1\xc4\x7f\x4c\x64\x8a\x9e\xf7\x75\x0b\x12\x28\x0f\x85\x08\xff\x3d\x6d\x4b\x15\xa2\x2a\x92\x0b\x10\x67\x83\xcc\xf4\x5d\xbd\x7a\x1b\xd0\x60\x97\xcf\xc0\x35\x6a\xa4\xa7\xf6\x03\xc5\xc1\x9c\x6e\x78\x4c\x32\xff\xd7\xb4\xa4\x1b\x74\xb0\xb2\x72\x0a\x73\xf9\xfd\x24\x96\x7b\x88\xa6\xa1\x7a\x93\xd3\x4d\x53\x88\x95\x80\x58\x80\xfa\x43\x67\x22\x88\x3a\xc3\x0e\xc2\xa8\x84\xf6\x02\x39\x72\x72\x78\x3c\x28\xc7\x6c\xb5\xd9\x96\x35\xd9\xd6\x2c\xbe\x36\xfe\xb3\xfc\x23\x00\x00\xff\xff\xc3\xf7\xae\xff\x1e\x1f\x00\x00")

func templatesTypes_bodyGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_bodyGohtml,
		"templates/types_body.gohtml",
	)
}

func templatesTypes_bodyGohtml() (*asset, error) {
	bytes, err := templatesTypes_bodyGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_body.gohtml", size: 7966, mode: os.FileMode(436), modTime: time.Unix(1557244983, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_headGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xc1\x4a\xc4\x30\x14\x85\xe1\xb5\x79\x8a\xc3\xd0\x85\x2e\x26\x01\x97\x82\x0b\x61\x06\xe9\xc6\xba\x88\x0f\x70\xdb\x5e\xd3\xd0\x36\xad\x49\x44\xe4\x72\xdf\x5d\xd0\x82\xbb\x9f\xef\x1c\xe7\xe0\xa7\x58\xf0\x1e\x17\xc6\x17\x15\x04\x4e\x9c\xa9\xf2\x88\xfe\x1b\x21\xd6\xe9\xb3\xb7\xc3\xb6\xba\xeb\xb3\x3f\xbf\xcd\x99\x62\x62\x17\xb6\xfb\xf0\xb1\x58\x5c\x3a\xbc\x74\x1e\xd7\x4b\xeb\xd1\x7a\xb3\xd3\x30\x53\x60\x88\x34\xf6\x68\x55\x63\xe2\xba\x6f\xb9\xe2\xd6\x88\x64\x4a\x81\xd1\x1c\xf2\xf0\x88\xc6\xfe\x75\xc1\x59\xd5\xdc\x88\x1c\x9b\x7d\x5a\x22\x15\x55\x9c\xfe\xe9\x95\xea\xa4\x7a\x32\x22\x9c\xc6\xdf\xff\x9d\xf9\x09\x00\x00\xff\xff\xc2\xe3\x00\xe2\xbf\x00\x00\x00")

func templatesTypes_headGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_headGohtml,
		"templates/types_head.gohtml",
	)
}

func templatesTypes_headGohtml() (*asset, error) {
	bytes, err := templatesTypes_headGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_head.gohtml", size: 191, mode: os.FileMode(436), modTime: time.Unix(1542272895, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_serviceGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x8f\xdb\x36\x10\xbd\xef\xaf\x98\x08\x69\x20\x07\x8a\x0c\xf4\xe8\x62\x0f\xa9\xbb\x9b\x06\x48\xf3\xb5\x2e\x72\x0c\xb8\xd2\x48\x26\x2c\x93\xf2\x88\xda\xec\x82\xd0\x7f\x2f\x48\x51\xb6\x6c\xeb\xcb\x4d\x5a\x84\xb7\x35\xc9\xe1\xcc\xbc\x99\x37\x4f\xab\xf5\x2b\x98\xbf\x4c\xa5\x7a\xca\x71\x01\x29\x57\xeb\xf2\x3e\x8c\xe4\x76\x7e\xf3\x66\xf5\xea\xef\x0d\x31\x2e\x70\x9e\xca\x5f\xd3\x5d\x36\x4f\x51\x20\x31\x25\x69\x9e\x67\x65\xca\x45\x31\x4f\x89\xe5\xeb\x5d\x16\xde\x21\x3d\xf0\x08\x97\x52\x28\x7c\x54\x2f\xe7\xf0\xaa\xaa\xae\x92\x52\x44\xf0\x06\x95\xd6\xcd\x7e\xf8\x9e\x6d\xb1\xaa\xdc\x5f\x5a\x87\xb7\x1c\xb3\x78\xf5\x94\x63\x55\xfd\x85\x6a\x2d\xe3\xc2\x8f\x40\xeb\x54\x9a\xdf\x60\x7f\x6d\xc9\xb2\xec\xad\x50\x48\x09\x8b\xb0\xaa\x02\xe0\x6b\x78\xa9\x35\x37\x3f\x45\x98\x2b\x49\xc5\xc7\x4d\x5a\x55\xe1\xdb\xc3\x2f\x7f\x32\x11\x67\x48\xa0\x35\xf0\x04\x9e\x87\x2b\x62\x11\xd2\x8d\x60\xf7\x19\xc6\x50\x55\x10\x28\xb3\x29\x73\x14\x8a\x58\xc4\x45\x5a\x9b\xa8\xcf\x81\xd6\x28\xe2\xaa\x9a\x19\x6f\x76\x59\xbd\x65\xbd\x2d\x40\x5f\x01\x80\xb3\xdb\xb8\xe8\xbc\xb7\x71\x83\x5b\x84\xaa\x24\x71\x6e\x40\xef\x4f\xd4\x76\x88\x89\x14\xe1\xf9\xd6\x9a\x80\xc5\xf5\xa0\xd1\x66\x79\x5a\xbb\x1b\x2e\xa9\xde\x02\x5e\x9c\x3e\xa5\xcf\xae\x99\x65\xce\x2f\x3a\x0c\x04\x9d\xa7\xff\xc0\x22\x22\x9e\x2b\x2e\xc5\x02\x0e\x77\x3e\x95\x52\x61\xbc\x94\xdb\x2d\x0a\x55\x55\xdd\x77\x57\xb6\xa8\xb4\x8e\x58\x96\x35\x01\x86\x6f\x4c\xcd\x7c\x7a\xf7\xa1\x54\x79\xa9\x2c\xce\xcf\xc3\xdf\x65\xfc\xe4\x8a\xa7\xcf\x96\xc3\xd1\x19\x79\x4d\x69\x69\x5e\xee\x4e\x4e\xb3\x5e\x53\x5a\x2c\xce\x00\x58\x4a\x91\xf0\xb4\xb1\xd0\x9d\xa3\xd6\xab\x0e\x1e\x46\xa9\xc1\xe6\x32\x07\x9a\x65\x92\xcd\x28\xed\x86\xaa\x31\x55\xfb\xa5\x8f\x93\x66\x6e\x75\x26\xe9\x0c\x18\x73\xf2\x04\x95\x9e\x54\xb6\x82\x43\x11\x0f\x06\xd0\x0f\xc6\xd0\xcd\xcf\x58\xc8\xec\x01\x17\x60\x28\xc0\xcf\xdb\x08\xb8\xad\x8f\x8c\xd8\xb6\x98\x81\xff\x15\x78\xd3\xd8\xba\x0a\x80\x90\x08\x90\x48\xd2\x0c\xfa\x91\x89\xd4\xa3\xc1\x22\x0f\x5d\x3a\x7a\x0f\x7e\x85\x6b\x73\xb8\x77\xbf\x9b\x1c\xc6\x10\x7d\x60\x04\x39\x23\x14\xea\x2e\x67\x62\xa9\x1e\xbb\x78\xc4\x6e\x8d\xb8\x67\x16\x4f\x9c\x2d\x13\x51\x8f\x9d\x5b\x92\x5b\x67\xcb\xdf\x07\x3d\xfb\xad\xb9\xf8\xec\x1a\x04\xcf\x06\xf2\xe5\xd6\xb1\xcf\xd7\xee\xef\xc6\x9e\x3f\x1b\xbc\x3f\x9c\x92\x22\x67\xc2\x04\xa0\x28\xbc\x53\x8c\xec\x23\xbe\xa9\xfa\x13\xea\x0f\x4f\x59\xa7\xa9\x15\xf2\x82\xae\xe8\x97\x6b\x9e\xc5\x1f\x12\xff\xc8\xf5\xd9\xb0\xa7\xc5\x21\xf3\x3d\x39\x75\xbb\x5f\xb8\x5a\x5b\x47\xf7\x39\x0d\xec\xe5\x61\xf3\x31\x26\x48\xf6\x5c\x78\xcb\x05\x2f\xd6\x23\x89\xdb\x1b\x87\xeb\xb6\x6b\x83\x77\x22\x8b\xcf\xd4\xd3\xb5\x47\xb6\xd7\x66\xa3\x45\x60\x0a\xce\x76\xd9\xd4\xaa\xb1\xcb\x86\x7b\x87\x6a\xc5\x52\xdf\xb3\xfd\xe9\x05\xa0\xa8\xc4\x59\xf8\x4e\xa6\xf5\x5c\xf3\xb5\xce\xa4\xcb\xf0\x8d\x39\xe2\x9b\x77\x46\xc0\x82\xd1\xd2\xaa\x06\xf2\x6b\xa7\xf4\x60\xbf\xf2\xc4\x88\x85\xeb\x29\xb1\x1e\x4f\x98\xcf\xb8\x2b\xb1\x50\x4d\x79\x4e\xa2\x79\xc2\x5d\x60\xd8\xab\x2e\xbb\xa3\xa9\x77\x6a\xce\xcb\x0d\xef\x17\xde\x29\xaf\x1b\x3d\xc6\x13\x10\x52\xf5\x5d\x35\x55\x7b\x43\xd6\xa1\xa0\xa6\x4a\x5f\xf0\x6c\xe6\x04\xcb\x14\xf8\x2f\x46\xdf\x29\x19\xc1\x33\xfb\xe2\x77\x02\x0a\x6d\x6d\x74\x94\xa4\x65\xc6\x51\xa8\x5a\xf6\x18\xcd\x67\xf2\x14\x79\xe0\x11\xee\xce\x12\x35\x3a\xd9\xb2\x02\xa7\x82\x66\xf0\x12\xf8\xcd\x6f\x94\xe7\xad\xa4\xf7\xf8\xed\x14\x80\x5a\xa7\x8e\x97\xf3\xff\x10\xdb\xd8\xd4\xee\x6f\x07\x37\x3a\x5f\x74\xa9\x67\xf7\xfe\x70\x4d\x38\x3e\xaf\x05\xe4\x09\xbb\xf7\x48\xc8\x66\xd5\xc1\x4f\x97\x9e\xcd\xaa\xc5\xc2\x02\xf2\xfe\x63\xfd\x11\xb7\x7b\x92\xaf\x1b\xfd\x61\x7a\xcf\x37\xc9\x08\x6a\xde\xb4\x79\xe9\xfc\xa4\xd8\x4f\x06\x61\x28\xbc\xeb\x44\xcb\xe4\x5b\xf1\x20\x37\x48\x33\xf0\x09\x8b\x32\x53\xc7\xe2\x66\x92\xb6\x81\x83\xbe\x31\x4e\x85\x75\xf0\xa3\x4a\x07\x26\xa8\x1d\xf8\x41\x24\xd7\x55\xde\x3f\x05\xbf\x5d\xd6\xf6\x35\xa7\x4d\x6d\xfb\xc0\xd0\xdf\x77\x37\x66\x3f\x7b\x5c\xc2\xcb\x6d\x3e\xd6\xda\xe6\xc8\xd5\xe2\x17\x62\xb9\x8f\x44\x01\x78\x09\xe3\x46\xcc\x2a\x09\x54\x67\x16\x98\x01\xa4\xdf\x83\xa1\x1e\xb2\xef\xf1\xb5\xfd\x12\x77\x7d\x63\x1b\x6b\x6a\xf3\x18\x92\x3d\xea\x85\xde\x6e\x32\x2f\xd4\x44\xf1\x83\x9a\x89\x02\x90\x1b\xd3\x4e\x84\xbb\x70\x8f\xf5\xbf\x21\x77\x9e\xc0\x33\xb9\x99\x30\x33\xfb\xf1\x79\x6f\xcb\x2d\xd9\xaa\x46\xdc\x13\x17\x2a\xf1\xbd\xcf\x2d\x88\xa0\x95\x14\x67\xaa\x80\x7b\x16\x9b\x00\x8c\xab\xa0\x9e\x72\xf4\x7f\x59\xcd\x42\xb8\x5b\xcb\x32\x8b\xe1\xde\x7e\x30\x0e\x05\xe6\x59\x08\x46\xb4\xd8\x70\xd3\xd4\x9a\xf4\x52\x4e\xd2\xba\x45\x37\x1f\xd9\x53\x26\x59\x6c\xc5\xe1\x72\x8d\xd1\x66\x32\xe5\x14\x7d\xba\xaa\x77\xac\x5e\x36\x54\xe1\xa7\x51\x46\x3c\x39\x0d\xb1\x2b\x6b\x1e\x61\xe1\x55\xd5\x44\x2f\x8f\x49\xbf\x6d\xef\x75\x14\x61\x51\xc8\x69\x30\xec\x5d\xac\x6b\xe0\x60\x05\xce\x60\xe9\x7c\xc3\x39\x3d\xd5\xe5\xc9\x54\x3e\xe4\x17\x61\x31\xf9\xbd\x11\xf2\x6e\xd6\xe4\xd9\xd2\x94\xed\x48\x83\x5c\x3a\xb2\xfe\x9b\x0e\x18\xff\x94\xea\x61\xc7\x8e\x7f\x11\x9d\xfc\xd4\x91\xdb\xea\xaa\x27\xf6\x43\x43\x5d\x1d\x7b\x55\x5d\xfd\x13\x00\x00\xff\xff\x07\x64\xd6\xa4\xab\x16\x00\x00")

func templatesTypes_serviceGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_serviceGohtml,
		"templates/types_service.gohtml",
	)
}

func templatesTypes_serviceGohtml() (*asset, error) {
	bytes, err := templatesTypes_serviceGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_service.gohtml", size: 5803, mode: os.FileMode(436), modTime: time.Unix(1553030008, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/output_fields.gohtml":     templatesOutput_fieldsGohtml,
	"templates/output_map_fields.gohtml": templatesOutput_map_fieldsGohtml,
	"templates/schemas_body.gohtml":      templatesSchemas_bodyGohtml,
	"templates/schemas_head.gohtml":      templatesSchemas_headGohtml,
	"templates/types_body.gohtml":        templatesTypes_bodyGohtml,
	"templates/types_head.gohtml":        templatesTypes_headGohtml,
	"templates/types_service.gohtml":     templatesTypes_serviceGohtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"output_fields.gohtml":     &bintree{templatesOutput_fieldsGohtml, map[string]*bintree{}},
		"output_map_fields.gohtml": &bintree{templatesOutput_map_fieldsGohtml, map[string]*bintree{}},
		"schemas_body.gohtml":      &bintree{templatesSchemas_bodyGohtml, map[string]*bintree{}},
		"schemas_head.gohtml":      &bintree{templatesSchemas_headGohtml, map[string]*bintree{}},
		"types_body.gohtml":        &bintree{templatesTypes_bodyGohtml, map[string]*bintree{}},
		"types_head.gohtml":        &bintree{templatesTypes_headGohtml, map[string]*bintree{}},
		"types_service.gohtml":     &bintree{templatesTypes_serviceGohtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
