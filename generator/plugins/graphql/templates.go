// Code generated by go-bindata.
// sources:
// generator/plugins/graphql/templates/schemas_body.gohtml
// generator/plugins/graphql/templates/schemas_head.gohtml
// generator/plugins/graphql/templates/types_body.gohtml
// generator/plugins/graphql/templates/types_head.gohtml
// generator/plugins/graphql/templates/types_service.gohtml
// DO NOT EDIT!

package graphql

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _templatesSchemas_bodyGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x55\x4d\x6f\xdb\x38\x10\x3d\xcb\xbf\x62\x20\x18\xbb\x76\xe0\xc8\xc0\x1e\x0d\xf8\xb2\xde\x6c\xda\x43\xf3\xd1\xb8\xa7\xa2\x28\x68\x7a\x2c\xb3\xa1\x49\x85\xa2\x92\x06\x04\xff\x7b\xc1\x0f\x49\xb4\x1d\xbb\xb9\xd5\x27\x7a\xe6\x71\xe6\xcd\xbc\xe1\xc8\x98\x4b\x98\x5e\x94\x52\xbf\x56\x38\x83\x92\xe9\x6d\xb3\x2a\xa8\xdc\x4d\xaf\xae\x97\x97\x5f\x1e\x15\x61\x02\xa7\xa5\xfc\xa7\x7c\xe2\xd3\x12\x05\x2a\xa2\xa5\x9a\x56\xbc\x29\x99\xa8\xa7\xa5\x22\xd5\xf6\x89\x17\x0f\x74\x8b\x3b\xf2\xaf\x5c\xbf\x2e\xa4\xd0\xf8\x53\x5f\x4c\xe1\xd2\xda\x81\x8b\x0a\xc6\x0c\x23\xe0\x86\xec\xd0\xda\x70\x5e\x70\x86\x42\xd7\x50\x6b\xd5\x50\x0d\x66\x90\x19\x03\x8a\x88\x12\x61\x58\xa3\x7a\x66\x14\x61\x36\x87\x61\xf1\x10\xfe\xd4\x3e\x60\x96\x19\xd3\xba\x8b\x10\x2e\x04\x02\x63\x4a\xb9\x74\xe9\x3a\x77\x70\x5c\x7b\xab\xbb\x6a\x0c\xa0\x58\xfb\x30\x76\xb0\x69\x04\x85\x6b\xd4\x6f\x93\x1b\x51\x5e\x9f\xe7\x3d\x01\xb6\x85\x0b\x63\x98\xd0\xa8\x28\x56\x5a\xaa\xfa\xee\xb1\xb4\xb6\xf8\xd8\x5b\x3e\x10\xb1\xe6\xa8\x5c\x8f\xd9\x06\x86\xc5\x52\x11\x8a\xea\x4a\x90\x15\x47\x4f\x64\x02\x5a\x81\x31\xb2\x42\xa1\x15\xa1\x4c\x94\x21\x46\x00\xba\x7b\x91\xf1\x18\x46\xc6\x94\x4f\x3c\xb8\x03\x93\x09\xa0\x52\x52\x8d\xdf\xdf\x3b\xb6\x01\xca\xeb\xe2\x54\x0b\xe7\x73\x10\x8c\xbb\x70\x59\xa6\x50\x37\x4a\xc0\x51\x52\x63\x27\x60\x8c\x4f\x1c\xeb\xbd\x72\xe7\xcd\x28\x8f\xb9\x80\xb6\x7a\x1c\x24\x01\x4a\xc4\xdf\x1a\x56\xe8\x93\x08\xc6\xf3\xf1\x20\xcb\xf6\x75\x79\x67\x1d\xcf\x44\x1d\xc7\xbf\x6f\x50\xbd\xfe\xcf\x90\xaf\x6b\x98\x83\x31\xd1\xbb\x90\x22\x8c\x98\x54\x90\x7b\x4c\xde\x07\x1f\x5a\x3b\x3a\xd3\x11\x27\xf2\x79\xf1\x52\x89\x22\xb1\xef\x3e\xfb\x69\x72\xa7\xf8\x7f\x6a\x34\xd1\x4c\x8a\xdf\x94\xd0\xc2\xfe\x44\x15\xfb\x14\x4f\x29\x27\x57\x3f\x90\xea\x20\xdc\xad\x3f\x1f\xe8\x16\x00\xed\x58\xcc\xd3\x21\xbb\xc1\x97\x70\x25\x1d\xf7\x60\x59\x48\xb1\x61\xa5\x1f\x4e\x77\x73\x06\xf9\x61\xa8\x7c\xe2\x9c\xc6\xb8\x4a\x45\x47\xa4\xb8\x6f\xa4\xc6\xf5\x42\xee\x76\x6e\x2e\xf3\x3c\x92\xc9\xb2\xff\xb0\xa6\x8a\x55\xae\xa2\x59\xc2\x6b\x0f\x6f\x6d\x1b\xb4\xab\x34\xcb\x42\xfd\xb3\x94\x78\x30\x79\x76\x91\x01\x47\xd1\x51\x88\x9a\xb6\x89\x93\x66\x6d\xf8\xda\x77\xea\x04\x30\xc6\x72\xb0\xf6\x11\x24\xce\xcc\xb5\xc0\xb9\x62\xfd\xbe\x8a\x04\x1a\xed\x7d\x69\x6e\x15\x06\x5b\x48\xf4\xf5\x20\xc0\xb7\x49\x9f\x16\x79\x7d\x3e\xd7\x5f\x87\xe5\x9b\x16\x9a\x08\x94\xdc\x98\x74\xee\xa5\xff\xd8\x44\xef\x6d\x2a\x61\x8f\x39\x14\xc7\x41\xdf\x52\xc6\xff\x3e\x63\x2d\xf9\x33\xce\xc0\xad\xf5\x51\x95\x0a\x13\x5d\x77\x44\x91\x5d\x3d\x86\x91\x5f\xd8\x1b\x42\xd1\x6d\xb2\x7e\x81\xb6\xbf\xb8\xf7\xc2\x7b\x33\xd6\x81\x04\xe3\x9d\xbf\xcf\x69\xd3\x56\xf5\xa3\x71\xf4\xff\xa8\x93\xb9\x90\xa1\xf9\xe7\x5a\x18\x1b\xd8\x41\xdb\x64\x6d\xe7\xfa\xad\xac\x15\x13\x65\x74\x47\x4e\xfb\x0c\xbc\xd1\xbd\xeb\xd4\x7c\xbc\xde\x6f\xf0\x25\x7e\xfb\x8e\x76\x7e\xff\xf2\xfc\x1a\xf3\x72\x14\xfe\x18\xb4\x0b\x4a\xc4\x49\x2d\xda\x25\x11\x7c\x2d\x8b\xd6\x1a\x2e\xef\x63\xba\xfb\x1d\x3d\x3b\x1e\xd8\x5f\x01\x00\x00\xff\xff\xd5\xb3\x78\xcf\x9a\x08\x00\x00")

func templatesSchemas_bodyGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemas_bodyGohtml,
		"templates/schemas_body.gohtml",
	)
}

func templatesSchemas_bodyGohtml() (*asset, error) {
	bytes, err := templatesSchemas_bodyGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemas_body.gohtml", size: 2202, mode: os.FileMode(436), modTime: time.Unix(1545388473, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesSchemas_headGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xc1\x4a\xc4\x30\x14\x85\xe1\xb5\x79\x8a\xc3\xd0\x85\x2e\x26\x01\x97\x82\x0b\x61\x06\xe9\xc6\xba\x88\x0f\x70\xdb\x5e\xd3\xd0\x36\xad\x49\x44\xe4\x72\xdf\x5d\xd0\x82\xbb\x9f\xef\x1c\xe7\xe0\xa7\x58\xf0\x1e\x17\xc6\x17\x15\x04\x4e\x9c\xa9\xf2\x88\xfe\x1b\x21\xd6\xe9\xb3\xb7\xc3\xb6\xba\xeb\xb3\x3f\xbf\xcd\x99\x62\x62\x17\xb6\xfb\xf0\xb1\x58\x5c\x3a\xbc\x74\x1e\xd7\x4b\xeb\xd1\x7a\xb3\xd3\x30\x53\x60\x88\x34\xf6\x68\x55\x63\xe2\xba\x6f\xb9\xe2\xd6\x88\x64\x4a\x81\xd1\x1c\xf2\xf0\x88\xc6\xfe\x75\xc1\x59\xd5\xdc\x88\x1c\x9b\x7d\x5a\x22\x15\x55\x9c\xfe\xe9\x95\xea\xa4\x7a\x32\x22\x9c\xc6\xdf\xff\x9d\xf9\x09\x00\x00\xff\xff\xc2\xe3\x00\xe2\xbf\x00\x00\x00")

func templatesSchemas_headGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesSchemas_headGohtml,
		"templates/schemas_head.gohtml",
	)
}

func templatesSchemas_headGohtml() (*asset, error) {
	bytes, err := templatesSchemas_headGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/schemas_head.gohtml", size: 191, mode: os.FileMode(436), modTime: time.Unix(1539090323, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_bodyGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xdd\x73\xdb\x36\x12\x7f\x26\xff\x8a\x3d\x5e\x2e\x43\x79\x18\xea\xe6\x1e\x75\xa3\x07\x9f\x2f\xce\x64\x52\xdb\x49\xeb\x26\x0f\x8e\xc6\x66\x28\x48\x46\x49\x81\x34\xf8\x61\x6b\x38\xfc\xdf\x3b\xf8\x22\x41\x12\x94\xe4\xd4\x6e\xd3\x36\x7c\xf0\x88\xe0\x62\x77\xf1\xdb\x0f\x60\x17\xae\xaa\x57\x30\x3d\x5a\x27\xf9\x36\x45\x33\x58\xe3\xfc\xb6\xf8\xe2\x87\xc9\x66\xfa\xfa\xcd\xe5\xab\x9f\x23\x1a\x60\x82\xa6\xeb\xe4\x3f\xeb\xbb\x78\xba\x46\x04\xd1\x20\x4f\xe8\x34\x8d\x8b\x35\x26\xd9\x74\x4d\x83\xf4\xf6\x2e\xf6\xff\x97\x2c\xb7\x27\x09\xc9\xd1\x43\x7e\x34\x85\x57\x75\x6d\x4f\xa7\xf0\x9a\x14\x9b\xcc\xae\x2a\x1a\x90\x35\x82\x17\x88\x14\x1b\x98\xcd\xc1\x3f\xc5\x31\xf2\xf9\x47\x4e\x69\x95\x01\x85\xaa\xe2\xdf\xfd\x8f\x01\xc5\xc1\x97\x18\x9d\x07\x1b\x54\xd7\x30\x87\xaa\x5a\xdf\xc5\xef\xa3\x75\x5d\xfb\xe7\xe8\x9e\xcd\x72\xb5\x21\xf6\x7e\x92\x90\x15\x5e\x57\xb6\x65\xb1\x49\x33\x90\x8f\xa3\x58\xbe\x61\x3a\x7e\xf8\x41\x70\x74\x3c\xdb\xb2\xaa\x0a\xf0\x4a\x28\xe4\x9f\x24\x9b\x0d\x22\xb9\xd0\xc4\xb2\xfe\x8f\xb2\x90\xe2\x34\xc7\x09\x99\x35\x4a\x49\x9a\xba\x96\x93\x11\x59\x4a\xfa\x8f\x41\x5c\xa0\x6c\x06\x3d\x95\xf8\xb0\xd0\xeb\x2c\x48\x2b\x1b\xb4\xa7\xc1\xa3\x64\x44\x0c\x10\xb5\x72\xc6\x4a\xe9\x61\x31\xf5\x39\x85\x2f\x15\x9f\xc1\xcb\x71\x29\x15\x9f\x23\xd4\xe1\x7a\x8b\xa9\xfc\x5d\xa8\x6d\xa9\x65\x13\x25\xba\x59\xfa\x8d\xe3\xdc\x34\x72\x87\x10\x74\x88\x75\x66\x2d\x0c\x96\x25\x86\xab\xaa\x1d\x63\x23\xf5\xc4\x6e\x87\x6c\xe6\x13\x6f\x49\x5a\xe4\x90\x7c\xf9\x05\x85\xb9\x5d\x55\x20\xb1\x10\x03\xad\x77\x70\xb2\x0b\x3e\xd8\x75\x12\x41\xb8\xcf\x4d\xb4\xe9\xba\xb7\x68\xc3\x0a\x36\x65\x15\xe1\x3a\x4e\x2b\xa1\xef\x35\x8a\xf0\x14\xa3\x78\xd9\xb5\xf8\x80\x2d\xa7\x61\x86\xaf\xc5\xbc\x7a\x62\x5b\xab\x82\x84\x80\x09\xce\xdd\x49\xc5\xbd\x48\xae\x7c\xc5\x68\xb9\x17\x48\xc1\x42\x80\x02\x76\x6c\xc9\xfe\xf1\x72\xc9\x29\x85\x44\x97\x69\xce\x59\x29\x77\xf1\x3a\xee\xa2\xa9\xa8\xcd\xaa\x2e\x79\xd0\x57\x55\x18\xc4\xb1\x54\xc5\x67\x63\xf0\xa2\xae\x3d\xe8\x3b\x82\xf8\xfe\xa1\x48\x72\xb4\x6c\xdc\x81\xad\x4d\xb7\x7b\x6d\x6b\x9e\xd1\xb7\x78\x06\x14\x65\x49\x5c\x22\x9a\x69\xc6\x57\x63\x46\xf3\xff\xa8\x26\x70\x86\x1c\xc5\xaa\x6a\xa6\xf8\xa7\x05\x09\x99\x82\x62\xd5\x6e\x98\x3f\xb0\xe5\xe4\x0f\x62\xd9\x32\x25\x79\x80\x01\x93\x1c\xd1\x55\x10\xa2\xaa\x9e\x80\x7b\xcd\xec\x97\x88\xa5\x36\xbc\x2e\x8a\x3c\x2d\xf2\x37\x7c\x98\xad\x9f\x22\x4a\x01\x51\x9a\x50\x66\x32\xbc\x02\x0c\xf3\x39\x10\x1c\x03\xb3\x20\x45\x79\x41\x09\x7b\xf5\xd8\x1f\xb6\x72\x2b\xa0\xeb\x8c\xad\x02\xfb\xee\x26\x48\xaf\xb2\x9c\x62\xb2\x5e\xe8\xa2\x6d\xeb\x1a\xe6\xc0\xe8\x84\x4b\x53\x94\x15\x71\x0e\x73\x20\xe8\xde\x55\x3a\x9d\x26\xf4\x1c\xdd\x8f\x6a\x36\xb1\xad\x16\xbc\xd6\x7f\x5a\x4c\x74\x0f\x92\xb9\x4e\xd8\xee\x6d\x76\x4a\x93\xcd\x31\xd3\x52\xfa\x17\x5e\x71\x65\xae\x5a\xff\x91\x8e\xcf\x4d\xc0\x39\x49\x87\x5a\xc0\x3f\xda\xc5\x77\xa3\x5f\xc8\xc0\xd9\x31\xa5\xc1\x56\xc9\x12\xda\x36\x09\x02\x13\xa6\xe4\xa1\xb2\x7c\xf7\xaa\x07\x9b\xc5\x10\x67\x58\xf9\xcd\x6c\x81\x8a\x36\x0f\xe6\xb0\x09\x22\xe4\xb6\xb6\xd5\x55\x61\x26\x8d\x11\x71\x31\x99\x08\x7e\xab\x84\x02\xf6\xa0\x0c\x62\xa6\x9a\xc0\x13\x13\xa8\xf4\x6c\x29\x39\x28\x2f\xfc\x84\xf3\xdb\xd7\xcc\x23\xa0\x49\x97\x92\xdc\xb2\x4a\x8f\x39\x0b\x63\xd5\x0d\x28\x9e\x84\x15\x03\x70\xca\x20\x76\x58\x7c\xa9\x69\x78\xc5\xa7\x69\xe0\x8a\x47\xf7\xaf\xaa\xe2\x6e\x98\x09\xaf\xfe\x44\x83\xd4\x45\x94\x7a\xe0\xac\x02\x1c\xa3\x25\xe4\x89\x0a\x2c\xb8\x19\x8f\x8e\x1b\xc0\x5a\x2c\x02\xd7\xce\x99\x28\x81\x8d\x42\x7b\x61\xbe\xc2\x0b\x98\x43\x69\x77\xe6\x31\x8f\x88\x33\xa4\xed\x23\x07\xf2\x79\x04\x58\xfd\x3d\xc7\x36\xc8\xdd\x63\xb6\x46\x3d\x05\xf4\x61\x56\x73\xc3\x84\x84\x41\x0e\x0e\x77\xe0\xcf\x8e\x03\xbb\x3c\x18\x9c\xcf\xce\xc2\x99\x68\x56\x1e\x31\xf2\xef\x6c\xe3\x83\x2d\xd3\x9a\xb7\x01\xb5\x6b\xdc\x43\x38\x3c\x1f\x9e\x83\xec\xd3\xbe\xed\x49\x77\x75\x2f\x77\x75\x7f\xab\xc3\x08\x41\xc9\xaa\x9b\x52\x2f\x08\xba\x58\xf5\xf2\xaa\xa4\xc6\x64\x89\x1e\xbc\xce\x46\xce\xe6\x0f\xf6\x71\xe6\x02\x77\x92\x1c\xfe\xad\xe5\xdf\x7d\xd9\xf0\xda\x83\x24\x7a\x4c\xf2\xfc\x2f\xa3\x7f\xf9\x72\x3f\xe3\xd6\x1f\xa1\xf7\x1c\x10\x45\xfd\x29\xec\x79\x5c\x30\xed\x36\xf9\xb5\x34\xb8\x49\x4e\x3f\x9c\x4c\x34\xec\xf9\xca\xf8\x4a\x98\xb5\x3b\x21\xb4\x17\x4b\x67\x62\x54\x62\xa8\xbe\x1e\x4a\x46\x08\x9f\x17\xbd\xf6\xa4\xb6\xd3\xe4\xc7\x59\x86\xd7\x04\x93\x35\xc3\x29\x45\xe3\x16\x6f\x13\x81\xf0\xfa\xfd\x89\x60\xc0\xda\x29\x9d\x11\x55\x77\x23\x75\x88\xe8\xd2\xc8\xb5\xcd\x1d\x75\x55\x29\x19\x42\xd8\xf7\x78\xfc\x1e\x8f\x5d\x08\xbf\xc7\xe3\x81\x48\x3d\x55\x3c\xaa\xda\x51\x96\x95\x62\x6b\x16\x3f\x6c\x75\x62\x12\xb2\x44\xe1\xd5\xa9\x38\xa7\x53\x10\x72\x55\xc5\x69\x6c\x32\xbc\x10\x65\xa6\xa0\xfc\xfa\x36\xc3\xb0\xc3\xd0\x6d\x2e\xa8\x8e\xd4\x8e\xb6\x82\x65\x19\x1a\x0a\x62\xa8\x92\x1d\x94\x61\xeb\x60\x58\xfb\x3d\x67\xef\x80\x93\x8a\x23\x6b\xbb\x9c\x2e\xbd\x6d\xea\x1b\x19\xdb\x05\x82\x74\x67\xdf\x81\x53\xc8\xf0\x9a\x01\x5b\xbc\x9b\xea\xe8\xc8\x4f\xef\x03\x1a\x6c\xb2\x09\xb8\x5a\x9d\xe8\xc9\x72\x5d\x4b\x41\x16\xff\x93\xdd\xe3\x3c\xbc\x85\x8c\x86\x0c\xae\xd4\xff\x29\x29\x68\x88\x7c\x37\xdf\xa6\x68\xa2\x8e\xe3\x61\x90\x21\x38\x6a\x8b\x47\x65\x32\x59\x3d\xce\xb4\x8a\x8d\x31\x9a\xef\xaa\xd8\x78\x47\xa0\x57\x58\xf1\xd6\xc0\x51\x46\x43\x35\xc0\x0f\x85\x0a\x4a\x84\x96\x27\x41\x96\x6b\x05\x54\xc3\xb1\x01\x93\x11\x5c\x26\x75\xed\x1a\x12\x12\x38\x19\x8f\xdb\x49\x47\x78\xbb\xbf\x0d\x99\x8e\xb2\xe8\x71\xe8\x14\x5d\x12\xa6\xfd\x28\x3d\xf5\xe2\x68\xf8\x04\xcb\x93\x4c\xfa\x3c\xf4\xf5\x35\x15\xce\xd8\x56\x75\x8e\xee\x5d\x27\xe3\x0e\x04\xc9\x0a\x0a\x12\x91\xe4\x9e\x00\x73\x25\x59\x69\x09\x1f\x96\x9d\xb1\x6e\x71\x32\x16\xb9\x67\x41\xfa\x87\x06\xef\xdf\x2c\x22\x4d\xfb\x97\x7a\x06\x61\x2a\xfb\x74\x70\xb5\x30\x37\xf5\x14\xdd\x2a\xa1\x10\xa1\x2d\xef\x28\x89\xce\xbe\xb0\xf6\x8e\x48\xeb\xe8\x9a\xc1\x1c\xd8\x16\x4c\x96\x2e\x45\x99\x07\x66\x69\xed\x0c\xcb\x89\xd0\xd6\x99\x01\x70\xa9\xda\x30\x97\xef\xcc\x84\x1e\xed\x87\xda\xd4\xeb\x51\xdb\xa9\x0e\xd0\x81\x11\xfe\x3c\xb8\xc8\x10\xfd\x26\x91\x79\xbe\xdc\xd0\x3f\xc4\x9c\x05\x69\xd6\x69\xe5\x98\x0f\x32\xe2\x1c\x73\x16\xa4\x7f\x8d\x0b\x93\xcb\xdb\x82\x44\x2e\x4f\x30\x93\x83\x26\xf4\x6a\x8d\x26\xf7\x1f\x70\x37\x63\x6b\x7e\xf2\xe8\xab\x12\xb9\xe6\x77\x68\x2b\x28\x55\xaa\x94\x17\x3e\x96\x52\xa8\x71\xb8\xaf\x95\xc0\xa3\xc2\x28\x43\x3d\x6d\x32\xab\x27\xcd\x75\xd3\x3e\x67\x3a\xf0\x1e\xa6\xeb\x58\xdd\xab\x18\xeb\xe9\xee\x62\x58\x38\x1b\xee\x63\xde\xa1\xad\xca\x39\x0b\xc3\x67\x0e\xcd\xd8\x6d\xcd\xe0\xba\xc6\xb0\x17\xb0\x68\x16\xd7\x12\xd8\x70\xdf\x20\x6f\x66\x66\xf2\x4e\xe1\x09\x74\x64\x5c\xe5\x9d\x03\x36\x5e\x3a\x5c\xc3\x1c\xb0\xcd\x33\x2b\xff\xca\xa8\x76\xdc\x24\x59\x56\xe4\x89\xfa\xb4\x0c\xe2\x2b\xee\xca\x0b\x4f\xfc\x16\x6e\xb7\xe0\x4c\x3d\x60\x7c\x23\xaf\x6c\xfa\x90\x1d\xf5\xc7\x7b\xe4\x51\x34\x68\x1f\x98\x26\x82\x13\xb5\x3d\x7a\x63\xa3\x7b\x77\xd9\xbf\x1a\xad\xfb\xff\xf9\xaf\x25\xf3\x0d\x40\x31\xe2\x17\xd5\x6c\x85\x1e\xe0\x89\xde\xfd\xef\x9c\xff\xa2\xe8\x31\xca\x76\x0e\x7e\x3d\x60\x3a\x35\xfe\x10\x9a\x72\xd8\x59\x31\x4f\x6d\xaa\xe9\x67\x07\x47\x98\x7c\x27\x3c\x65\xf9\x38\x85\x3b\x00\x89\x78\xb8\x8a\xa2\xc5\xbc\x2c\x65\xf4\x18\xaa\xf1\xe1\x05\x30\xcf\x3e\xc9\xfe\xa2\xbc\x49\x39\xdf\x40\x59\xae\x8e\xaa\xe3\xc5\x79\xfb\x1f\x0e\xc3\xfa\xfc\xc0\x93\xbb\x70\x67\xf3\x69\x5d\x6a\xc8\x49\xec\xc1\xf9\x7c\x6c\xfb\xe1\xa4\xbf\xf9\xa0\xce\x5c\x65\x70\x2e\xdf\x91\x85\xcc\xc7\x6f\xd3\xd9\xbb\xb6\xb5\x2f\x19\x0d\x9b\xa4\x25\x09\xf8\x02\xe4\xd9\xe8\x40\x10\x95\xdb\xef\x84\x51\x12\x8d\x02\x69\xd8\x65\xff\x7c\x50\xca\x9c\x3f\x04\xb3\xd6\xfe\x09\xe7\xd7\x00\x00\x00\xff\xff\xe0\x2d\x15\x12\xef\x25\x00\x00")

func templatesTypes_bodyGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_bodyGohtml,
		"templates/types_body.gohtml",
	)
}

func templatesTypes_bodyGohtml() (*asset, error) {
	bytes, err := templatesTypes_bodyGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_body.gohtml", size: 9711, mode: os.FileMode(436), modTime: time.Unix(1545392869, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_headGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xca\xc1\x4a\xc4\x30\x14\x85\xe1\xb5\x79\x8a\xc3\xd0\x85\x2e\x26\x01\x97\x82\x0b\x61\x06\xe9\xc6\xba\x88\x0f\x70\xdb\x5e\xd3\xd0\x36\xad\x49\x44\xe4\x72\xdf\x5d\xd0\x82\xbb\x9f\xef\x1c\xe7\xe0\xa7\x58\xf0\x1e\x17\xc6\x17\x15\x04\x4e\x9c\xa9\xf2\x88\xfe\x1b\x21\xd6\xe9\xb3\xb7\xc3\xb6\xba\xeb\xb3\x3f\xbf\xcd\x99\x62\x62\x17\xb6\xfb\xf0\xb1\x58\x5c\x3a\xbc\x74\x1e\xd7\x4b\xeb\xd1\x7a\xb3\xd3\x30\x53\x60\x88\x34\xf6\x68\x55\x63\xe2\xba\x6f\xb9\xe2\xd6\x88\x64\x4a\x81\xd1\x1c\xf2\xf0\x88\xc6\xfe\x75\xc1\x59\xd5\xdc\x88\x1c\x9b\x7d\x5a\x22\x15\x55\x9c\xfe\xe9\x95\xea\xa4\x7a\x32\x22\x9c\xc6\xdf\xff\x9d\xf9\x09\x00\x00\xff\xff\xc2\xe3\x00\xe2\xbf\x00\x00\x00")

func templatesTypes_headGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_headGohtml,
		"templates/types_head.gohtml",
	)
}

func templatesTypes_headGohtml() (*asset, error) {
	bytes, err := templatesTypes_headGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_head.gohtml", size: 191, mode: os.FileMode(436), modTime: time.Unix(1539090323, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _templatesTypes_serviceGohtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x58\x4d\x8f\xdb\x36\x10\xbd\xef\xaf\x98\x08\x69\x20\x07\x8a\x0c\xf4\xe8\xc2\x87\xd4\xdd\x4d\x03\xa4\xf9\x5a\x17\x39\x06\x5c\x69\x24\x13\x96\x49\x79\x44\x6d\x76\x41\xe8\xbf\x17\xa4\x28\xaf\x6c\xeb\xcb\x4d\x5a\x84\xb7\x35\xc9\xe1\xcc\xbc\x37\x6f\x46\xab\xf5\x2b\x98\xbf\x4c\xa5\x7a\xcc\x71\x01\x29\x57\x9b\xf2\x2e\x8c\xe4\x6e\x7e\xfd\x66\xfd\xea\xef\x2d\x31\x2e\x70\x9e\xca\x5f\xd3\x7d\x36\x4f\x51\x20\x31\x25\x69\x9e\x67\x65\xca\x45\x31\x4f\x89\xe5\x9b\x7d\x16\xde\x22\xdd\xf3\x08\x57\x52\x28\x7c\x50\x2f\xe7\xf0\xaa\xaa\xae\x92\x52\x44\xf0\x06\x95\xd6\xcd\x7e\xf8\x9e\xed\xb0\xaa\xdc\x5f\x5a\x87\x37\x1c\xb3\x78\xfd\x98\x63\x55\xfd\x85\x6a\x23\xe3\xc2\x8f\x40\xeb\x54\x9a\xdf\xe0\x70\x6d\xc5\xb2\xec\xad\x50\x48\x09\x8b\xb0\xaa\x02\xe0\x1b\x78\xa9\x35\x37\x3f\x45\x98\x2b\x49\xc5\xc7\x6d\x5a\x55\xe1\xdb\xa7\x5f\xfe\x64\x22\xce\x90\x40\x6b\xe0\x09\x3c\x0f\xd7\xc4\x22\xa4\x6b\xc1\xee\x32\x8c\xa1\xaa\x20\x50\x66\x53\xe6\x28\x14\xb1\x88\x8b\xb4\x36\x51\x9f\x03\xad\x51\xc4\x55\x35\x33\xde\xec\xb3\x7a\xcb\x7a\x5b\x80\xbe\x02\x00\x67\xb7\x71\xd1\x79\x6f\xe3\x06\xb7\x08\x55\x49\xe2\xdc\x80\x3e\x9c\xa8\xed\x10\x13\x29\xc2\xf3\x9d\x35\x01\x8b\xe5\xa0\xd1\x66\x79\x5a\xbb\x1b\x2e\xa9\xde\x02\x5e\x9c\x3e\xa5\xcf\xae\x99\x65\xce\x2f\x3a\x0c\x04\x9d\xa7\xff\xc0\x22\x22\x9e\x2b\x2e\xc5\x02\x9e\xee\x7c\x2a\xa5\xc2\x78\x25\x77\x3b\x14\xaa\xaa\xba\xef\xae\x2d\xa9\xb4\x8e\x58\x96\x35\x01\x86\x6f\x0c\x67\x3e\xbd\xfb\x50\xaa\xbc\x54\x16\xe7\xe7\xe1\xef\x32\x7e\x74\xe4\xe9\xb3\xe5\x70\x74\x46\x5e\x53\x5a\x9a\x97\xbb\x93\xd3\xac\xd7\x94\x16\x8b\x33\x00\x56\x52\x24\x3c\x6d\x2c\x74\xe7\xa8\xf5\xaa\x83\x87\x51\x6a\xb0\xb9\xcc\x81\x66\x99\x64\x33\x4a\xbb\xa1\x6a\x4c\xd5\x7e\xe9\xe3\xa4\x99\x5b\x9d\x49\x3a\x03\xc6\x9c\x3c\x41\xa5\x27\x95\xad\xe0\x50\xc4\x83\x01\xf4\x83\x31\x74\xf3\x33\x16\x32\xbb\xc7\x05\x18\x09\xf0\xf3\x36\x02\x6e\xeb\x23\x23\xb6\x2b\x66\xe0\x7f\x05\xde\x14\xb6\xae\x02\x20\x24\x02\x24\x92\x34\x83\x7e\x64\x22\xf5\x60\xb0\xc8\x43\x97\x8e\xde\x83\x5f\x61\x69\x0e\xf7\xee\x77\x8b\xc3\x18\xa2\xf7\x8c\x20\x67\x84\x42\xdd\xe6\x4c\xac\xd4\x43\x97\x8e\xd8\xad\x11\xf7\xcc\xe2\x89\xb3\x65\x22\xea\xb1\x73\x43\x72\xe7\x6c\xf9\x87\xa0\x67\xbf\x35\x17\x9f\x2d\x41\xf0\x6c\x20\x5f\x6e\x1d\xfb\xbc\x74\x7f\x37\xf6\xfc\xd9\xe0\xfd\xe1\x94\x14\x39\x13\x26\x00\x45\xe1\xad\x62\x64\x1f\xf1\x0d\xeb\x4f\xa4\x3f\x3c\x55\x9d\x86\x2b\xe4\x05\x5d\xd1\xaf\x36\x3c\x8b\x3f\x24\xfe\x91\xeb\xb3\x61\x4f\x8b\xa7\xcc\xf7\xe4\xd4\xed\x7e\xe1\x6a\x63\x1d\x3d\xe4\x34\xb0\x97\x87\xcd\xc7\x98\x20\xd9\x73\xe1\x0d\x17\xbc\xd8\x8c\x24\xee\x60\x1c\x96\x6d\xd7\x06\xef\x44\x16\x9f\xa9\xa7\x6b\x8f\x6c\xad\xcd\x46\x49\x60\x08\x67\xab\x6c\x2a\x6b\xec\xb2\xe1\xde\xa2\x5a\xb3\xd4\xf7\x6c\x7d\x7a\x01\x28\x2a\x71\x16\xbe\x93\x69\xdd\xd7\x7c\xad\x33\xe9\x32\x7c\x6d\x8e\xf8\xe6\x9d\x11\xb0\x60\x94\x5a\xd5\x40\x7e\x6d\x97\x1e\xac\x57\x9e\x98\x61\x61\x39\x25\xd6\xe3\x0e\xf3\x19\xf7\x25\x16\xaa\xa1\xe7\x24\x99\x27\xdc\x07\x46\xbd\x6a\xda\x1d\x75\xbd\x53\x73\x5e\x6e\x74\xbf\xf0\x4e\x75\xdd\xcc\x63\x3c\x01\x21\x55\xdf\x55\xc3\xda\x6b\xb2\x0e\x05\xb5\x54\xfa\x82\x67\x33\x37\xb0\x4c\x81\xff\x62\xf4\xdd\x24\x23\x78\x66\x5f\xfc\x4e\x40\xa1\x3d\x1b\x1d\x25\x69\x95\x71\x14\xaa\x1e\x7b\xcc\xcc\x67\xf2\x14\x79\xe0\x11\xee\xcf\x12\x35\xda\xd9\xb2\x02\xa7\x82\x66\xf0\x12\xf8\xcd\x6f\x26\xcf\x1b\x49\xef\xf1\xdb\x29\x00\xf5\x9c\x3a\x4e\xe7\xff\x21\xb6\xb1\xae\xdd\x5f\x0e\xae\x75\xbe\xe8\x9a\x9e\xdd\xfb\xc3\x9c\x70\x7a\x5e\x0f\x90\x27\xea\xde\x33\x42\x36\xab\x0e\x7e\xfa\xe8\xd9\xac\x7a\x58\x58\x40\xde\x7f\xac\x3f\xe2\x76\x4d\xf2\x4d\x33\x7f\x98\xda\xf3\x4d\x32\x82\x5a\x37\x6d\x5e\x3a\x3f\x29\x0e\x9d\x41\x18\x09\xef\x3a\xd1\x32\xf9\x56\xdc\xcb\x2d\xd2\x0c\x7c\xc2\xa2\xcc\xd4\xf1\x70\x33\x69\xb6\x81\x1f\xa4\x44\x5d\x1c\xfc\x29\x44\xe8\xb2\xda\xac\x85\x67\x6a\x6d\x06\x46\xa3\xbe\xbb\x7a\xfa\x4b\xfc\x12\xf1\x6c\x8b\xa6\xd6\x36\x47\x8e\x30\x5f\x88\xe5\x3e\x12\x05\xe0\x25\x8c\x9b\x89\x53\x49\xa0\x3a\xb3\xc0\x0c\x20\xfd\x1e\x0c\x11\xdd\xbe\xc7\x37\xf6\x73\xd9\x91\xdb\xb2\x7f\x2a\xc3\x8d\x12\x1e\x11\xb6\x97\xf2\xe6\x85\xba\x9a\x7f\x10\xe3\x29\x00\xb9\x35\x25\x4a\xb8\x0f\x0f\x58\xff\x1b\x05\xe6\x09\x3c\x93\xdb\x09\x8d\xad\x1f\x9f\xf7\x96\x6e\xc9\x4e\x35\x13\x38\x71\xa1\x12\xdf\xfb\xdc\x82\x08\x5a\x49\x71\xa6\x0a\xb8\x63\xb1\x09\xc0\xb8\x0a\xea\x31\x47\xff\x97\xf5\x2c\x84\xdb\x8d\x2c\xb3\x18\xee\xec\x57\xdd\x50\x60\x9e\x85\x60\x64\x60\x1a\x2e\x9a\x7a\x70\x34\x58\x87\xb5\x6a\x8e\x7e\x22\x81\x2d\x8a\x96\xdc\x7c\x64\x8f\x99\x64\xb1\x9d\xe0\x56\x1b\x8c\xb6\x93\x25\xa7\xe8\x1b\x7e\x7a\x7b\xdf\x65\x9d\x0f\x7e\x9a\xf1\x85\x27\xa7\x21\x76\x65\xcd\x23\x2c\xbc\xaa\x9a\xe8\xe5\xb1\xe8\xb7\xed\xbd\x8e\x22\x2c\x0a\x39\x0d\x86\x83\x8b\x35\x07\x9e\xac\xc0\x19\x2c\x9d\x6f\x38\xa7\xa7\xba\x3c\x59\xca\x87\xfc\x22\x2c\x26\xbf\x37\x22\xde\xcd\x9a\xdc\x5b\x1a\xda\x8e\x14\xc8\xa5\x2d\xeb\xbf\xa9\x80\xf1\xef\x9d\x1e\x75\xec\xf8\x3f\xce\xc9\x4f\x1d\xb9\xad\xae\x7a\x62\x7f\x2a\xa8\xab\x63\xaf\xaa\xab\x7f\x02\x00\x00\xff\xff\x58\x91\x10\x7d\x50\x16\x00\x00")

func templatesTypes_serviceGohtmlBytes() ([]byte, error) {
	return bindataRead(
		_templatesTypes_serviceGohtml,
		"templates/types_service.gohtml",
	)
}

func templatesTypes_serviceGohtml() (*asset, error) {
	bytes, err := templatesTypes_serviceGohtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "templates/types_service.gohtml", size: 5712, mode: os.FileMode(436), modTime: time.Unix(1543843328, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/schemas_body.gohtml":  templatesSchemas_bodyGohtml,
	"templates/schemas_head.gohtml":  templatesSchemas_headGohtml,
	"templates/types_body.gohtml":    templatesTypes_bodyGohtml,
	"templates/types_head.gohtml":    templatesTypes_headGohtml,
	"templates/types_service.gohtml": templatesTypes_serviceGohtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"templates": &bintree{nil, map[string]*bintree{
		"schemas_body.gohtml":  &bintree{templatesSchemas_bodyGohtml, map[string]*bintree{}},
		"schemas_head.gohtml":  &bintree{templatesSchemas_headGohtml, map[string]*bintree{}},
		"types_body.gohtml":    &bintree{templatesTypes_bodyGohtml, map[string]*bintree{}},
		"types_head.gohtml":    &bintree{templatesTypes_headGohtml, map[string]*bintree{}},
		"types_service.gohtml": &bintree{templatesTypes_serviceGohtml, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
